{"version":3,"sources":["Components/SwiperCss/CSwiperJss.tsx","Components/CSwiper.tsx","Components/Specific/DiscountTag.tsx","Components/CCard.tsx","ComponentFactory.tsx","Pages/Menu.tsx","Layout.tsx","Pages/Home.tsx","Components/Chart/Types/CChartStateTypes.ts","Components/Chart/CChartDataSchema.ts","Components/Chart/Types/CChartTypes.ts","Components/Chart/CChartLabel.tsx","Components/Chart/CChartCrosshair.tsx","Components/Chart/Charts/CCandleChart.tsx","Components/Chart/utils.ts","Components/Chart/Charts/CLineChart.tsx","Components/Chart/Charts/CBarChart.tsx","Components/Chart/Time/CChartDateTime.ts","Components/Chart/Time/CChartPeriod.ts","Components/Chart/CChartModel.ts","Components/Chart/Time/CChartDateStat.ts","Components/Chart/ChartState/CChartStateReducer.ts","Components/Chart/ChartState/CChartStateMethods.ts","Components/Chart/ChartState/CChartStateXaxis.ts","Components/Chart/ChartState/CChartStateYaxis.ts","Components/Chart/ChartState/CChartStateInteractions.ts","Components/Chart/ChartState/CChartState.ts","Components/Chart/Tools/CTrendline.tsx","Components/Chart/Tools/CVLine.tsx","Components/Chart/Tools/CHLine.tsx","Components/Chart/MuiTheme.ts","Components/Chart/Menu2/ChartMenuHome.tsx","Components/Chart/CIndicator.ts","Components/Chart/CTreeItem.tsx","Components/Chart/Colorpicker.tsx","Components/Chart/Menu2/ChartMenuIndicators.tsx","Components/Chart/Menu2/ChartMenuTools.tsx","Components/Chart/Menu2/ChartMenuSettings.tsx","Components/Chart/Menu2/ChartMenuQuickys.tsx","Components/Chart/Menu2/ChartMenu.tsx","Components/Chart/CChart.tsx","Pages/Chart.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["useSwiperGlobalStyles","makeStyles","theme","fontFamily","src","fontWeight","fontStyle","palette","secondary","main","marginLeft","marginRight","position","overflow","listStyle","padding","zIndex","height","flexDirection","width","display","transitionProperty","boxSizing","transform","flexWrap","transitionTimingFunction","margin","touchAction","flexShrink","maxWidth","backgroundRepeat","backgroundSize","backgroundPosition","visibility","alignItems","perspective","transformStyle","left","top","pointerEvents","backgroundImage","scrollbarWidth","msOverflowStyle","scrollSnapAlign","scrollSnapType","marginTop","cursor","justifyContent","color","opacity","fontSize","textTransform","letterSpacing","fallbacks","fontVariant","lineHeight","right","content","swiperNavigationColor","textAlign","transition","bottom","borderRadius","background","border","boxShadow","webkitAppearance","mozAppearance","appearance","whiteSpace","transformOrigin","swiperPaginationColor","msTouchAction","maxHeight","objectFit","animation","borderTopColor","swiperPreloaderColor","webkitBackfaceVisibility","backfaceVisibility","webkitFilter","filter","name","SwiperCore","use","Navigation","Pagination","Scrollbar","EffectCoverflow","EffectFade","EffectCube","EffectFlip","Autoplay","CSwiper","props","autoHeight","autoplay","breakpoints","centeredSlides","effect","freeMode","loop","loopFillGroupWithBlank","navigation","pagination","preloadImages","slideToClickedSlide","slidesOffsetAfter","slidesOffsetBefore","slidesPerGroup","slidesPerView","spaceBetween","speed","activeSlide","accentColor","CssBackgroundSize","slides","onSlideChange","other","ActiveSlideRef","React","useRef","SwiperInst","useEffect","current","undefined","length","slideTo","Fragment","initialSlide","onSwiper","swiper","activeIndex","style","map","slide","slideIdx","bgImgSrc","divContent","slideStyle","slideOtherProps","defaultProps","clickable","discountsDefaultProps","time","discount","size","paddingPercentOfSize","bgImgUrl","DiscountTag","Math","round","upperTextHeightPercent","lowerTextHeightPercent","heightUpperText","heightLowerText","gridTemplateRows","gridTemplateColumns","useStyles","headerAction","CCard","cardMaxWidth","elevation","footerContent","headerAvatar","headerSubTitle","headerTitle","imageSrc","imageToolTip","mediaContent","mediaHeight","muiCardActionAreaProps","muiCardActionsProps","muiCardContentProps","muiCardHeaderProps","muiCardMediaProps","muiCardProps","useActionArea","useContent","useFooter","useHeader","useMedia","onActionAreaClick","classes","headerProps","avatar","action","title","subheader","cardContent","CardMedia","image","CardContent","Card","CardHeader","CardActionArea","onClick","CardActions","createSkillChipSlide","Chip","label","Typography","variant","Search","hour","Date","getHours","useTheme","matches","useMediaQuery","up","spacing","List","component","aria-label","ListItem","button","ListItemIcon","path","mdiFire","primary","mdiClipboardCheck","mdiAccount","mdiCodeTags","justifySelf","type","justifyItems","IconButton","mdiLinkedin","mdiGithub","mdiMapMarker","mdiMail","Layout","menuOpen","setMenuOpen","console","log","imgHeader","overflowY","children","Container","disableGutters","Menu","paddingTop","Paper","e","stopPropagation","mdiClose","Fab","mdiChevronUp","mdiMenu","useSwiperStyles","Home","useState","Toggle","setToggle","activeLocationStyle","history","useHistory","Button","push","paddingBottom","isIndicatorGraph","graph","isChartGraph","chartDataSchema","minItems","items","properties","data","nullable","date","open","high","low","close","required","isCandleChartDataset","dataset","isLineChartDataset","isVolumeDataset","isIndicatorDataset","CChartLabel","decimals","startIcon","mdiChartBellCurve","mdiChartLine","prices","price","toFixed","join","CChartCrosshair","fullState","containerWidth","containerSize","containerHeight","widthYAxis","yaxis","xaxis","heightXAxis","heightTickMarkLines","pixYSnap","ySnap","pointer","move","xy","i","subCharts","subchart","j","graphs","chartPointer","snapDatasets","subchartIdx","findIndex","val","methods","pixToY","curgraph","indicator","default","parseFloat","pow","toString","x","y","points","xToPix","pixToX","stroke","strokeWidth","sceneFunc","context","shape","ctx","_context","yStart","moveTo","lineTo","fillStrokeShape","fill","font","fontName","fillStyle","fontColor","textBaseline","fillText","widthTickmarkLines","xUnlimited","xEnd","xStart","dateString","CCandleChart","curData","dxHalfCandle","forEach","valIdx","idx","widthPerTick","floor","beginPath","datasetIdx","xPix","pixXStart","yPixHigh","yToPix","yPixLow","yPixClose","closePath","candleStrokeColor","gainDataset","gainDatasetIdx","yPixOpen","pixXEnd","rect","candleUpColor","candleDownColor","isNullish","isNaN","getDecimals","split","includesOne","array","res","params","param","includes","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRgb","hex","replace","m","r","g","b","result","exec","parseInt","CLineChart","yaxisIdx","graphIdx","indSeriesIdxIn","indSeriesIdx","graphVals","Array","isArray","flat","graphValsNN","strokeColor","CBarChart","volume","yPixVol","yPix0","getDateString","period","format","getDateSubValue","getMinutes","getDate","getISOWeek","getMonth","getYear","getDateObject","minute","day","week","month","year","chartPeriods","minutes","scaleMultiplys","range","hours","days","weeks","months","years","getOptimalPeriod","metaData","noDataPortion","dateStat","chartPeriod","periodsConstIdx","chartPeriodName","nCurrent","curDateStat","Object","assign","nInDateStat","accAmt","keys","key","keyIdx","targetIntervals","opt","optPeriod","optMultiply","multiply","abs","isNewYear","curYearDateStat","thisMonthStat","isNewMonth","curMonthIdx","periodMultiply","isNewIsoWeek","curWeekIdx","daysInMonth","curDays","optWeekIdx","optimalDaysTarget","weekInMonth","isNewPeriod","optPeriodName","curYearStat","curMonthStat","curMonthStatIdx","indexOf","curWeekStat","curWeekStatIdx","curDayStat","curDayStatIdx","curDayIdx","isNewDay","getGraphMetaData","dataSeries","nData","getDeltaT","dataPoint1","dataPoint0","deltaPeriods","dT","amt","curWeek","curYear","curWeekDays","weekDays","deltaPeriod","iDataWeek","iyear","weekDaysFiltered","amtDays","weekDayIdx","occ","datasetDecimals","curDataset","maxDecimals","max","deltaTs","item","amts","maxIdx","reduce","arr","maxDaysPerWeekOccurences","totalOcc","maxDaysPerWeekOccIdx","maxDaysPerWeek","maxDaysPerWeekGuessConfidence","dataPeriod","dataPeriodKeys","chartPeriodKey","chartPeriodRange","getChartPeriod","periodGuessConfidence","tradingDaysPerWeek","tradingDaysPerWeekGuessConfidence","createSubChartModel","chartData","chartName","createYaxisModel","newGraph","createIndicatorGraphModel","createChartGraphModel","tools","translatedY","optIntervalY","heightPerPt","drawTicks","graphProps","stat","makeSingleDayStat","makeSingleWeekStat","makeSingleMonthStat","makeSingleYearStat","incrementPeriodAccAmt","addPeriod","curStatIdx","addOrIncrementPeriod","periodStat","periodStatFilter","filteredStatIdx","nextLowerPeriod","getDateStat","meta","yMax","yMaxExact","yMin","yMinExact","datasets","first","last","indicatorData","indicatorFn","decimalsData","graphColorsLight","getGraphColors","colorArr","isSetCandleChartUpColor","task","isSetCandleChartDownColor","isSetCandleChartStrokeColor","isSetToolStrokeColorAction","isSetToolAnchorColor","chartStateReducer","isAddSubchartAction","chartSeries","minMainHeight","heightNewSubchart","min","subChart","subChartIdx","isRemoveSubchartAction","dHeight","dHeightEach","dHeightRest","slice","subchartSliced","subchartSlicedIdx","isRemoveGraphAction","isAddGraphAction","isDrawAction","draw","isDrawing","pixXy","isSetBackgroundColorAction","backgroundColor","isSetGridStrokeColorAction","grid","isSetAxisFillColorAction","fillColor","isSetAxisStrokeColorAction","isSetAxisTextColorAction","isToggleXaxisGridAction","useGridX","isToggleYaxisGridAction","useGridY","isToggleFullscreenAction","fullscreen","isSetLineChartStrokeColor","prop","toolIdx","isSetIndicatorParam","paramIdx","indicatorGraph","fn","srcData","isSetHlineYlevelAction","newAnchor","isUpdateInteractionState","newState","getChartMethods","ChartState","Dispatch","addGraph","addSubchart","getSubchart","getYaxis","getGraph","translatedX","totalTranslatedX","pixX","stateTranslatedY","translatedYint","pixY","pureXToPix","translated","purePixToX","pureYToPix","pixYBottom","pixPerPt","purePixToY","snapPixYToPrices","subcharts","snapTolerance","snapTol","snapRes","priceIdx","yPixPrice","sort","a","calculateCurrentGraphs","pixXstart","pixXend","calculatedSubcharts","mainYaxis","yMinExactAllGraphs","yMaxExactAllGraphs","graphM","fixedYScale","intervalsTarget","dec","targetSteps","initIntervalStep","curIntervalStep","optIntervalStep","optimizationFunction","steps","optimizer","factor","curOptimizerRes","GetYOptInterval","yMaxAllGraphs","yMinAllGraphs","ceil","y_bottom","yi","yvalstr","getSubchartIdxByVector","getDragActionType","dragInitXy","isEditing","canvasWidth","canvasHeight","init","editToolPath","toolsIdx","scaledWidthPerTick","singleYaxis","singleYaxisIdx","tool","anchorXy","anchorIdx","getToolsByXy","resizeSubchartIdx","getSubchartIdxByBottom","initBottom","editToolPosition","dragActionType","curPixX","pixXSnap","drag","curPixY","initX","initial","subIdx","yAdjusted","localInitY","newPixX","newPixY","newX","newY","toolsSubIdx","toolsYaxisIdx","resizeSubchart","newBottom","addToolAnchor","drawToolType","dragpixXy","dequal","require","defaultState","totalScaleX","startNoDataPeriod","endNoDataPeriod","noDataPeriodPortion","optPeriodRes","xAxisTicks","strokeStyle","isHovering","isMoving","wheel","isWheeling","delta","dragPointerUp","isDragPointerUp","movementInitial","isDragging","xDateString","click","clickedSubchartIdx","useChartState","HtmlElementRef","settings","maxUpdatesPerSec","initWidthPerTick","viewModeInternal","viewMode","useReducer","PreStateRef","tmp","scaleInitWidthPerTick","scaleInitTranslatedX","lastUpdate","shallUpdate","userInteractedChartState","useGesture","onDrag","dragState","deltaX","deltaY","movement","active","onMove","moveState","onHover","hoverState","onWheel","wheelState","onDragEnd","domTarget","useTouch","experimental_preventWindowScrollY","clientWidth","clientHeight","getBoundingClientRect","handleWindowResize","parentElement","addEventListener","window","removeEventListener","userInteractedSubcharts","addIndicatorDeps","onTimer","PreState","DragEndState","DragState","currentPointer","widthYaxis","widthChart","heightChart","heightXaxis","calcSubcharts","calcXaxis","calcDraw","dHproportionalTmp","newMainSizeTmp","dHeightMain","dHeightSingleSubchart","rest","currentRest","lastBottom","correctRest","tempRest","sign","newTop","dragInit","mainGraph","currentXaxis","initWidthTickX","shallUpdateDrag","clickedChart","clickedXaxis","nDatasets","wheeldY","initWheelMousePos","scaleFn","translatedXonStart","initPixX","initXexact","getInteractiveXaxisState","translatedPixX","nMainData","pixXi","xi","periodToDraw","calculateCurrentXaxis","calcCurrentSubchart","xpointerRes","xIdx","xPointerUnlimited","xPointer","xPointerDateStr","pixXPointer","calculateXPointer","xpointer","xpointerUnlimited","xPointerDateString","getSubchartIdx","snapPriceRes","calculateCurrentPointerDataset","nPoints","xyArr","pixXyIdx","anchorColor","addTool","state","handleTimer","setInterval","clearInterval","CTrendline","mode","subchartTop","subchartBottom","modeInt","pixXyAdjusted","dx","dy","slope","pixYTarget","pixXTarget","pixYSrc","pixXSrc","radius","CVline","CHline","muiTheme","localTheme","createMuiTheme","typography","h1","h2","h3","h4","h5","h6","responsiveFontSizes","ChartMenuHome","onNavigate","minWidth","contrastText","ListItemText","primaryTypographyProps","mdiPencilRuler","mdiTune","mdiStarShooting","iSMA","srcChartData","srcChartName","srcDataset","srcDatasetIdx","singleSmaAcc","selSrcDataset","newSubchart","iEMACalc","initSMA","multiplier","ema","iEMA","iATR","singleValAcc","dataset1","singleAtr","hl","hc1","lc1","iRSI","calcData","dClose","dwn","w","lastUpEma","lastDwnEma","upSmoothed","dwnSmoothed","rsi","iOBV","obv","iVolume","iMACD","periodEmaShort","periodEmaLong","periodSignal","emaShort","emaLong","macd","emaLongVal","emaShortVal","priceLabels","signal","macdComplete","macdVal","macdIdx","macdValPrice","signalVal","macdHistogramm","useTreeItemStyles","createStyles","root","text","hover","grey","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeightMedium","fontWeightRegular","group","paddingLeft","expanded","selected","labelRoot","labelRootBtn","btnLabel","labelIcon","labelText","flexGrow","CTreeItem","LabelIcon","labelInfo","bgColor","onLabelClick","onIconClick","labelTypographyVariant","infoTypographyVariant","labelTypographyColor","infoTypographyColor","TreeItem","className","rgbaColor","ColorRect","container","Colorpicker","onColorSelected","Open","setOpen","ColorHover","setColorHover","InputRef","isHex","test","hexToRgbRes","isRgb","match","isRgba","rgbInternal","colorNameRes","alphaProp","AlphaVal","setAlphaVal","ref","Popover","id","anchorEl","onClose","anchorOrigin","vertical","horizontal","Grid","alignContent","justify","clr","clrIdx","xs","onMouseOver","onMouseLeave","Slider","value","onChange","TextField","inputProps","target","borderTop","align","fullWidth","onIndicatorLabelClick","indi","CIndicatorGraphTreeItem","ChartStateDispatch","graphGeneric","nodeId","Icon","preventDefault","mdiBorderColor","mdiIframeVariableOutline","defaultValue","ChartMenuIndicators","FilterCat","setFilterCat","categorys","icon","mdiDiameterVariant","mdiArrowExpandVertical","mdiPoll","indicators","category","amtIndicators","yaxixsIdx","fgraph","acc","cur","ToggleButtonGroup","exclusive","ToggleButton","borderBottomLeftRadius","borderTopLeftRadius","light","alert","mdiMagnify","mdiSortAlphabeticalAscending","mdiFilter","TreeView","defaultCollapseIcon","mdiMenuDown","defaultExpandIcon","mdiMenuRight","defaultEndIcon","disableSelection","cat","catIdx","indiIdx","onToolLabelClick","CToolTreeItem","toolIn","mdiMinus","mdiHelp","rotate","mdiArrowSplitHorizontal","mdiBullseye","ChartMenuTools","mdiRuler","mdiRulerSquareCompass","amtTools","ChartMenuSettings","setAnchorEl","handleClose","event","currentTarget","keepMounted","Boolean","MenuItem","mdiFileChartOutline","mdiWater","mdiFormatText","mdiGrid","Checkbox","checked","mdiChartAreaspline","ChartMenuQuickys","mdiBroom","paper","minHeight","paperDesktop","CChartMenu2","isMinSm","Drawer","anchor","ModalProps","hideBackdrop","mdiHome","mdiFullscreen","ajv","Ajv","CChart","ContainerRef","setChartMenuActive","ChartMenu2Open","setChartMenu2Open","isContainerInit","validate","compile","errors","xAxis","ThemeProvider","listening","stateGraph","indicatorType","indicatorLines","indicatorDataSeries","indDataSeriesIdx","xaxisTick","xaxisTickIdx","yaxisTick","yaxisTickIdx","tmpDataset","parseDate","timeParse","ChartTest","Data","setData","fetch","then","response","csvParse","parse","d","routes","exact","overrides","MuiCssBaseline","body","App","MenuOpen","setMenuState","basename","route","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sXAEaA,EAAwBC,aACnC,SAACC,GAAD,MAAmB,CACjB,UAAW,CACT,aAAc,CACZC,WAAY,iBACZC,IACE,0sEACFC,WAAY,MACZC,UAAW,UAEb,QAAS,CACP,uBAAwBJ,EAAMK,QAAQC,UAAUC,KAChD,2BAA4B,QAE9B,oBAAqB,CACnBC,WAAY,OACZC,YAAa,OACbC,SAAU,WACVC,SAAU,SACVC,UAAW,OACXC,QAAS,IACTC,OAAQ,IACRC,OAAQ,IAEV,+CAAgD,CAC9CC,cAAe,UAEjB,kBAAmB,CACjBN,SAAU,WACVO,MAAO,OACPF,OAAQ,OACRD,OAAQ,IACRI,QAAS,OACTC,mBAAoB,YACpBC,UAAW,eAEb,2DAA4D,CAC1DC,UAAW,0BAEb,+CAAgD,CAC9CC,SAAU,QAEZ,sDAAuD,CACrDA,SAAU,OACVN,cAAe,UAEjB,gDAAiD,CAC/CO,yBAA0B,WAC1BC,OAAQ,UAEV,mCAAoC,CAClCC,YAAa,SAEf,6DAA8D,CAC5DA,YAAa,SAEf,gBAAiB,CACfC,WAAY,IACZT,MAAO,OACPP,SAAU,WACVS,mBAAoB,YACpBQ,SAAU,OACVZ,OAAQ,OACRa,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,UAEtB,gCAAiC,CAC/BC,WAAY,UAEd,2EAA4E,CAC1EhB,OAAQ,QAEV,+CAAgD,CAC9CiB,WAAY,aACZb,mBAAoB,qBAEtB,uBAAwB,CACtBc,YAAa,MAEf,uTAAwT,CACtTC,eAAgB,eAElB,mMAAoM,CAClMxB,SAAU,WACVyB,KAAM,IACNC,IAAK,IACLnB,MAAO,OACPF,OAAQ,OACRsB,cAAe,OACfvB,OAAQ,MAEV,iDAAkD,CAChDwB,gBAAiB,kEAEnB,kDAAmD,CACjDA,gBAAiB,mEAEnB,gDAAiD,CAC/CA,gBAAiB,iEAEnB,mDAAoD,CAClDA,gBAAiB,oEAEnB,+CAAgD,CAC9C3B,SAAU,OACV4B,eAAgB,OAChBC,gBAAiB,QAEnB,kEAAmE,CACjEtB,QAAS,QAEX,+DAAgE,CAC9DuB,gBAAiB,eAEnB,2EAA4E,CAC1EC,eAAgB,eAElB,yEAA0E,CACxEA,eAAgB,eAElB,2CAA4C,CAC1ChC,SAAU,WACV0B,IAAK,MACLnB,MAAO,gDACPF,OAAQ,gCACR4B,UAAW,+CACX7B,OAAQ,KACR8B,OAAQ,UACR1B,QAAS,OACTc,WAAY,SACZa,eAAgB,SAChBC,MAAO,6DAET,yFAA0F,CACxFC,QAAS,OACTH,OAAQ,OACRP,cAAe,QAEjB,uDAAwD,CACtDpC,WAAY,eACZ+C,SAAU,gCACVC,cAAe,OACfC,cAAe,IACfC,UAAW,CACT,CACEF,cAAe,oBAGnBG,YAAa,UACbC,WAAY,KAEd,iEAAkE,CAChElB,KAAM,GACNmB,MAAO,QAET,6EAA8E,CAC5EC,QAAS,UAEX,iEAAkE,CAChED,MAAO,GACPnB,KAAM,QAER,6EAA8E,CAC5EoB,QAAS,UAEX,mFAAoF,CAClFC,sBAAuB,QAEzB,mFAAoF,CAClFA,sBAAuB,QAEzB,sBAAuB,CACrBtC,QAAS,QAEX,qBAAsB,CACpBR,SAAU,WACV+C,UAAW,SACXC,WAAY,gBACZrC,UAAW,uBACXP,OAAQ,MAEV,8CAA+C,CAC7CiC,QAAS,KAEX,oHAAqH,CACnHY,OAAQ,GACRxB,KAAM,IACNlB,MAAO,QAET,qCAAsC,CACpCN,SAAU,SACVqC,SAAU,KAEZ,+DAAgE,CAC9D3B,UAAW,cACXX,SAAU,YAEZ,sEAAuE,CACrEW,UAAW,YAEb,2EAA4E,CAC1EA,UAAW,YAEb,2EAA4E,CAC1EA,UAAW,eAEb,gFAAiF,CAC/EA,UAAW,eAEb,2EAA4E,CAC1EA,UAAW,eAEb,gFAAiF,CAC/EA,UAAW,eAEb,4BAA6B,CAC3BJ,MAAO,EACPF,OAAQ,EACRG,QAAS,eACT0C,aAAc,MACdC,WAAY,OACZd,QAAS,OAEX,kCAAmC,CACjCe,OAAQ,OACRtC,OAAQ,IACRX,QAAS,IACTkD,UAAW,OACXC,iBAAkB,OAClBC,cAAe,OACfC,WAAY,QAEd,yDAA0D,CACxDtB,OAAQ,WAEV,mCAAoC,CAClCG,QAAS,IACTc,WAAY,6DAEd,0DAA2D,CACzDP,MAAO,GACPlB,IAAK,MACLf,UAAW,6BAEb,oFAAqF,CACnFG,OAAQ,QACRN,QAAS,SAEX,4FAA6F,CAC3FkB,IAAK,MACLf,UAAW,mBACXJ,MAAO,GAET,sHAAuH,CACrHC,QAAS,eACTwC,WAAY,8BAEd,sFAAuF,CACrFlC,OAAQ,SAEV,8FAA+F,CAC7FW,KAAM,MACNd,UAAW,mBACX8C,WAAY,UAEd,wHAAyH,CACvHT,WAAY,+BAEd,mHAAoH,CAClHA,WAAY,gCAEd,iCAAkC,CAChCG,WAAY,sBACZnD,SAAU,YAEZ,qEAAsE,CACpEmD,WAAY,4DACZnD,SAAU,WACVyB,KAAM,IACNC,IAAK,IACLnB,MAAO,OACPF,OAAQ,OACRM,UAAW,WACX+C,gBAAiB,YAEnB,2FAA4F,CAC1FA,gBAAiB,aAEnB,oKAAqK,CACnKnD,MAAO,OACPF,OAAQ,EACRoB,KAAM,IACNC,IAAK,KAEP,oKAAqK,CACnKnB,MAAO,EACPF,OAAQ,OACRoB,KAAM,IACNC,IAAK,KAEP,2BAA4B,CAC1BiC,sBAAuB,QAEzB,2BAA4B,CAC1BA,sBAAuB,QAEzB,0BAA2B,CACzBnD,QAAS,QAEX,oBAAqB,CACnB0C,aAAc,GACdlD,SAAU,WACV4D,cAAe,OACfT,WAAY,sBAEd,mDAAoD,CAClDnD,SAAU,WACVyB,KAAM,KACNwB,OAAQ,EACR7C,OAAQ,KACRC,OAAQ,EACRE,MAAO,OAET,iDAAkD,CAChDP,SAAU,WACV4C,MAAO,EACPlB,IAAK,KACLtB,OAAQ,KACRG,MAAO,EACPF,OAAQ,OAEV,yBAA0B,CACxBA,OAAQ,OACRE,MAAO,OACPP,SAAU,WACVmD,WAAY,qBACZD,aAAc,GACdzB,KAAM,IACNC,IAAK,KAEP,gCAAiC,CAC/BQ,OAAQ,QAEV,yBAA0B,CACxB1B,QAAS,QAEX,yBAA0B,CACxBD,MAAO,OACPF,OAAQ,OACRG,QAAS,OACT2B,eAAgB,SAChBb,WAAY,SACZyB,UAAW,UAEb,8FAA+F,CAC7F9B,SAAU,OACV4C,UAAW,OACXC,UAAW,WAEb,uBAAwB,CACtB5B,OAAQ,QAEV,yBAA0B,CACxB3B,MAAO,GACPF,OAAQ,GACRL,SAAU,WACVyB,KAAM,MACNC,IAAK,MACL5B,YAAa,GACbmC,WAAY,GACZ7B,OAAQ,KACRsD,gBAAiB,MACjBK,UAAW,2CACXrD,UAAW,aACX0C,OAAQ,qEACRF,aAAc,MACdc,eAAgB,eAElB,+BAAgC,CAC9BC,qBAAsB,QAExB,+BAAgC,CAC9BA,qBAAsB,QAExB,mCAAoC,CAClC,OAAQ,CACNtD,UAAW,mBAGf,yCAA0C,CACxCX,SAAU,WACVyB,KAAM,IACNC,IAAK,IACLC,cAAe,OACfU,QAAS,IACTjC,OAAQ,SAEV,kEAAmE,CACjES,yBAA0B,YAE5B,uCAAwC,CACtCc,cAAe,OACflB,mBAAoB,WAEtB,qDAAsD,CACpDkB,cAAe,QAEjB,gHAAiH,CAC/GA,cAAe,QAEjB,yBAA0B,CACxB1B,SAAU,WAEZ,uCAAwC,CACtC0B,cAAe,OACfuC,yBAA0B,SAC1BC,mBAAoB,SACpB/D,OAAQ,IACRiB,WAAY,SACZqC,gBAAiB,MACjBnD,MAAO,OACPF,OAAQ,QAEV,qDAAsD,CACpDsB,cAAe,QAEjB,4DAA6D,CAC3D+B,gBAAiB,UAEnB,gHAAiH,CAC/G/B,cAAe,QAEjB,+LAAgM,CAC9LA,cAAe,OACfN,WAAY,WAEd,2MAA4M,CAC1MjB,OAAQ,IACR8D,yBAA0B,SAC1BC,mBAAoB,UAEtB,6CAA8C,CAC5CnE,SAAU,WACVyB,KAAM,IACNwB,OAAQ,EACR1C,MAAO,OACPF,OAAQ,OACRgC,QAAS,MACTjC,OAAQ,KAEV,oDAAqD,CACnDyC,QAAS,KACTM,WAAY,OACZnD,SAAU,WACVyB,KAAM,IACNC,IAAK,IACLuB,OAAQ,IACRL,MAAO,IACPwB,aAAc,aACdC,OAAQ,cAEV,yBAA0B,CACxBpE,SAAU,WAEZ,uCAAwC,CACtC0B,cAAe,OACfuC,yBAA0B,SAC1BC,mBAAoB,SACpB/D,OAAQ,KAEV,qDAAsD,CACpDuB,cAAe,QAEjB,gHAAiH,CAC/GA,cAAe,QAEjB,2MAA4M,CAC1MvB,OAAQ,IACR8D,yBAA0B,SAC1BC,mBAAoB,cAI1B,CAAEG,KAAM,Y,OCpdVC,IAAWC,IAAI,CACbC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,MAkBF,IA2BaC,EAAqD,SAACC,GAAW,IAG1EC,EA2BED,EA3BFC,WACAC,EA0BEF,EA1BFE,SACAC,EAyBEH,EAzBFG,YACAC,EAwBEJ,EAxBFI,eACAC,EAuBEL,EAvBFK,OACAC,EAsBEN,EAtBFM,SACAC,EAqBEP,EArBFO,KACAC,EAoBER,EApBFQ,uBACAC,EAmBET,EAnBFS,WACAC,EAkBEV,EAlBFU,WACAC,EAiBEX,EAjBFW,cACAC,EAgBEZ,EAhBFY,oBACAC,EAeEb,EAfFa,kBACAC,EAcEd,EAdFc,mBACAC,EAaEf,EAbFe,eACAC,EAYEhB,EAZFgB,cACAC,EAWEjB,EAXFiB,aACAC,EAUElB,EAVFkB,MAGAC,GAOEnB,EARFoB,YAQEpB,EAPFmB,aAEAhG,GAKE6E,EANFqB,kBAMErB,EALF7E,QACAY,EAIEiE,EAJFjE,SACAuF,EAGEtB,EAHFsB,OACAC,EAEEvB,EAFFuB,cACGC,EA7BsE,YA8BvExB,EA9BuE,4WAgCrEyB,EAAiBC,IAAMC,OAAiBR,GAA4B,GACpES,EAAaF,IAAMC,OAAyB,MACtBzH,IAY5B,OAVAwH,IAAMG,WAAU,WACRD,EAAWE,cAA2BC,IAAhBZ,GACtBA,GAAe,GAAKA,EAAcS,EAAWE,QAAQR,OAAOU,QAC1Db,IAAgBM,EAAeK,SACjCF,EAAWE,QAAQG,QAAQd,KAIhC,CAACA,IAGF,cAAC,IAAMe,SAAP,UACE,cAAC,IAAD,yBACEjB,aAAcA,EACdD,cAAeA,EACfZ,eAAgBA,EAChBW,eAAgBA,EAChBoB,aAAchB,EACdD,MAAOA,EACPb,OAAQA,EACRH,SAAUA,EACVD,WAAYA,EACZW,oBAAqBA,EACrBN,SAAUA,EACVH,YAAaA,EACbI,KAAMA,EACNC,uBAAwBA,EACxBG,cAAeA,EACfG,mBAAoBA,EACpBD,kBAAmBA,EACnBJ,WAAYA,EACZC,WAAYA,EACZ0B,SAAU,SAACC,GACTT,EAAWE,QAAUO,GAEvBd,cAAe,SAACc,GACdZ,EAAeK,QAAUO,EAAOC,YACnB,OAAbf,QAAa,IAAbA,KAAgBc,IAGlBE,MAAO,CACLpH,OAAQA,EACRY,SAAUA,IAERyF,GAhCN,aAkCKF,EACCA,EAAOkB,KAAI,SAACC,EAAOC,GAAc,IACvBC,EAAgEF,EAAhEE,SAAUC,EAAsDH,EAAtDG,WAAmBC,EAAmCJ,EAA1CF,MAAsBO,EADtB,YAC0CL,EAD1C,mCAE9B,OACE,cAAC,IAAD,yBAEEF,MAAK,2BAAOM,GAAP,IAAmBrH,UAAW,aAAckB,gBAAgB,OAAD,OAASiG,EAAT,QAC5DG,GAHN,aAKGF,IAJIF,MAQX,WAKZ3C,EAAQgD,aA/HsC,CAE5C9C,YAAY,EACZC,UAAU,EACVE,gBAAgB,EAChBC,OAAQ,QACRC,UAAU,EACVC,MAAM,EACNC,wBAAwB,EACxBC,YAAY,EACZC,WAAY,CAAEsC,WAAW,GACzBrC,eAAe,EACfC,qBAAqB,EACrBC,kBAAmB,EACnBC,mBAAoB,EACpBC,eAAgB,EAChBC,cAAe,EACfC,aAAc,EACdC,MAAO,IAEPE,YAAa,UACbD,YAAa,EACbE,kBAAmB,QACnBlG,OAAQ,OACRY,SAAU,QAwGGgE,Q,gCClKTkD,EAA8C,CAClDC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,qBAAsB,GACtBC,SAAU,oFAGCC,EAAc,WAA0D,IAAzDvD,EAAwD,uDAA1BiD,EAChDC,EAAiElD,EAAjEkD,KAAMC,EAA2DnD,EAA3DmD,SADoE,EACTnD,EAAjDoD,YAD0D,MACnD,GADmD,EAC/CE,EAAsCtD,EAAtCsD,SAD+C,EACTtD,EAA5BqD,4BADqC,MAChB,GADgB,EAG5EpI,EAAUuI,KAAKC,MAAMJ,EAAqB,IAAMD,GAChDM,EAAyB,GACzBC,EAAyB,GACzBC,EAAkBJ,KAAKC,OAASL,EAAO,EAAInI,GAAWyI,EAA0B,IAAO,IACvFG,EAAkBL,KAAKC,OAASL,EAAO,EAAInI,GAAW0I,EAA0B,IAAO,KAE7F,OACE,sBACEpB,MAAO,CACLpH,OAAQiI,EACR/H,MAAO+H,EACPrH,SAAUqH,EACVnF,WAAW,OAAD,OAASqF,EAAT,KACVrH,eAAgB,QAChB4B,UAAW,SACX5C,QAASA,EACTO,UAAW,aACX0B,MAAO,OACP5B,QAAS,OACTwI,iBAAiB,GAAD,OAAKJ,EAAL,aAAgCC,EAAhC,KAChBI,oBAAqB,MACrB3H,WAAY,SACZR,OAAQ,GAfZ,UAmBE,8BACE,mBAAG2G,MAAO,CAAEnF,SAAUwG,EAAiBhI,OAAQ,GAA/C,SAAqDsH,MAEvD,8BACE,mBAAGX,MAAO,CAAEnF,SAAUyG,EAAiBjI,OAAQ,EAAGrB,WAAY,KAA9D,SAAsE4I,UAK9EI,EAAYR,aAAeE,EACZM,I,sDChDTS,EAAY7J,YAAW,CAC3B8J,aAAc,CACZrI,OAAQ,KAmGCsI,EAAQ,SAAClE,GAA2B,IAE7CmE,EAwBEnE,EAxBFmE,aACAxG,EAuBEqC,EAvBFrC,QACAyG,EAsBEpE,EAtBFoE,UACAC,EAqBErE,EArBFqE,cACAJ,EAoBEjE,EApBFiE,aACAK,EAmBEtE,EAnBFsE,aACAC,EAkBEvE,EAlBFuE,eACAC,EAiBExE,EAjBFwE,YACAC,EAgBEzE,EAhBFyE,SACAC,EAeE1E,EAfF0E,aACAC,EAcE3E,EAdF2E,aACAC,EAaE5E,EAbF4E,YACAC,EAYE7E,EAZF6E,uBACAC,EAWE9E,EAXF8E,oBACAC,EAUE/E,EAVF+E,oBACAC,EASEhF,EATFgF,mBACAC,EAQEjF,EARFiF,kBACAC,EAOElF,EAPFkF,aACAC,EAMEnF,EANFmF,cACAC,EAKEpF,EALFoF,WACAC,EAIErF,EAJFqF,UACAC,EAGEtF,EAHFsF,UACAC,EAEEvF,EAFFuF,SAxB4C,EA0B1CvF,EADFwF,yBAzB4C,WAyBxBzD,EAzBwB,EA4BxC0D,EAAUzB,IAEV0B,EAAmB,GACnBpB,IAAcoB,EAAYC,OAASrB,GACnCL,IAAcyB,EAAYE,OAAS3B,GACnCO,IAAakB,EAAYG,MAAQrB,GACjCD,IAAgBmB,EAAYI,UAAYvB,GAE9C,IAAMwB,EACJ,eAAC,IAAM7D,SAAP,WACGqD,EACC,cAACS,EAAA,EAAD,yBACEC,MAAOxB,EACPoB,MAAOnB,EACPnC,MAAO,CAAEpH,OAAQyJ,EAAa9J,SAAU,WAAY0B,IAAK,IACrDyI,GAJN,aAMGN,KAED,KACHS,EAAa,cAACc,EAAA,EAAD,2BAAiBnB,GAAjB,aAAuCpH,KAAyB,QAIlF,OACE,eAACwI,EAAA,EAAD,yBAAM/B,UAAWA,EAAW7B,MAAO,CAAExG,SAAUoI,IAAoBe,GAAnE,cACGI,EACC,cAACc,EAAA,EAAD,yBAAYX,QAAS,CAAEG,OAAQH,EAAQxB,eAAoByB,GAAiBV,IAC1E,KACHG,EACC,cAACkB,EAAA,EAAD,yBAAgBC,QAASd,GAAuBX,GAAhD,aACGkB,KAGHA,EAEDV,EAAY,cAACkB,EAAA,EAAD,2BAAiBzB,GAAjB,aAAuCT,KAA+B,UAIzFH,EAAMnB,aAnGoC,CACxCoB,aAAc,IACdxG,QAAS,KACTyG,UAAW,EACXC,cAAe,KACfJ,aAAc,KACdK,aAAc,KACdC,eAAgB,KAChBC,YAAa,KACbC,SAAU,IACVC,aAAc,GACdC,aAAc,KACdC,YAAa,IACbC,uBAAwB,GACxBC,oBAAqB,GACrBC,oBAAqB,GACrBC,mBAAoB,GACpBC,kBAAmB,GACnBC,aAAc,GACdC,eAAe,EACfC,YAAY,EACZC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,uBAAmBzD,GA4ENmC,I,iBCzEFsC,EAAuB,SAACX,EAAetD,EAAa+D,GAC/D,MAAO,CACL/D,MAAO,CACLlH,MAAO,eAETuH,WACE,cAAC6D,EAAA,EAAD,CACEC,MAAO,cAACC,EAAA,EAAD,UAAad,IACpB7C,WAAW,EACX4D,QAAQ,WACRxD,KAAK,SACLb,MAAOA,EACP+D,QAASA,M,4FCmBFO,GA/GO,SAAC7G,GACrB,IACM8G,GADM,IAAIC,MACCC,WAGbF,EAAO,EAAI,IACAA,EAAO,EAAI,GAI1B,IAAM1M,EAAQ6M,cACRC,EAAUC,YAAc/M,EAAM+F,YAAYiH,GAAG,OACnD,OACE,gCACE,sBACE7E,MAAO,CACLjH,QAAS,OACTyI,oBAAqB,aACrB3H,WAAY,SACZW,UAAamK,EAAU9M,EAAMiN,QAAQ,GAAKjN,EAAMiN,QAAQ,MAL5D,UAQE,8BACE,eAACC,GAAA,EAAD,CAAMC,UAAU,MAAMC,aAAW,uBAAjC,UACE,eAACC,GAAA,EAAD,CAAUC,QAAM,EAACnF,MAAO,CAAE3G,OAAO,GAAD,OAAKxB,EAAMiN,QAAQ,GAAnB,OAAhC,UACE,cAACM,GAAA,EAAD,UACE,cAAC,IAAD,CAAMC,KAAMC,IAAS3K,MAAO9C,EAAMK,QAAQqN,QAAQnN,KAAMyI,KAAM,WAEhE,cAACuD,EAAA,EAAD,CAAYC,QAAQ,KAAKW,UAAU,MAAnC,qBAIF,eAACE,GAAA,EAAD,CAAUC,QAAM,EAACnF,MAAO,CAAE3G,OAAO,GAAD,OAAKxB,EAAMiN,QAAQ,GAAnB,OAAhC,UACE,cAACM,GAAA,EAAD,UACE,cAAC,IAAD,CAAMC,KAAMG,IAAmB7K,MAAO9C,EAAMK,QAAQqN,QAAQnN,KAAMyI,KAAM,WAE1E,cAACuD,EAAA,EAAD,CAAYC,QAAQ,KAAKW,UAAU,MAAnC,yBAIF,eAACE,GAAA,EAAD,CAAUC,QAAM,EAACnF,MAAO,CAAE3G,OAAO,GAAD,OAAKxB,EAAMiN,QAAQ,GAAnB,OAAhC,UACE,cAACM,GAAA,EAAD,UACE,cAAC,IAAD,CAAMC,KAAMI,IAAY9K,MAAO9C,EAAMK,QAAQqN,QAAQnN,KAAMyI,KAAM,WAEnE,cAACuD,EAAA,EAAD,CAAYC,QAAQ,KAAKW,UAAU,MAAnC,yBAIF,eAACE,GAAA,EAAD,CAAUC,QAAM,EAACnF,MAAO,CAAE3G,OAAO,GAAD,OAAKxB,EAAMiN,QAAQ,GAAnB,OAAhC,UACE,cAACM,GAAA,EAAD,UACE,cAAC,IAAD,CAAMC,KAAMK,IAAa/K,MAAO9C,EAAMK,QAAQqN,QAAQnN,KAAMyI,KAAM,WAEpE,cAACuD,EAAA,EAAD,CAAYC,QAAQ,KAAKW,UAAU,MAAnC,4BAMN,qBAAKhF,MAAO,CAAE2F,YAAa,UAA3B,SACE,qBACE5N,IAAI,iEACJiI,MAAO,CAAEvE,aAAc,MAAO3C,MAAO,WAI3C,qBAAKkH,MAAO,CAAExF,UAAamK,EAAU9M,EAAMiN,QAAQ,GAAKjN,EAAMiN,QAAQ,IAAtE,SACE,cAAC,EAAD,CACEpG,aAAc,GACdD,cAAe,OACfP,YAAY,EACZC,WAAY,CAAEyH,KAAM,eACpB7H,UAAU,EACVnF,OAAQ,GACRmG,OAAQ,CACNkF,EAAqB,YAAa,CAAEvI,WAAY7D,EAAMK,QAAQqN,QAAQnN,OACtE6L,EAAqB,aAAc,CAAEvI,WAAY7D,EAAMK,QAAQqN,QAAQnN,OACvE6L,EAAqB,QAAS,CAAEvI,WAAY7D,EAAMK,QAAQqN,QAAQnN,OAClE6L,EAAqB,UAAW,CAAEvI,WAAY7D,EAAMK,QAAQqN,QAAQnN,OACpE6L,EAAqB,cAAe,CAAEvI,WAAY7D,EAAMK,QAAQqN,QAAQnN,OACxE6L,EAAqB,aAAc,CAAEvI,WAAY,SACjDuI,EAAqB,UAAW,CAAEvI,WAAY,SAC9CuI,EAAqB,OAAQ,CAAEvI,WAAY,cAIjD,qBACEsE,MAAO,CACLjH,QAAS,OACTc,WAAY,SACZgM,aAAc,SACdrL,UAAamK,EAAU9M,EAAMiN,QAAQ,GAAKjN,EAAMiN,QAAQ,IAL5D,SAQE,gCACE,cAACgB,EAAA,EAAD,CAAYnL,MAAM,UAAUkG,KAAK,QAAQkD,QAAS,aAAlD,SACE,cAAC,IAAD,CAAMsB,KAAMU,IAAalF,KAAM,WAEjC,cAACiF,EAAA,EAAD,CAAYnL,MAAM,UAAUkG,KAAK,QAAQkD,QAAS,aAAlD,SACE,cAAC,IAAD,CAAMsB,KAAMW,IAAWnF,KAAK,WAE9B,cAACiF,EAAA,EAAD,CAAYnL,MAAM,UAAUkG,KAAK,QAAQkD,QAAS,aAAlD,SACE,cAAC,IAAD,CAAMsB,KAAMY,IAAcpF,KAAK,WAEjC,cAACiF,EAAA,EAAD,CAAYnL,MAAM,UAAUkG,KAAK,SAASkD,QAAS,aAAnD,SACE,cAAC,IAAD,CAAMsB,KAAMa,IAASrF,KAAK,oBC/BvBsF,GA5FO,SAAC1I,GAAgB,IAC3B2I,EAA0B3I,EAA1B2I,SAAUC,EAAgB5I,EAAhB4I,YAOZxO,EAAQ6M,cACRC,EAAUC,YAAc/M,EAAM+F,YAAYiH,GAAG,OACnDyB,QAAQC,IAAIH,GACZ,IAAMI,EAAaJ,EAAqD,iCAA1C,wCAC9B,OACE,sBAAKpG,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGD,KAAM,EAAGlB,MAAO,OAAQF,OAAQ,OAAQ6N,UAAW,UAA/F,UACE,qBAAKzG,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGD,KAAM,EAAGlB,MAAO,OAAQF,OAAQ,QAA5E,SAAuF6E,EAAMiJ,WAC7F,qBAAK1G,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGD,KAAM,EAAGlB,MAAO,OAAQF,OAAQ,OAAQD,OAAQ,KAA5F,SAEE,qBACEqH,MAAO,CACLpG,WAAawM,EAAsB,UAAX,SACxB7N,SAAU,WACV0B,IAAK,EACLnB,MAAO,OACPF,OAAU+L,EAAU,IAAM,IAC1BjJ,WAAY,QAPhB,SAUE,cAACiL,EAAA,EAAD,CAAWnN,SAAS,KAAKwG,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,GAAK2M,gBAAc,EAAhF,SACE,cAACC,GAAD,UAIN,qBACE7G,MAAO,CACLzH,SAAU,WACV0B,IAAK,EACLnB,MAAO,OACPF,OAAQ,IACRD,OAAQ,SACRmO,WAAaV,EAAiB,EAAN,IACxB7K,WAAW,sCAEbwI,QAAS,WACPsC,GAAY,IAXhB,SAcE,eAACM,EAAA,EAAD,CAAWnN,SAAS,KAAKwG,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGhB,UAAW,cAAgB2N,gBAAc,EAAzG,UACE,cAACG,EAAA,EAAD,CACE/G,MAAO,CACLtH,QAAS,SACT+C,aAAc,IACd3C,MAAQsN,EAAoB,oBAAT,OAEnBxN,OAAQ,GACR0C,UAAW,SACXC,WAAW,sCAEbwI,QAAS,WACI,OAAXsC,QAAW,IAAXA,MAAc,GACdC,QAAQC,IAAIF,IAZhB,SAeE,cAACjC,EAAA,EAAD,CAAYC,QAAQ,KAAK1J,MAAM,UAA/B,SACG6L,MAGL,qBAAKxG,MAAO,CAAEjH,QAAUqN,EAAoB,QAAT,OAAkB7N,SAAU,WAAY0B,IAAK,EAAGkB,MAAO,EAAGrC,MAAO,IAApG,SACE,cAACgN,EAAA,EAAD,CACEnL,MAAM,UACNkG,KAAK,QACLb,MAAO,CAAEtH,QAAS,GAClBqL,QAAS,SAACiD,GACNA,EAAEC,kBACS,OAAXZ,QAAW,IAAXA,MAAc,IANpB,SAUE,cAAC,IAAD,CAAMhB,KAAM6B,IAAUrG,KAAK,kBAMnC,cAACsG,EAAA,EAAD,CAAKxM,MAAM,YAAYsK,aAAW,MAAMjF,MAAO,CAAEzH,SAAU,QAASiD,OAAQ,GAAIL,MAAO,IAAvF,SACE,cAAC,IAAD,CAAMR,MAAM,QAAQ0K,KAAM+B,IAAcvG,KAAK,WAE/C,cAACsG,EAAA,EAAD,CAAKxM,MAAM,YAAYsK,aAAW,MAAMjF,MAAO,CAAEzH,SAAU,QAASiD,OAAQ,GAAIL,MAAO,IAAvF,SACE,cAAC,IAAD,CAAMR,MAAM,QAAQ0K,KAAMgC,IAASxG,KAAK,eC1E5CyG,GAAkB1P,aAAW,SAACC,GAAD,MAAmB,CACpD,UAAW,CACT,sCAAuC,CACrC6D,WAAY7D,EAAMK,QAAQqN,QAAQnN,KAAO,eAE3C,qBAAsB,CACpBoD,OAAQ,iBACRvB,IAAK,kBACLrB,OAAQ,uBAgHC2O,GA3GK,SAAC9J,GAAgB,IAC3B2I,EAA0B3I,EAA1B2I,SAAUC,EAAgB5I,EAAhB4I,YACZxO,EAAQ6M,cAFoB,EAGNvF,IAAMqI,UAAS,GAHT,mBAG3BC,EAH2B,KAGnBC,EAHmB,KAM5B/C,EAAUC,YAAc/M,EAAM+F,YAAYiH,GAAG,OAEnDyC,KACA,IAAMK,EAAsB,CAAEjM,WAAY7D,EAAMK,QAAQqN,QAAQnN,MAE1DwP,EAAUC,cAEhB,OACE,eAAC,IAAMlI,SAAP,WACE,cAACmI,EAAA,EAAD,CAAQ9H,MAAO,CAAEzH,SAAU,QAAS0B,IAAK,GAAID,KAAM,GAAIrB,OAAQ,aAAeoL,QAAS,WAAO6D,EAAQG,KAAK,WAA3G,mBAGA,eAAC,GAAD,CAAQ3B,SAAUA,EAAUC,YAAaA,EAAzC,UACE,qBAAKrG,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGyB,WAAY,OAAQsM,cAAiBrD,EAAU,GAAK,IAAhG,SACE,cAACgC,EAAA,EAAD,CAAW3G,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGhB,UAAW,cAAgB2N,gBAAc,EAACpN,SAAS,KAArG,SACE,qBACEwG,MAAO,CACLpH,OAAU+L,EAAU,IAAM,IAC1B/J,QAAUwL,EAAe,EAAJ,EACrB7N,SAAU,WACV0B,IAAK,EACLP,eAAgB,QAChBT,UAAW,aACXkB,gBAAiB,mFACjBR,mBAAoB,SACpB8B,aAAc,UAMtB,sBAAKuE,MAAO,CAAE1E,UAAW,SAAUjC,OAAQ,IAA3C,UACE,cAAC+K,EAAA,EAAD,CAAYzJ,MAAM,YAAY0J,QAAQ,KAAKW,UAAU,KAArD,kDAGA,cAACZ,EAAA,EAAD,CAAYzJ,MAAM,gBAAgB0J,QAAQ,KAAKW,UAAU,KAAzD,4CAIF,eAAC2B,EAAA,EAAD,CAAWnN,SAAS,KAAKwG,MAAO,CAAExF,UAAW,GAAIwN,cAAe,IAAhE,UACE,cAAC,EAAD,CACEtJ,aAAc,GACdD,cAAe,OACfP,YAAY,EACZC,WAAY,CAAEyH,KAAM,eACpB7H,UAAU,EACVnF,OAAQ,GACRmG,OAAQ,CACNkF,EAAqB,YAAa0D,GAClC1D,EAAqB,aAAc0D,GACnC1D,EAAqB,QAAS0D,GAC9B1D,EAAqB,UAAW0D,GAChC1D,EAAqB,cAAe0D,GACpC1D,EAAqB,aAAc,IACnCA,EAAqB,WACrBA,EAAqB,OAAQ,OAGjC,sBACEjE,MAAO,CACLjH,QAAS,OACTyI,oBAAqB,wBACrBhH,UAAW,GACXX,WAAY,UALhB,UAQE,8BACE,cAAC,IAAD,CAAMwL,KAAMC,IAAS3K,MAAO9C,EAAMK,QAAQqN,QAAQnN,KAAMyI,KAAM,WAEhE,8BACE,cAACuD,EAAA,EAAD,CAAYY,UAAU,OAAtB,wBAEF,8BACE,cAACZ,EAAA,EAAD,CAAYY,UAAU,OAAOrK,MAAM,UAAnC,2BAKJ,8BACE,cAACmN,EAAA,EAAD,CACEnN,MAAM,UACNoJ,QAAS,WACP2D,GAAWD,IAHf,sBASF,cAACrD,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,+BACA,cAACD,EAAA,EAAD,CAAYC,QAAQ,QAApB,yC,SCgEG4D,GAAmB,SAACC,GAC/B,MAAmB,cAAfA,EAAMtC,MAGCuC,GAAe,SAACD,GAC3B,MAAmB,UAAfA,EAAMtC,M,qBC/KCwC,GAAkB,CAC7BxC,KAAM,QACNyC,SAAU,EAEVC,MAhCmC,CACnC1C,KAAM,SACN2C,WAAY,CACVC,KAAM,CACJ5C,KAAM,QACN6C,UAAU,EACVJ,SAAU,EACVC,MAAO,CACL1C,KAAM,SACN6C,UAAU,EACVF,WAAY,CACVG,KAAM,CACJ9C,KAAM,SACN6C,UAAU,GAGZE,KAAM,CAAE/C,KAAM,SAAU6C,UAAU,GAClCG,KAAM,CAAEhD,KAAM,SAAU6C,UAAU,GAClCI,IAAK,CAAEjD,KAAM,SAAU6C,UAAU,GACjCK,MAAO,CAAElD,KAAM,SAAU6C,UAAU,IAErCM,SAAU,CAAC,OAAQ,WAGvBlM,KAAM,CAAE+I,KAAM,SAAU6C,UAAU,IAEpCM,SAAU,CAAC,OAAQ,UCARC,GAAuB,SAACC,GACnC,MAAI,SAAUA,GAAW,SAAUA,GAAW,QAASA,GAAW,UAAWA,GAIlEC,GAAqB,SAACD,GAEjC,MAAI,UAAWA,GAGJE,GAAkB,SAACF,GAC9B,MAAI,WAAYA,GAILG,GAAqB,SAACH,GACjC,MAAI,WAAYA,GCpCLI,GAAc,SAAC5L,GAMrB,IACGwL,EAA0CxL,EAA1CwL,QAASpM,EAAiCY,EAAjCZ,KAAMyM,EAA2B7L,EAA3B6L,SAAUvF,EAAiBtG,EAAjBsG,QAAS9J,EAAQwD,EAARxD,IAC1C,OAAKgP,EAGH,qBAAKjJ,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,GAAKA,EAAKD,KAAM,IAAzD,SACE,cAAC8N,EAAA,EAAD,CACE9H,MAAO,CAAClF,cAAe,QACvBiJ,QAAS,WACA,OAAPA,QAAO,IAAPA,KAAUlH,IAEZ0M,UAAW,cAAC,IAAD,CAAMlE,KAAM+D,GAAmBH,GAAWO,IAAoBC,IAAc5I,KAAM,EAAKlG,MAAM,SAL1G,SAOCyO,GAAmBH,GAClB,cAAC7E,EAAA,EAAD,oBAAgBvH,EAAhB,YAAwBoM,EAAQS,OAAOzJ,KAAI,SAAC0J,GAAD,cAAWA,QAAX,IAAWA,OAAX,EAAWA,EAAOC,QAAQN,MAAWO,KAAK,OAAS,MAE9F,cAACzF,EAAA,EAAD,CAAYC,QAAQ,QAApB,SACG2E,GAAqBC,GAArB,UACMpM,EADN,+BAESoM,EAAQN,KAAKiB,QAAQN,GAF9B,+BAGSL,EAAQL,KAAKgB,QAAQN,GAH9B,+BAISL,EAAQJ,IAAIe,QAAQN,GAJ7B,+BAKSL,EAAQH,MAAMc,QAAQN,IAL/B,UAMMzM,EANN,+BAOSoM,EAAQH,MAAMc,QAAQN,UAtBnB,MCRVQ,GAAkB,SAACrM,GAAoD,IAAD,gBACzEsM,EAActM,EAAdsM,UACFC,EAAiBD,EAAUE,cAAcnR,MAAQ,EACjDoR,EAAkBH,EAAUE,cAAcrR,OAAS,EACjDuR,EAAeJ,EAAUK,MAAzBD,WAJyE,EAKpCJ,EAAUM,MAA/CC,EALyE,EAKzEA,YAAaC,EAL4D,EAK5DA,oBAEjBC,EAA0B,KAC1BC,EAAuB,KACrBV,EAAUW,QAAQC,OACtBH,EAAWT,EAAUW,QAAQC,KAAKC,GAAG,IAEvC,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAUe,UAAUrL,OAAQoL,IAE9C,IADA,IAAME,EAAWhB,EAAUe,UAAUD,GAC5BG,EAAI,EAAGA,EAAID,EAASX,MAAM,GAAGa,OAAOxL,OAAQuL,IAAK,CAAC,IAAD,UAC1CD,EAASX,MAAM,GAAGa,OAAOD,IAClC,UAACjB,EAAUW,eAAX,iBAAC,EAAmBQ,oBAApB,iBAAC,EAAiCP,YAAlC,iBAAC,EAAuCQ,oBAAxC,aAAC,EAAsD,KACY,QAAlE,UAAApB,EAAUW,QAAQQ,aAAaP,YAA/B,eAAqCQ,aAAa,GAAGX,YACvDA,EAAWT,EAAUW,QAAQQ,aAAaP,KAAKQ,aAAa,GAAGX,SAC/DC,EAAQV,EAAUW,QAAQQ,aAAaP,KAAKQ,aAAa,GAAGV,OAIpE,IAAIW,GAAe,EACnB,GAAMrB,EAAUW,QAAQC,KAAM,CAC5B,IAAMC,EAAKb,EAAUW,QAAQC,KAAKC,GAAG,GACrCQ,EAAcrB,EAAUe,UAAUO,WAAU,SAACC,GAAD,OAASA,EAAI9P,QAAUoP,GAAMU,EAAIrR,KAAO2Q,KAMtF,GAJKH,IAA0B,IAAjBW,IACZX,EAAQV,EAAUwB,QACfC,OADK,UACEzB,EAAUW,QAAQC,YADpB,aACE,EAAwBC,GAAG,GAAcQ,EAAa,GAC7DxB,QAAQG,EAAUe,UAAUM,GAAahB,MAAM,GAAGd,WACjDmB,IAA0B,IAAjBW,EAAoB,CACjC,IAAMK,EAAW1B,EAAUe,UAAUM,GAAahB,MAAM,GAAGa,OAAO,GAC9DhD,GAAiBwD,IACbA,EAASC,UAAUC,QAAQrC,WAC/BmB,GACExJ,KAAKC,MAAM0K,WAAWnB,GAASxJ,KAAK4K,IAAI,GAAIJ,EAASC,UAAUC,QAAQrC,WACvErI,KAAK4K,IAAI,GAAIJ,EAASC,UAAUC,QAAQrC,WACxCwC,YAOR,OAAS/B,EAAUW,QAAQC,MAAUH,EACnC,eAAC,IAAM7K,SAAP,WACE,cAAC,KAAD,CACEoM,EAAG,EACHC,EAAG,EACHC,OAAQ,CACNlC,EAAUwB,QAAQW,OAAOjL,KAAKC,MAAM6I,EAAUwB,QAAQY,OAAOpC,EAAUW,QAAQC,KAAKC,GAAG,MACvF,EACAb,EAAUwB,QAAQW,OAAOjL,KAAKC,MAAM6I,EAAUwB,QAAQY,OAAOpC,EAAUW,QAAQC,KAAKC,GAAG,MACvFV,EAAkBI,EAAcC,GAElC6B,OAAO,QACPC,YAAa,IAGdtC,EAAUW,QAAQC,KAAKC,GAAG,IAAMb,EAAUe,UAAUf,EAAUe,UAAUrL,OAAS,GAAGjE,OACnF,eAAC,IAAMmE,SAAP,WACE,cAAC,KAAD,CACEoM,EAAG,EACHC,EAAG,EACHC,OAAQ,CAAC,EAAGzB,EAAUR,EAAiBG,EAAYK,GACnD4B,OAAO,QACPC,YAAa,IAEf,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GACnB,IAAMC,EAAMF,EAAQG,SACpB,GAAK3C,EAAUW,QAAQC,KAAvB,CACA,IAAMgC,EAASnC,EACfiC,EAAIG,OAAO5C,EAAiBG,EAAYwC,GACxCF,EAAII,OAAO7C,EAAiBG,EAAa,GAAIwC,EAAS,IACtDF,EAAII,OAAO7C,EAAgB2C,EAAS,IACpCF,EAAII,OAAO7C,EAAgB2C,EAAS,GACpCF,EAAII,OAAO7C,EAAgB2C,EAAS,IACpCF,EAAII,OAAO7C,EAAiBG,EAAa,GAAIwC,EAAS,IACtDF,EAAII,OAAO7C,EAAiBG,EAAYwC,GAExCJ,EAAQO,gBAAgBN,KAE1BJ,OAAO,QACPW,KAAK,sBACLV,YAAa,IAEf,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GACnB,IAAMC,EAAMF,EAAQG,SACpB,GAAK3C,EAAUW,QAAQC,KAAvB,CACA,IAAMgC,EAASnC,EACfiC,EAAIO,KAAOjD,EAAUK,MAAMpK,MAAMnF,SAAW,MAAQkP,EAAUK,MAAMpK,MAAMiN,SAC1ER,EAAIS,UAAYnD,EAAUK,MAAMpK,MAAMmN,UACtCV,EAAInR,UAAY,OAChBmR,EAAIW,aAAe,SACnBX,EAAIY,SACF5C,EACAT,EAAiBG,EAAaJ,EAAUK,MAAMkD,mBAAqB,EACnEX,GAGFJ,EAAQO,gBAAgBN,UAM5B,MAEH,UAAAzC,EAAUW,eAAV,mBAAmBQ,oBAAnB,mBAAiCP,YAAjC,eAAuC4C,aAAcxD,EAAUM,MAAMmD,OACtE,UAAAzD,EAAUW,eAAV,mBAAmBQ,oBAAnB,mBAAiCP,YAAjC,eAAuC4C,aAAcxD,EAAUM,MAAMoD,OACnE,eAAC,IAAM9N,SAAP,WACE,cAAC,KAAD,CACEoM,EAAGhC,EAAUwB,QAAQW,OAAOjL,KAAKC,MAAM6I,EAAUwB,QAAQY,OAAlB,UAAyBpC,EAAUW,QAAQC,YAA3C,aAAyB,EAAwBC,GAAG,MAAQ,GACnGoB,EAAG9B,EAAkBI,EAAcC,EAAsB,GACzDzR,MAAO,GACPF,OAAQ,GACRmU,KAAK,QACLX,OAAO,QACPC,YAAa,IAEf,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GAAW,IAAD,QACvBC,EAAMF,EAAQG,SACf3C,EAAUW,QAAQC,OACvB8B,EAAIO,KAAOjD,EAAUM,MAAMrK,MAAMnF,SAAW,MAAQkP,EAAUM,MAAMrK,MAAMiN,SAC1ER,EAAIS,UAAYnD,EAAUM,MAAMrK,MAAMmN,UACtCV,EAAInR,UAAY,SAChBmR,EAAIW,aAAe,MAEnBX,EAAIY,UACD,UAACtD,EAAUW,eAAX,iBAAC,EAAmBQ,oBAApB,iBAAC,EAAiCP,YAAlC,iBAAC,EAAuCQ,oBAAxC,aAAC,EAAsD,IACnDpB,EAAUW,QAAQQ,aAAaP,KAAKQ,aAAa,GAAGuC,WACrDzM,KAAKC,MAAM6I,EAAUwB,QAAQY,OAAOpC,EAAUW,QAAQC,KAAKC,GAAG,KAAKkB,WACvE/B,EAAUwB,QAAQW,OAAOjL,KAAKC,MAAM6I,EAAUwB,QAAQY,OAAOpC,EAAUW,QAAQC,KAAKC,GAAG,MACvFV,EAAkBI,EAAcC,EAAsB,EAAI,IAG5DgC,EAAQO,gBAAgBN,UAM5B,QAIJ,MCpJOmB,GAAe,SAAClQ,GAA6B,IAChDsM,EAActM,EAAdsM,UAEF7B,GADQ6B,EAAUe,UAAU,GAAGV,MAAM,GAC7BL,EAAUe,UAAU,GAAGV,MAAM,GAAGa,OAAO,IACrD,IAAK9C,GAAaD,KAAWA,IAAUA,EAAM0F,QAAS,OAAO,KAE7D,IAAIA,EAEG,GACHC,EAAe,EAYnB,OAXI,KAAK9D,EAAUe,WACb,KAAKf,EAAUe,UAAU,GAAGV,OAC1B,KAAKL,EAAUe,UAAU,GAAGV,MAAM,GAAGa,UACvC2C,EAAU1F,EAAM0F,SAGRE,SAAQ,SAACxC,EAAKyC,GAAN,OAAkBzC,EAAI0C,IAAMD,KAC5CF,EACE9D,EAAUM,MAAM4D,cAAgB,EAAI,EAAIhN,KAAKiN,MAAM,KAAQnE,EAAUM,MAAM4D,aAAe,KAIhG,eAAC,IAAMtO,SAAP,WACE,cAAC,KAAD,CACE2M,UAAW,SAACC,EAASC,GACnBD,EAAQ4B,YACPjG,EAAM0F,QAAiCE,SAAQ,SAAC7E,EAASmF,GACxD,IAAMC,EAAOtE,EAAUwB,QAAQW,OAAOkC,EAAY,GAAKrE,EAAUM,MAAMiE,UACjEC,EAAWtN,KAAKC,MACpB6I,EAAUwB,QAAQiD,OAAOvF,EAAQL,KAAM,EAAG,IAEtC6F,EAAUxN,KAAKC,MACnB6I,EAAUwB,QAAQiD,OAAOvF,EAAQJ,IAAK,EAAG,IAErC6F,EAAYzN,KAAKC,MACrB6I,EAAUwB,QAAQiD,OAAOvF,EAAQH,MAAO,EAAG,IAE7CyD,EAAQK,OAAOyB,EAAO,GAAKI,EAAU,IACrClC,EAAQM,OAAOwB,EAAO,GAAKE,EAAW,IAClCtF,EAAQH,QAAUG,EAAQN,OAC5B4D,EAAQK,OAAOyB,EAAO,EAAGK,GACzBnC,EAAQM,OAAOwB,EAAO,EAAGK,OAI7BnC,EAAQoC,YACRpC,EAAQO,gBAAgBN,IAE1BJ,OAAQlE,EAAMlI,MAAM4O,kBACpBvC,YAAa,IAEf,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GACnBD,EAAQ4B,YACRP,EACGhR,QAAO,SAAC0O,GAAD,OAASA,EAAIxC,OAASwC,EAAI3C,QACjCmF,SAAQ,SAACe,EAAaC,GACrB,IAAMT,EACJtE,EAAUwB,QAAQW,OAAO2C,EAAYb,IAAK,GAAKjE,EAAUM,MAAMiE,UAC3DS,EAAW9N,KAAKC,MACpB6I,EAAUwB,QAAQiD,OAChBK,EAAYlG,KACZ,EACA,IAGE+F,EAAYzN,KAAKC,MACrB6I,EAAUwB,QAAQiD,OAChBK,EAAY/F,MACZ,EACA,IAGJ,GAAI+F,EAAY/F,QAAU+F,EAAYlG,KACpC,GAAqB,IAAjBkF,EAAoB,CACtB,IAAMrU,EACJ6U,EAAOR,EAAe9D,EAAUM,MAAM2E,QAClCjF,EAAUM,MAAM2E,QAAUX,EAAOR,EAClB,EAAfA,EACNtB,EAAQ0C,KAAKZ,EAAO,GAAMR,EAAckB,EAAW,GAAKvV,EAAUkV,EAAYK,QACpD,IAAjBlB,IACTtB,EAAQK,OAAOyB,EAAO,GAAKK,GAC3BnC,EAAQM,OAAOwB,EAAO,GAAKU,IAG/BxC,EAAQoC,YACRpC,EAAQO,gBAAgBN,OAG9BJ,OAAQlE,EAAMlI,MAAM4O,kBACpB7B,KAAM7E,EAAMlI,MAAMkP,cAClB7C,YAAa,IAEf,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GACnBD,EAAQ4B,YACRP,EACGhR,QAAO,SAAC0O,GAAD,OAASA,EAAIxC,MAAQwC,EAAI3C,QAChCmF,SAAQ,SAACe,EAAaC,GACrB,IAAMT,EACJtE,EAAUwB,QAAQW,OAAO2C,EAAYb,IAAK,GAAKjE,EAAUM,MAAMiE,UAC3DS,EAAW9N,KAAKC,MACpB6I,EAAUwB,QAAQiD,OAChBK,EAAYlG,KACZ,EACA,IAGE+F,EAAYzN,KAAKC,MACrB6I,EAAUwB,QAAQiD,OAChBK,EAAY/F,MACZ,EACA,IAGJ,GAAI+F,EAAY/F,QAAU+F,EAAYlG,KACpC,GAAqB,IAAjBkF,EAAoB,CACtB,IAAMrU,EACJ6U,EAAOR,EAAe9D,EAAUM,MAAM2E,QAClCjF,EAAUM,MAAM2E,QAAUX,EAAOR,EAClB,EAAfA,EACNtB,EAAQ0C,KAAKZ,EAAO,GAAMR,EAAckB,EAAW,GAAKvV,EAAUkV,EAAYK,QACpD,IAAjBlB,IACTtB,EAAQK,OAAOyB,EAAO,GAAKK,GAC3BnC,EAAQM,OAAOwB,EAAO,GAAKU,IAG/BxC,EAAQoC,YACRpC,EAAQO,gBAAgBN,OAG9BJ,OAAQlE,EAAMlI,MAAM4O,kBACpB7B,KAAM7E,EAAMlI,MAAMmP,gBAClB9C,YAAa,Q,QC3IR+C,GAAY,SAAC9D,GACxB,YAAY9L,IAAR8L,GAA6B,OAARA,KACN,kBAARA,IAAsB+D,MAAM/D,KAK5BgE,GAAc,SAAChE,GAC1B,OAAIrK,KAAKiN,MAAM5C,KAASA,EAAY,EAC7BA,EAAIQ,WAAWyD,MAAM,KAAK,GAAG9P,QAAU,GAyBnC+P,GAAc,SAACC,GAA4C,IACtE,IAAIC,GAAM,EAD4D,mBAA3BC,EAA2B,iCAA3BA,EAA2B,kBAKtE,OAHAA,EAAO7B,SAAQ,SAAC8B,GACVH,EAAMI,SAASD,KAAQF,GAAM,MAE5BA,GAyCHI,GAAsC,CAC1CC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,SAAU,UACVC,QAAS,UACT,aAAc,UACdC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WAYFC,GAAW,SAACC,GACvB,IAAKA,EAAK,OAAO,KAGjBA,EAAMA,EAAIC,QADW,oCACa,SAAUC,EAAGC,EAAGC,EAAGC,GACnD,OAAOF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,KAG7B,IAAIC,EAAS,4CAA4CC,KAAKP,GAC9D,OAAOM,EACH,CACEH,EAAGK,SAASF,EAAO,GAAI,IACvBF,EAAGI,SAASF,EAAO,GAAI,IACvBD,EAAGG,SAASF,EAAO,GAAI,KAEzB,MC9OOG,GAAa,SAAC5b,GAA2B,IAC5CsM,EAA6EtM,EAA7EsM,UAAWqB,EAAkE3N,EAAlE2N,YAAakO,EAAqD7b,EAArD6b,SAAUC,EAA2C9b,EAA3C8b,SAAwBC,EAAmB/b,EAAjCgc,aAC9CA,EAAerK,GAAUoK,GAAkB,EAAIA,EAE/CtR,GADQ6B,EAAUe,UAAUM,GAAahB,MAAMkP,GACvCvP,EAAUe,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,IAChEG,EAA+B,GACjCC,MAAMC,QAAQ1R,EAAM0F,UAAY1F,EAAM0F,QAAQnO,OAAS,GACzDia,EAAU3R,KAAV,MAAA2R,EAAS,aACHxR,EAAM0F,QACP3N,KAAI,SAACqL,EAAK0C,GACT,IAAIrE,EAGJ,OAAc,QAFeA,EAAzBP,GAAmBkC,GAAcA,EAAI5B,OAAO+P,GACnCnO,EAAIxC,OACU,CAAC,KAAM,MAC3B,CAACiB,EAAUM,MAAM4D,aAAeD,EAAKjE,EAAUwB,QAAQiD,OAAO7E,EAAOyB,EAAa,EAAG,OAE7FyO,OACAjd,QAAO,SAAC0O,GAAD,OAAiB,OAARA,OAGvB,IAAMwO,EAAcJ,EAAU9c,QAAO,SAAC0O,GAAD,OAAiB,OAARA,KAE9C,OACE,cAAC,KAAD,CAEES,EAAGhC,EAAUM,MAAMiE,UACnBtC,EAAGjC,EAAUwB,QAAQiD,OAAO,EAAGpD,EAAa,GAAKrB,EAAUe,UAAUM,GAAa5P,OAClFyQ,OAAM,aAAM6N,GACZ1N,OAAQnE,GAAiBC,GAASA,EAAMlI,MAAM+Z,YAAYN,GAAgBvR,EAAMlI,MAAM+Z,YAAY,GAClG1N,YAAa,GANf,aACajB,EADb,iBACiCmO,KCxBxBS,GAAY,SAACvc,GAA0B,IAC1CsM,EAA+CtM,EAA/CsM,UAAWqB,EAAoC3N,EAApC2N,YAAakO,EAAuB7b,EAAvB6b,SAAUC,EAAa9b,EAAb8b,SAEpCrR,EAAQ6B,EAAUe,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,GACtE,OACE,cAAC,KAAD,CACEjN,UAAW,SAACC,EAASC,GACnBD,EAAQ4B,YACPpE,EAAUe,UAAU,GAAGV,MAAM,GAAGa,OAAO,GAAG2C,QAA+BE,SAAQ,SAAC7E,EAASmF,GAC1F,GAAKnF,EAAQgR,OAAb,CACA,IAAM5L,EAAOtE,EAAUwB,QAAQW,OAAOkC,EAAY,GAAKrE,EAAUM,MAAMiE,UACjE4L,EAAUjZ,KAAKC,MAAM6I,EAAUwB,QAAQiD,OAAOvF,EAAQgR,OAAQ7O,EAAakO,EAAU,IACrFa,EAAQlZ,KAAKC,MAAM6I,EAAUwB,QAAQiD,OAAO,EAAGpD,EAAakO,EAAU,IAE5E/M,EAAQK,OAAOyB,EAAO,GAAK8L,EAAQ,IACnC5N,EAAQM,OAAOwB,EAAO,GAAK6L,EAAU,QAGvC3N,EAAQoC,YACRpC,EAAQO,gBAAgBN,IAG1BJ,QAAQnE,GAAiBC,GAASA,EAAMlI,MAAM+Z,YAAY,IAC1D1N,YArBgB,K,yFCZT+N,GAAgB,SAAC1R,EAAY2R,GACxC,OAAQA,GACN,IAAK,UACH,OAAOC,aAAO5R,EAAM,MACtB,IAAK,QACH,OAAO4R,aAAO5R,EAAM,MACtB,IAAK,OAEL,IAAK,QACH,OAAO4R,aAAO5R,EAAM,MACtB,IAAK,SACH,OAAO4R,aAAO5R,EAAM,OACtB,IAAK,QACH,OAAO4R,aAAO5R,EAAM,QACtB,QACE,MAAO,MAIA6R,GAAkB,SAAC7R,EAAY2R,GAC1C,OAAQA,GACN,IAAK,UACH,OAAOG,aAAW9R,GACpB,IAAK,QACH,OAAOjE,aAASiE,GAClB,IAAK,OACH,OAAO+R,aAAQ/R,GACjB,IAAK,QACH,OAAOgS,aAAWhS,GACpB,IAAK,SACH,OAAOiS,aAASjS,GAClB,IAAK,QACH,OAAOkS,aAAQlS,GACjB,QACE,OAAO,IAGAmS,GAAgB,SAACnS,GAAD,MAAiB,CAC5CoS,OAAQP,GAAgB7R,EAAM,WAC9BnE,KAAMgW,GAAgB7R,EAAM,SAC5BqS,IAAKR,GAAgB7R,EAAM,QAC3BsS,KAAMT,GAAgB7R,EAAM,SAC5BuS,MAAOV,GAAgB7R,EAAM,UAC7BwS,KAAMX,GAAgB7R,EAAM,WCzCjByS,GAAiC,CAC5CC,QAAS,CAAEf,OAAQ,IAAOgB,eAAgB,CAAC,EAAG,EAAG,GAAI,IAAKC,MAAO,CAAC,IAAO,MACzEC,MAAO,CAAElB,OAAQ,KAASgB,eAAgB,CAAC,EAAG,EAAG,IAAKC,MAAO,CAAC,KAAS,OACvEE,KAAM,CAAEnB,OAAQ,MAAUgB,eAAgB,CAAC,GAAIC,MAAO,CAAC,MAAU,QACjEG,MAAO,CAAEpB,OAAQ,OAAcgB,eAAgB,CAAC,GAAIC,MAAO,CAAC,OAAW,SACvEI,OAAQ,CAAErB,OAAQ,QAAegB,eAAgB,CAAC,EAAG,EAAG,GAAIC,MAAO,CAAC,QAAY,UAChFK,MAAO,CAAEtB,OAAQ,QAAgBgB,eAAgB,GAAIC,MAAO,CAAC,QAAa,YAiB/DM,GAAmB,SAC9BpT,EACAiF,EACAD,EACAqO,EACAC,EACAC,GAEA,IAAKF,EAASG,YAAa,OAAO,KADP,MAE+BH,EAASG,YAA9CC,GAFM,EAEnBD,YAFmB,EAENC,iBAAiBC,EAFX,EAEWA,gBAGhCC,EAAW3O,EAAOC,EAAS,EAE3B2O,EAAcC,OAAOC,OAAO,GAAIP,GAChCQ,EAAcH,EAAYI,OAAON,GACvCG,OAAOI,KAAKL,EAAYI,QAAQ1O,SAAQ,SAAC4O,EAAKC,GAC5CP,EAAYI,OAAOE,GAChBN,EAAYI,OAAOE,GAAuCH,EAAeJ,KAO9E,IALA,IAAMS,EAAkB,IAAM,EAAId,GAC9Be,EAAM,KACNC,EAAYZ,EACZa,EAAc,EAETlS,EAAIoR,EAAiBpR,EAAIwR,OAAOI,KAAKtB,IAAc1b,OAAQoL,IAAK,CACvE,IAAM6R,EAAML,OAAOI,KAAKtB,IAActQ,GAEtC,GAAI6R,KAAON,EAAYI,OACrB,eAAsB,GAAtB,oBAA4BrB,GAAauB,GAAKrB,iBAA9C,eAA+D,CAA1D,IAAI2B,EAAQ,KACH,OAARH,EAEA5b,KAAKgc,IAAIb,EAAYI,OAAOE,GAAOM,EAAWJ,GAC9C3b,KAAKgc,IAAIJ,EAAME,EAAcH,KAE7BC,EAAMT,EAAYI,OAAOE,GACzBK,EAAcC,EACdF,EAAYJ,IAIdG,EAAMT,EAAYI,OAAOE,GACzBK,EAAcC,EACdF,EAAYJ,IAKpB,MAAO,CACLR,gBAAiBY,EACjBE,SAAUD,EACVf,YAAab,GAAa2B,GAAWzC,OACrC4B,gBA5BgB,IAgCPiB,GAAY,SAACxU,EAAYyU,GAEpC,GAAIA,EAAgB1d,OAAS,EAAG,OAAO,EAF+D,MAGnEob,GAAcnS,GAAzCqS,EAH8F,EAG9FA,IAAKC,EAHyF,EAGzFA,KAAMC,EAHmF,EAGnFA,MACbmC,GAJgG,EAG5ElC,KACJiC,EAAgB,GAAGzB,OAAO,IAChD,OACE0B,EAAc3B,MAAM,GAAGD,KAAK,GAAGT,MAAQA,GACvCqC,EAAc3B,MAAM,GAAGT,OAASA,GAChCoC,EAAcnC,QAAUA,GAMtBoC,GAAa,SACjB3U,EACAyU,EACAG,GAEI,IADJC,EACG,uDAD6B,EAEhC,GAAIJ,EAAgB1d,OAAS,EAAG,OAAO,EADpC,MAEgCob,GAAcnS,GAAzCqS,EAFL,EAEKA,IAAKC,EAFV,EAEUA,KAFV,EAEgBC,MAFhB,EAEuBC,KAC1B,OAAKoC,EAAc,GAAKC,IAAmB,IAEzCJ,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAM,GAAGD,KAAK,GAAGT,MAAQA,GAChEoC,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAM,GAAGT,OAASA,IAMvDwC,GAAe,SACnB9U,EACAyU,EACAG,EACAG,GAEI,IADJF,EACG,uDADqB,EAExB,GAAIJ,EAAgB1d,OAAS,EAAG,OAAO,EADpC,MAEgCob,GAAcnS,GAAzCqS,EAFL,EAEKA,IAAKC,EAFV,EAEUA,KAFV,EAEgBC,MAFhB,EAEuBC,KAC1B,GACEiC,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK,GAAGT,MAAQA,GACzEoC,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYzC,OAASA,EAClE,CACA,GAAuB,IAAnBuC,EAAsB,CACxB,IAAIG,EAAc,EAClBP,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAM3N,SAAQ,SAACxC,GAAD,OAAUoS,GAAepS,EAAIkQ,KAAK/b,UAKvF,IAJA,IAAIke,EAAU,EACVd,EAAM,EACNe,EAAa,EACXC,EAAoB5c,KAAKC,MAAMwc,EAAc,GAC1C7S,EAAI,EAAGA,EAAIsS,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMhc,OAAQoL,IAAK,CAC5E,IAAMiT,EAAcX,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAM5Q,GAC7D5J,KAAKgc,IAAIU,EAAUG,EAAYtC,KAAK/b,OAASoe,GAAqB5c,KAAKgc,IAAIJ,EAAMgB,KACnFhB,EAAMc,EAAUG,EAAYtC,KAAK/b,OACjCme,EAAa/S,EAAI,GAEnB8S,GAAWG,EAAYtC,KAAK/b,OAE9B,OAAIge,IAAeG,EAEd,GAAuB,IAAnBL,EACT,QAAmB,IAAfE,GAAoBN,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAM,GAAGD,KAAK/b,OAAS,MAEpFge,IAAeN,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMhc,OAAS,GACrE0d,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK/b,OAAS,GAM7E,OAAO,GA+BIse,GAAc,SAEzBrV,EACAqT,EACAC,EACAc,GAIA,IAAKd,IAAgBc,IAAcf,EAAU,OAAO,KADjD,IAEsBiC,EAAyClB,EAA1DZ,gBAA0Ca,EAAgBD,EAA1BE,SAClC9B,EAAOX,GAAgB7R,EAAM,SAC7BuS,EAAQV,GAAgB7R,EAAM,UAC9BsS,EAAOT,GAAgB7R,EAAM,SAC7BqS,EAAMR,GAAgB7R,EAAM,QAE5BuV,EAAclC,EAASJ,MAAM/e,QAAO,SAACoK,GAAD,OAAOA,EAAEkU,OAASA,KAEtDgD,EAAeD,EAAY,GAAGvC,OAAO9e,QAAO,SAACoK,GAAD,OAAOA,EAAEiU,QAAUA,KAC/DkD,EAAkBF,EAAY,GAAGvC,OAAO0C,QAAQF,EAAa,IAE7DG,EAAcH,EAAa,GAAGzC,MAAM7e,QAAO,SAACoK,GAAD,OAAOA,EAAEgU,OAASA,KAC7DsD,EAAiBL,EAAY,GAAGvC,OAAOyC,GAAiB1C,MAAM2C,QAAQC,EAAY,IAClFE,EAAaF,EAAY,GAAG7C,KAAK5e,QAAO,SAACoK,GAAD,OAAOA,EAAE+T,MAAQA,KACzDyD,EAAgBP,EAAY,GAAGvC,OAAOyC,GAAiB1C,MAAM6C,GAAgB9C,KAAK4C,QAAQG,EAAW,IAE3G,OAAIvC,EAAYE,kBAAoB8B,GAAiC,IAAhBjB,EAA0BiB,EAEzD,SAAlBA,EACEd,GAAUxU,EAAMuV,GAAqB,QACrCZ,GAAW3U,EAAMuV,EAAaE,EAAiB,GAAW,SAC1DX,GAAa9U,EAAMuV,EAAaE,EAAiBG,EAAgBvB,GAA8B,QA3DtF,SACfrU,EACAyU,EACAG,EACAG,EACAgB,GAEI,IADJlB,EACG,uDADqB,EAElBxC,EAAMR,GAAgB7R,EAAM,QAClC,GAAIyU,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAKiD,GAAW1D,MAAQA,GAA0B,IAAnBwC,EAC1F,OAAO,EACT,GAAIJ,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAKiD,GAAW1D,MAAQA,GAA0B,IAAnBwC,EAAsB,CAChH,GAAIJ,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK/b,QAAU,EAAG,OAAO,EACtF,GAC4E,IAAzE0d,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK/b,SAC9C,IAAdgf,GAAiC,IAAdA,IACoD,IAAzEtB,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK/b,SAC9C,IAAdgf,GAAiC,IAAdA,IACoD,IAAzEtB,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK/b,SAC9C,IAAdgf,GAAiC,IAAdA,GAAiC,IAAdA,IACiC,IAAzEtB,EAAgB,GAAGzB,OAAO4B,GAAa7B,MAAMgC,GAAYjC,KAAK/b,SAC9C,IAAdgf,GAAiC,IAAdA,GAAiC,IAAdA,GAEzC,OAAO,EAEX,OAAO,EAmCDC,CAAShW,EAAMuV,EAAaE,EAAiBG,EAAgBE,EAAezB,GACvE,OACF,KAEa,UAAlBiB,EACEd,GAAUxU,EAAMuV,GAAqB,QACrCZ,GAAW3U,EAAMuV,EAAaE,EAAiB,GAAW,SAC1DX,GAAa9U,EAAMuV,EAAaE,EAAiBG,EAAgBvB,GAA8BiB,EAC5F,KAEa,WAAlBA,EACEE,EAAa,GAAGzC,MAAM,GAAGD,KAAK,GAAGT,MAAQA,EAAYiD,EAC7C,KAEQ,UAAlBA,GACEC,EAAY,GAAGvC,OAAO,GAAGD,MAAM,GAAGD,KAAK,GAAGT,MAAQA,EAAYiD,EAG7D,MC1NIW,GAAmB,SAACC,GAgB/B,IAdA,IAAMC,EAAQD,EAAWnf,OAGnBqf,EAAY,SAACC,EAA0BC,GAA3B,OACfD,EAAWrW,KAA8BsW,EAAWtW,MAInDuW,EAAe,CAAC,CAAEC,GADVJ,EAAUF,EAAW,GAAIA,EAAW,IACjBO,IAAK,IAChC7V,EAAW,EACX8V,EAAU7E,GAAgBqE,EAAW,GAAGlW,KAAM,SAC9C2W,EAAU9E,GAAgBqE,EAAW,GAAGlW,KAAM,SAC9C4W,EAAc,EACdC,EAA+C,GAC1C1U,EAAI,EAAGA,EAAIgU,EAAOhU,IAAK,CAE9B,GAAIA,GAAK,EAIP,IAFA,IAAM2U,EAAcV,EAAUF,EAAW/T,GAAI+T,EAAW/T,EAAI,IAEnDG,EAAI,EAAGA,EAAIiU,EAAaxf,OAAQuL,IAAK,CAE5C,GADyBiU,EAAajU,GACjBkU,KAAOM,EAAa,CACvCP,EAAajU,GAAGmU,MAChB,MACSnU,IAAMiU,EAAaxf,OAAS,GAAGwf,EAAalX,KAAK,CAAEmX,GAAIM,EAAaL,IAAK,IAIxF,IAAMM,EAAY/E,aAAWkE,EAAW/T,GAAGnC,MACrCgX,EAAQnF,GAAgBqE,EAAW/T,GAAGnC,KAAM,SAClD,GAAI+W,EAAYL,GAAWM,EAAQL,GAAWxU,IAAMgU,EAAQ,EAAG,CAE7D,IAAMc,EAAmBJ,EAAS3iB,QAAO,SAACoK,GAAD,OAAOA,EAAE4Y,UAAYN,KAC9D,GAAIK,EAAiBlgB,OAAS,EAAG,CAC3BkgB,EAAiBlgB,OAAS,GAAG6G,QAAQC,IAAI,oDAC7C,IAAMsZ,EAAaN,EAASnB,QAAQuB,EAAiB,IACrDJ,EAASM,GAAYC,WACgB,IAA5BH,EAAiBlgB,QAC1B8f,EAASxX,KAAK,CAAE6X,QAASN,EAAaQ,IAAK,IAE7CV,EAAUK,EACVH,EAAc,EACdD,EAAUK,OAEVJ,IAIF,IAAMS,EAAkB,CAACzQ,GAAYsP,EAAW/T,GAAG/B,QAC7CkX,EAAapB,EAAW/T,GAC1B7B,GAAqBgX,KACvBD,EAAgBhY,KAAKuH,GAAY0Q,EAAWrX,OAC5CoX,EAAgBhY,KAAKuH,GAAY0Q,EAAWpX,OAC5CmX,EAAgBhY,KAAKuH,GAAY0Q,EAAWnX,OAE9C,IAAMoX,EAAchf,KAAKif,IAAL,MAAAjf,KAAY8e,GAC5BE,EAAc3W,IAAUA,EAAW2W,GAIzC,IAAIE,EAAUlB,EAAahf,KAAI,SAACmgB,GAAD,OAAUA,EAAKlB,MAC1CmB,EAAOpB,EAAahf,KAAI,SAACmgB,GAAD,OAAUA,EAAKjB,OACvCmB,EAASD,EAAKE,QAAO,SAACD,EAAQhV,EAAKT,EAAG2V,GAAjB,OAA0BlV,EAAMkV,EAAIF,GAAUzV,EAAIyV,IAAS,GAE9EG,EAA2BlB,EAAStf,KAAI,SAACqL,GAAD,OAASA,EAAIwU,OACvDY,EAAW,EACfnB,EAASzR,SAAQ,SAACxC,GAAD,OAAUoV,GAAYpV,EAAIwU,OAC3C,IAAMa,EAAuBF,EAAyBF,QACpD,SAACD,EAAQhV,EAAKT,EAAG2V,GAAjB,OAA0BlV,EAAMkV,EAAIF,GAAUzV,EAAIyV,IAClD,GAEIM,EAAiBrB,EAASoB,GAAsBf,QAChDiB,EAAgCtB,EAASoB,GAAsBb,IAAMY,EAGrE1E,EDjFsB,SAAC8E,GAE7B,IADA,IAAMC,EAAiB1E,OAAOI,KAAKtB,IAC1BtQ,EAAI,EAAGA,EAAIkW,EAAethB,OAAQoL,IAAK,CAC9C,IAAMmW,EAAiBD,EAAelW,GAChCmR,EAAcb,GAAa6F,GAAgB3G,OAC3C4G,EAAmB9F,GAAa6F,GAAgB1F,MACtD,GAA2B,kBAAhBU,IACL8E,IAAe9E,GAAgB8E,GAAcG,EAAiB,IAAMH,GAAcG,EAAiB,IACrG,MAAO,CAAE/E,gBAAiB8E,EAAgB/E,gBAAiBpR,EAAGmR,YAAaA,EAAagB,SAAU,GAExG,OAAO,KCuEakE,CAAef,EAAQG,IAC3C,MAAO,CACLzB,MAAOA,EACPiC,WAAYX,EAAQG,GACpBtE,YAAaA,EACbmF,sBAAuBd,EAAKC,GAAUzB,EACtCuC,mBAAoBR,EACpBS,kCAAmCR,EACnCjb,KAAM,cACN0D,SAAUA,IAIDgY,GAAsB,SACjCrnB,EACAuB,EACA+lB,EACAC,EACAxhB,EACA0L,GAEA,MAAO,CACLtB,MAAO,CAACqX,GAAiBF,EAAWC,EAAWxhB,EAAO0L,IACtDzR,IAAKA,EACLuB,OAAQA,IAICimB,GAAmB,SAC9BF,EACAC,EACAxhB,EACA0L,GAEA,IAAMgW,EAAahW,EACfiW,GAA0BJ,EAAWC,EAAW9V,EAAW1L,GAC3D4hB,GAAsBL,EAAWC,EAAWxhB,GAChD,MAAO,CACLiL,OAAQ,CAAC,eAAMyW,IACfpY,SAAUoY,EAASpY,SACnBuY,MAAO,GACPC,YAAa,EACbC,aAAc,EACdC,YAAa,EACbC,UAAW,KAIFL,GAAwB,SACnCL,EACAC,EACAxhB,GACyB,IAAD,EACY2e,GAAiB4C,GAA7CjY,EADgB,EAChBA,SAAa4Y,EADG,4BAElBnG,EC3ImB,SAACvT,EAAkBiF,EAAgBD,GAuB5D,IAtBA,IAAI2U,EAAqB,CAAExG,MAAO,GAAIa,OAAQ,CAAEb,MAAO,EAAGD,OAAQ,EAAGD,MAAO,EAAGD,KAAM,EAAGD,MAAO,EAAGH,QAAS,IAErGgH,EAAoB,SAACrH,GAAD,MAAmC,CAAEA,IAAKA,EAAKQ,MAAO,KAC1E8G,EAAqB,SAACrH,EAAcD,GAAf,MAAkD,CAC3EC,KAAMA,EACNQ,KAAM,CAAC4G,EAAkBrH,MAErBuH,EAAsB,SAACrH,EAAeD,EAAcD,GAA9B,MAAkE,CAC5FE,MAAOA,EACPQ,MAAO,CAAC4G,EAAmBrH,EAAMD,MAE7BwH,EAAqB,SAACrH,EAAcD,EAAeD,EAAcD,GAA5C,MAA+E,CACxGG,KAAMA,EACNQ,OAAQ,CAAC4G,EAAoBrH,EAAOD,EAAMD,MAEtCyH,EAAwB,SAACnI,GACd,UAAXA,GAAoB8H,EAAK3F,OAAOb,QAChC,CAAC,QAAS,UAAU9L,SAASwK,IAAS8H,EAAK3F,OAAOd,SAClD,CAAC,QAAS,SAAU,SAAS7L,SAASwK,IAAS8H,EAAK3F,OAAOf,QAC3D,CAAC,QAAS,SAAU,QAAS,QAAQ5L,SAASwK,IAAS8H,EAAK3F,OAAOhB,QApBI,WAuBpE3Q,GACP,IAAMqQ,EAAOX,GAAgB/R,EAAKqC,GAAGnC,KAAM,SACrCuS,EAAQV,GAAgB/R,EAAKqC,GAAGnC,KAAM,UACtCsS,EAAOT,GAAgB/R,EAAKqC,GAAGnC,KAAM,SACrCqS,EAAMR,GAAgB/R,EAAKqC,GAAGnC,KAAM,QAEpC+Z,EAAY,SAACpI,EAAgCqI,GAClC,UAAXrI,GAAoB8H,EAAKxG,MAAM5T,KAAKwa,EAAmBrH,EAAMD,EAAOD,EAAMD,IAC/D,WAAXV,GAAqB8H,EAAKxG,MAAM+G,EAAW,IAAIhH,OAAO3T,KAAKua,EAAoBrH,EAAOD,EAAMD,IACjF,UAAXV,GAAoB8H,EAAKxG,MAAM+G,EAAW,IAAIhH,OAAOgH,EAAW,IAAIjH,MAAM1T,KAAKsa,EAAmBrH,EAAMD,IAC7F,SAAXV,GACF8H,EAAKxG,MAAM+G,EAAW,IAAIhH,OAAOgH,EAAW,IAAIjH,MAAMiH,EAAW,IAAIlH,KAAKzT,KAAKqa,EAAkBrH,MAGxE,SAAvB4H,EACJtI,EACAuI,GAEiB,IADjBF,EACgB,uDADO,GAGnBG,EACF,KACEC,GAAmB,EACvB,GAAe,UAAXzI,EAEE,KADJwI,EAAoBD,EAAWjH,MAA6B/e,QAAO,SAACoK,GAAD,OAAOA,EAAEkU,OAASA,QAC1D4H,EAAkBX,EAAKxG,MAAMyC,QAAQyE,EAAiB,UAC5E,GAAe,WAAXxI,EAAqB,CAC9B,GAAIqI,EAAWjjB,OAAS,EAAG,OAAO,KAG9B,KADJojB,EADmBD,EAAWjH,MAAM+G,EAAW,IAAIhH,OACrB9e,QAAO,SAACoK,GAAD,OAAOA,EAAEiU,QAAUA,QAC7B6H,EAAkBX,EAAKxG,MAAM+G,EAAW,IAAIhH,OAAO0C,QAAQyE,EAAiB,UAClG,GAAe,UAAXxI,EAAoB,CAC7B,GAAIqI,EAAWjjB,OAAS,EAAG,OAAO,KAG9B,KADJojB,EADkBD,EAAWjH,MAAM+G,EAAW,IAAIhH,OAAOgH,EAAW,IAAIjH,MAC3C7e,QAAO,SAACoK,GAAD,OAAOA,EAAEgU,OAASA,QAEpD8H,EAAkBX,EAAKxG,MAAM+G,EAAW,IAAIhH,OAAOgH,EAAW,IAAIjH,MAAM2C,QAAQyE,EAAiB,UAC9F,GAAe,SAAXxI,EAAmB,CAC5B,GAAIqI,EAAWjjB,OAAS,EAAG,OAAO,KAI9B,KADJojB,EAFiBD,EAAWjH,MAAM+G,EAAW,IAAIhH,OAAOgH,EAAW,IAAIjH,MAAMiH,EAAW,IACrFlH,KACyB5e,QAAO,SAACoK,GAAD,OAAOA,EAAE+T,MAAQA,QAElD+H,EAAkBX,EAAKxG,MAAM+G,EAAW,IAAIhH,OAAOgH,EAAW,IAAIjH,MAAMiH,EAAW,IAAIlH,KAAK4C,QAC1FyE,EAAiB,KAGvB,IAAKA,EAAkB,OAAO,KAG9B,GAAgC,IAA5BA,EAAiBpjB,OAYnB,OAXA+iB,EAAsBnI,IAET,UAAXA,EACIkI,EAAmBrH,EAAMD,EAAOD,EAAMD,GAC3B,WAAXV,EACAiI,EAAoBrH,EAAOD,EAAMD,GACtB,UAAXV,EACAgI,EAAmBrH,EAAMD,GACd,SAAXV,EACA+H,EAAkBrH,GAClB,OAEN0H,EAAUpI,EAAQqI,IACX,GAFoB,KAK3B,IAAMK,EACO,UAAX1I,EAAqB,SAAsB,WAAXA,EAAsB,QAAqB,UAAXA,EAAqB,OAAS,KAChG,OAAK0I,GACoB,IAArBD,EAA+B,KAC5BH,EAAqBI,EAAiBH,EAAlB,uBAAkCF,GAAlC,CAA8CI,KAF5C,KAKjCH,CAAqB,QAASR,IA1EvBtX,EAAI4C,EAAQ5C,GAAK2C,EAAM3C,IAAM,EAA7BA,GA4ET,OAAOsX,EDwCUa,CAAYzB,EAAW,EAAGA,EAAU9hB,OAAS,GAC9D,MAAO,CACL+I,KAAM+Y,EACN0B,KAAMf,EAENliB,MAAM,aACJ+Z,YAAa,CAAC,QACdnL,kBAAmB,OACnBO,gBAAiB,kBACjBD,cAAe,WACZlP,GAELkjB,KAAM,EACNC,UAAW,EACXC,KAAM,EACNC,UAAW,EAEXC,SAAU,CAAEC,MAAO,KAAMC,KAAM,MAC/BzH,SAAUA,EACVnW,KAAM,QACN/I,KAAM2kB,EACNlY,SAAUA,IAIDqY,GAA4B,SACvCJ,EACAC,EACA9V,EACA1L,GAC6B,IAAD,EACtByjB,EAAkC,UAAG/X,EAAUgY,mBAAb,aAAG,gBAAAhY,EACzC6V,EACAC,GAFyC,oBAGtC9V,EAAUiE,OAAO1P,KAAI,SAACqL,GAAD,OAASA,EAAIA,UAJX,EAMsBqT,GAAiB4C,GAAjDoC,EANU,EAMpBra,SACFA,GAPsB,4BAOToC,EAAUC,QAAQrC,SAAWoC,EAAUC,QAAQrC,SAAWqa,GAE7E,MAAO,CACLnb,KAAMib,EACN7d,KAAM,YACN/I,KAAM6O,EAAU7O,KAChByM,SAAUA,EACVtJ,MAAM,2BACDA,GADA,IAEH+Z,aAAkB,OAAL/Z,QAAK,IAALA,OAAA,EAAAA,EAAO+Z,cAAe,CAAC,aAEtCmJ,KAAM,EACNC,UAAW,EACXC,KAAM,EACNC,UAAW,EAEXC,SAAU,CAAEC,MAAO,KAAMC,KAAM,MAC/B9X,cE3LSkY,GAA6B,CAAC,OAAQ,UAAW,UAAW,UAAW,UAAW,UAAW,QAC7FC,GAAiB,SAACC,EAAoB9V,GAArB,OAAqC8V,EAAS9V,EAAM8V,EAASrkB,SA4H9EskB,GAA0B,SACrC1gB,GADqC,MAEoC,0BAAhBA,EAAO2gB,MACrDC,GAA4B,SACvC5gB,GADuC,MAEoC,4BAAhBA,EAAO2gB,MACvDE,GAA8B,SACzC7gB,GADyC,MAEoC,8BAAhBA,EAAO2gB,MAMzDG,GAA6B,SACxC9gB,GADwC,MAE8B,uBAAhBA,EAAO2gB,MAClDI,GAAuB,SAAC/gB,GAAD,MAClB,uBAAhBA,EAAO2gB,MAcIK,GAAoB,SAAI9kB,EAAyB8D,GAE5D,GAxDiC,SAACA,GAAD,MACjB,gBAAhBA,EAAO2gB,KAuDHM,CAAoBjhB,GAAS,CAE/B,IAAMkhB,EAAclhB,EAAOsM,OAAO4U,YAC5B/C,EAAYne,EAAOsM,OAAO6R,UAC1B9V,EAAYrI,EAAOsM,OAAOjE,UAE1BlQ,EADkB6H,EAAOsM,OAAOzF,gBACL3K,EAAQ8K,MAAMC,YACzCka,EAAgB,IAChBC,EAAoBxjB,KAAKyjB,IAAI,KAAMlpB,EAASgpB,IAAkBjlB,EAAQuL,UAAUrL,OAAS,EAAI,IAC7FxF,EAAmC,IAA7BsF,EAAQuL,UAAUrL,OAAe,EAAIjE,EAASyF,KAAKC,MAAMujB,GAC/DzkB,EAAU0L,EACZ,CAAEqO,YAAa,CAAC8J,GAAeD,GAAkB,KACjD,CAAE7J,YAAa8J,GAAeD,GAAkB,IAEpD,GAAiC,IAA7BrkB,EAAQuL,UAAUrL,OACpB,OAAO,2BACFF,GADL,IAEEuL,UAAW,CACTwW,GACErnB,EACAuB,EACA+oB,EACA/C,EACAxhB,MAKN,IACM5D,EADamD,EAAQuL,UAAU,GAAGtP,OAAS+D,EAAQuL,UAAU,GAAG7Q,IAEvDwqB,EAAoBD,GAC5BhpB,EAASgpB,EAAgBC,IAAsBllB,EAAQuL,UAAUrL,OAAS,GAC3E,KAEAsL,EAAWuW,GACfrnB,EACAuB,EACA+oB,EACA/C,EACAxhB,EACA0L,GAEIgW,EAAW3W,EAASX,MAAM,GAAGa,OAAO,GAO1C,OALIhD,GAAiByZ,IAAaA,EAASlZ,KAAKkZ,EAASlZ,KAAK/I,OAAS,GAAGiK,OAAOjK,OAAS,IACvFiiB,EAAgD1hB,MAAM+Z,YAAc2H,EAASlZ,KAC5EkZ,EAASlZ,KAAK/I,OAAS,GACvBiK,OAAOzJ,KAAI,SAAC8L,EAAGiC,GAAJ,OAAY6V,GAAeD,GAAkB5V,OAErD,2BACFzO,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAU7K,KAAI,SAAC0kB,EAAUC,GAalC,OAZoB,IAAhBA,GACFD,EAASnpB,OAASyF,KAAKif,IAAIyE,EAASnpB,OAASipB,EAAmBD,GAChEG,EAAS1qB,IAAM,GACN2qB,IAAgBrlB,EAAQuL,UAAUrL,OAAS,GACpDklB,EAAS1qB,IAAMsF,EAAQuL,UAAU8Z,EAAc,GAAGppB,OAClDmpB,EAASnpB,OAASvB,IAElB0qB,EAAS1qB,IAAMsF,EAAQuL,UAAU8Z,EAAc,GAAGppB,OAClDmpB,EAASnpB,OAAWY,EAChB6E,KAAKC,MAAMyjB,EAAS1qB,IAAMmC,GAC1BuoB,EAASnpB,OAASipB,GAEjBE,MAdF,CAgBP5Z,MAID,GAjF6B,SAAC1H,GAAD,MACpB,mBAAhBA,EAAO2gB,KAgFIa,CAAuBxhB,GAAS,CACzC,IAAM+H,EAAc/H,EAAOsM,OAAOvE,YAC5B0Z,EAAUvlB,EAAQuL,UAAUM,GAAa5P,OAAS+D,EAAQuL,UAAUM,GAAanR,IACjF8qB,EAAc9jB,KAAKiN,MAAM4W,GAAWvlB,EAAQuL,UAAUrL,OAAS,IAC/DulB,EAAcF,GAAWvlB,EAAQuL,UAAUrL,OAAS,GAC1D,OAAO,2BACFF,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,GAAanL,KAAI,SAACilB,EAAgBC,GAAjB,mBAAC,eAC3CD,GAD0C,IAE7CjrB,IAA4B,IAAvBirB,EAAejrB,IAAY,EAAIirB,EAAejrB,IAAM+qB,GAAe5Z,EAAc,GAAK2Z,EAC3FvpB,OACwB,IAAtB2pB,EACID,EAAe1pB,OAASupB,EAAcC,EACtCE,EAAe1pB,OAASupB,EAAcC,GAAe5Z,EAAc,GAAK2Z,QAPzE,aASJxlB,EAAQuL,UAAUma,MAAM7Z,EAAc,GAAGnL,KAAI,SAACilB,EAAgBC,GAAjB,mBAAC,eAC5CD,GAD2C,IAE9CjrB,IAAKirB,EAAejrB,KAAOkrB,EAAoB,GAAKJ,EACpDvpB,OACE2pB,IAAsB5lB,EAAQuL,UAAUma,MAAM7Z,EAAc,GAAG3L,OAAS,EACpEylB,EAAe1pB,OACf0pB,EAAe1pB,QAAU2pB,EAAoB,GAAKJ,WAIzD,GAzG0B,SAAC1hB,GAAD,MACjB,gBAAhBA,EAAO2gB,KAwGIoB,CAAoB/hB,GAAS,CAAC,IAAD,EACMA,EAAOsM,OAA3CvE,EAD8B,EAC9BA,YAAakO,EADiB,EACjBA,SAAUC,EADO,EACPA,SAC/B,GAAiB,IAAbA,GAAmF,IAAjEha,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOxL,OAAc,CAExF,IAAMqlB,EAAUvlB,EAAQuL,UAAUM,GAAa5P,OAAS+D,EAAQuL,UAAUM,GAAanR,IACjF8qB,EAAc9jB,KAAKiN,MAAM4W,GAAWvlB,EAAQuL,UAAUrL,OAAS,IAC/DulB,EAAcF,GAAWvlB,EAAQuL,UAAUrL,OAAS,GAC1D,OAAO,2BACFF,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,GAAanL,KAAI,SAACilB,EAAgBC,GAAjB,mBAAC,eAC3CD,GAD0C,IAE7CjrB,IAA4B,IAAvBirB,EAAejrB,IAAY,EAAIirB,EAAejrB,IAAM+qB,GAAe5Z,EAAc,GAAK2Z,EAC3FvpB,OACwB,IAAtB2pB,EACID,EAAe1pB,OAASupB,EAAcC,EACtCE,EAAe1pB,OAASupB,EAAcC,GAAe5Z,EAAc,GAAK2Z,QAPzE,aASJxlB,EAAQuL,UAAUma,MAAM7Z,EAAc,GAAGnL,KAAI,SAACilB,EAAgBC,GAAjB,mBAAC,eAC5CD,GAD2C,IAE9CjrB,IAAKirB,EAAejrB,KAAOkrB,EAAoB,GAAKJ,EACpDvpB,OACE2pB,IAAsB5lB,EAAQuL,UAAUma,MAAM7Z,EAAc,GAAG3L,OAAS,EACpEylB,EAAe1pB,OACf0pB,EAAe1pB,QAAU2pB,EAAoB,GAAKJ,WAK9D,OAAO,2BACFxlB,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,IADvB,4BAGF7L,EAAQuL,UAAUM,IAHhB,IAILhB,MAAM,GAAD,oBACA7K,EAAQuL,UAAUM,GAAahB,MAAM6a,MAAM,EAAG3L,IAD9C,4BAGE/Z,EAAQuL,UAAUM,GAAahB,MAAMkP,IAHvC,IAIDrO,OAAO,GAAD,oBACD1L,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM,EAAG1L,IAD9D,aAGDha,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM1L,EAAW,QAP3E,aAUAha,EAAQuL,UAAUM,GAAahB,MAAM6a,MAAM3L,EAAW,QAdtD,aAiBJ/Z,EAAQuL,UAAUma,MAAM7Z,EAAc,OAI1C,GA3MuB,SAAC/H,GAAD,MACd,aAAhBA,EAAO2gB,KA0MIqB,CAAiBhiB,GAAS,CACnC,IAAMkhB,EAAclhB,EAAOsM,OAAO4U,YAC5B/C,EAAYne,EAAOsM,OAAO6R,UAC1B9V,EAAcrI,EAAOsM,OAAOjE,UAAYrI,EAAOsM,OAAOjE,UAAY,KAClEN,EAAc/H,EAAOsM,OAAOvE,YAI5BpL,EAAU0L,EACZ,CAAEqO,YAAa,CAAC8J,GAAeD,GAAkBrkB,EAAQuL,UAAUM,GAAahB,MAAM,GAAGa,OAAOxL,UAChG,CAAEsa,YAAa8J,GAAeD,GAAkBrkB,EAAQuL,UAAUM,GAAahB,MAAM,GAAGa,OAAOxL,SAE7FiiB,EAAahW,EACfiW,GACE4C,EACA/C,EACA9V,EACA1L,GAEF4hB,GAAsB2C,EAAgC/C,EAAWxhB,GAC/DkI,EAAQwZ,EAMd,OALIzZ,GAAiBC,IAAUA,EAAMM,KAAKkZ,EAASlZ,KAAK/I,OAAS,GAAGiK,OAAOjK,OAAS,IACjFyI,EAA6ClI,MAAM+Z,YAAc7R,EAAMM,KAAKkZ,EAASlZ,KAAK/I,OAAS,GAAGiK,OAAOzJ,KAC5G,SAAC8L,EAAGiC,GAAJ,OAAY6V,GAAeD,GAAkB5V,OAG1C,2BACFzO,GADL,IAEEuL,UAAU,aACLvL,EAAQuL,UAAU7K,KAAI,SAAC0kB,EAAUC,GAClC,OAAIA,IAAgBxZ,EACX,2BACFuZ,GADL,IAEEva,MAAO,CAAC,2BAAKua,EAASva,MAAM,IAArB,IAAyBa,OAAO,GAAD,oBAAM0Z,EAASva,MAAM,GAAGa,QAAxB,gBAAsCyW,UAEpEiD,QAIb,GAzMmB,SAACthB,GAAD,MAAoF,SAAhBA,EAAO2gB,KAyM1FsB,CAAajiB,GAAS,CAC/B,IAAMuH,EAAKvH,EAAOsM,OAAO/E,GACLvH,EAAOsM,OAAOvE,YAWlC,OATiB/H,EAAOsM,OAAO/J,KAE3B,CAAC,QAAS,SAASiK,SAASxM,EAAOsM,OAAO/J,MAC1C,EACA,CAAC,aAAaiK,SAASxM,EAAOsM,OAAO/J,MACrC,EACA,EALA,IAQavC,EAAOsM,OAAO/J,MAIrBgF,GAAQvH,EAAOsM,OAAO/J,KACvB,2BAAKrG,GAAZ,IAAqBgmB,KAAM,CAAEC,WAAW,EAAMC,MAAO,GAAI7f,KAAMvC,EAAOsM,OAAO/J,QAExErG,EANE,2BAAKA,GAAZ,IAAqBgmB,KAX0B,CAAEC,WAAW,EAAOC,MAAO,MAkBvE,GApQiC,SACxCpiB,GADwC,MAE8B,uBAAhBA,EAAO2gB,KAkQlD0B,CAA2BriB,GAAS,CAC7C,IAAM1I,EAAQ0I,EAAOsM,OAAOhV,MAC5B,OAAO,2BAAK4E,GAAZ,IAAqBomB,gBAAiBhrB,IACjC,GA1NiC,SACxC0I,GADwC,MAE8B,uBAAhBA,EAAO2gB,KAwNlD4B,CAA2BviB,GAAS,CAC7C,IAAM1I,EAAQ0I,EAAOsM,OAAOhV,MAC5B,OAAO,2BACF4E,GADL,IAEEsmB,KAAK,2BAAMtmB,EAAQsmB,MAAf,IAAqB7lB,MAAM,2BAAMT,EAAQsmB,KAAK7lB,OAApB,IAA2B+Z,YAAapf,QAEnE,GA1Q+B,SAAC0I,GAAD,MACtB,qBAAhBA,EAAO2gB,KAyQI8B,CAAyBziB,GAAS,CAC3C,IAAM1I,EAAQ0I,EAAOsM,OAAOhV,MAC5B,OAAO,2BACF4E,GADL,IAEE8K,MAAM,2BACD9K,EAAQ8K,OADR,IAEHrK,MAAM,2BAAMT,EAAQ8K,MAAMrK,OAArB,IAA4B+lB,UAAWprB,MAE9CyP,MAAM,2BAAM7K,EAAQ6K,OAAf,IAAsBpK,MAAM,2BAAMT,EAAQ6K,MAAMpK,OAArB,IAA4B+lB,UAAWprB,QAEpE,GAlRiC,SACxC0I,GADwC,MAE8B,uBAAhBA,EAAO2gB,KAgRlDgC,CAA2B3iB,GAAS,CAC7C,IAAM1I,EAAQ0I,EAAOsM,OAAOhV,MAC5B,OAAO,2BACF4E,GADL,IAEE8K,MAAM,2BACD9K,EAAQ8K,OADR,IAEHrK,MAAM,2BAAMT,EAAQ8K,MAAMrK,OAArB,IAA4B+Z,YAAapf,MAEhDyP,MAAM,2BAAM7K,EAAQ6K,OAAf,IAAsBpK,MAAM,2BAAMT,EAAQ6K,MAAMpK,OAArB,IAA4B+Z,YAAapf,QAEtE,GAzR+B,SAAC0I,GAAD,MACtB,qBAAhBA,EAAO2gB,KAwRIiC,CAAyB5iB,GAAS,CAC3C,IAAM1I,EAAQ0I,EAAOsM,OAAOhV,MAC5B,OAAO,2BACF4E,GADL,IAEE8K,MAAM,2BACD9K,EAAQ8K,OADR,IAEHrK,MAAM,2BAAMT,EAAQ8K,MAAMrK,OAArB,IAA4BmN,UAAWxS,MAE9CyP,MAAM,2BAAM7K,EAAQ6K,OAAf,IAAsBpK,MAAM,2BAAMT,EAAQ6K,MAAMpK,OAArB,IAA4BmN,UAAWxS,QAEpE,GAjS8B,SAAC0I,GAAD,MACrB,oBAAhBA,EAAO2gB,KAgSIkC,CAAwB7iB,GACjC,OAAO,2BACF9D,GADL,IAEEsmB,KAAK,2BAAMtmB,EAAQsmB,MAAf,IAAqBM,UAAW5mB,EAAQsmB,KAAKM,aAE9C,GApS8B,SAAC9iB,GAAD,MACrB,oBAAhBA,EAAO2gB,KAmSIoC,CAAwB/iB,GACjC,OAAO,2BACF9D,GADL,IAEEsmB,KAAK,2BAAMtmB,EAAQsmB,MAAf,IAAqBQ,UAAW9mB,EAAQsmB,KAAKQ,aAE9C,GA9Q+B,SAAChjB,GAAD,MACtB,qBAAhBA,EAAO2gB,KA6QIsC,CAAyBjjB,GAClC,OAAO,2BAAK9D,GAAZ,IAAqBgnB,YAAahnB,EAAQgnB,aACrC,GAzSgC,SACvCljB,GADuC,MAEoC,4BAAhBA,EAAO2gB,KAuSvDwC,CAA0BnjB,GAAS,CAC5C,IAAM+H,EAAc/H,EAAOsM,OAAOvE,YAC5BkO,EAAWjW,EAAOsM,OAAO2J,SACzBC,EAAWlW,EAAOsM,OAAO4J,SACzB5e,EAAQ0I,EAAOsM,OAAOhV,MACd4E,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,GACpE,OAAO,2BACFha,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,IADvB,4BAGF7L,EAAQuL,UAAUM,IAHhB,IAILhB,MAAO,CAAC,2BAED7K,EAAQuL,UAAUM,GAAahB,MAAMkP,IAFrC,IAGHrO,OAAO,GAAD,oBACD1L,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM,EAAG1L,IAD9D,4BAGCha,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,IAHvD,IAIFvZ,MAAM,2BACDT,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,GAAUvZ,OADhE,IAEH+Z,YAAa,CAACpf,QANd,aASD4E,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM1L,EAAW,WAhB3E,aAqBJha,EAAQuL,UAAUma,MAAM7Z,EAAc,OAGxC,GACL2Y,GAAwB1gB,IACxB4gB,GAA0B5gB,IAC1B6gB,GAA4B7gB,GAC5B,CACA,IAAM+H,EAAc/H,EAAOsM,OAAOvE,YAC5BkO,EAAWjW,EAAOsM,OAAO2J,SACzBC,EAAWlW,EAAOsM,OAAO4J,SACzB5e,EAAQ0I,EAAOsM,OAAOhV,MACtB8rB,EAAO1C,GAAwB1gB,GACjC,gBACA4gB,GAA0B5gB,GAC1B,kBACA6gB,GAA4B7gB,GAC5B,oBACA,KACJ,OAAKojB,EACE,2BACFlnB,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,IADvB,4BAGF7L,EAAQuL,UAAUM,IAHhB,IAILhB,MAAO,CAAC,2BAED7K,EAAQuL,UAAUM,GAAahB,MAAMkP,IAFrC,IAGHrO,OAAO,GAAD,oBACD1L,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM,EAAG1L,IAD9D,4BAGCha,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,IAHvD,IAIFvZ,MAAM,2BACDT,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,GAAUvZ,OADhE,mBAEFymB,EAAO9rB,OANR,aASD4E,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM1L,EAAW,WAhB3E,aAqBJha,EAAQuL,UAAUma,MAAM7Z,EAAc,OAxB3B7L,EA2Bb,GAAI4kB,GAA2B9gB,IAAW+gB,GAAqB/gB,GAAS,CAC7E,IAAM+H,EAAc/H,EAAOsM,OAAOvE,YAC5BkO,EAAWjW,EAAOsM,OAAO2J,SACzBC,EAAWlW,EAAOsM,OAAO+W,QACzB/rB,EAAQ0I,EAAOsM,OAAOhV,MACtB8rB,EAAOtC,GAA2B9gB,GACpC,cACA+gB,GAAqB/gB,GACrB,cACA,KACJ,OAAKojB,EACE,2BACFlnB,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,IADvB,4BAGF7L,EAAQuL,UAAUM,IAHhB,IAILhB,MAAO,CAAC,2BAED7K,EAAQuL,UAAUM,GAAahB,MAAMkP,IAFrC,IAGHuI,MAAM,GAAD,oBACAtiB,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUuI,MAAMoD,MAAM,EAAG1L,IAD9D,4BAGEha,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUuI,MAAMtI,IAHvD,IAIDvZ,MAAM,2BACDT,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUuI,MAAMtI,GAAUvZ,OAD/D,mBAEFymB,EAAO9rB,OANT,aASA4E,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUuI,MAAMoD,MAAM1L,EAAW,WAhB1E,aAqBJha,EAAQuL,UAAUma,MAAM7Z,EAAc,OAxB3B7L,EA2Bb,GA7Y0B,SAAC8D,GAAD,MACjB,sBAAhBA,EAAO2gB,KA4YI2C,CAAoBtjB,GAAS,CACtC,IAAM+H,EAAc/H,EAAOsM,OAAOvE,YAC5BkO,EAAWjW,EAAOsM,OAAO2J,SACzBC,GAAWlW,EAAOsM,OAAO4J,SACzBqN,GAAWvjB,EAAOsM,OAAOiX,SACzBtb,GAAMjI,EAAOsM,OAAOrE,IAEpBub,GAAiBtnB,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,IAE7E,IAAKtR,GAAiB4e,IAAiB,OAAOtnB,EAC9C,IAAMunB,GAAKD,GAAenb,UAAUgY,YAC9BqD,GAAUxnB,EAAQuL,UAAU,GAAGV,MAAM,GAAGa,OAAO,GAAGzC,KACpDmH,GAASkX,GAAenb,UAAUiE,OAAO1P,KAAI,SAACqL,GAAD,OAASA,EAAIA,OAC9DqE,GAAOiX,IAAYtb,GACnB,IAAMmY,GAAgBqD,GAAE,WAAF,GAAGC,GAASF,GAAehqB,MAA3B,oBAAoC8S,MA0B1D,OAzBArJ,QAAQC,IACN,YACA+E,GACAF,EACAkO,EACAC,GACAqN,GACA3e,GAAiB4e,IACjBlX,GACA8T,GATF,2BAWOoD,GAAenb,WAXtB,IAYIiE,OAAO,GAAD,oBACDkX,GAAenb,UAAUiE,OAAOsV,MAAM,EAAG2B,KADxC,4BAGCC,GAAenb,UAAUiE,OAAOiX,KAHjC,IAIFtb,IAAKA,MAJH,aAMDub,GAAenb,UAAUiE,OAAOsV,MAAM2B,GAAW,QAOnD,2BACFrnB,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,IADvB,4BAGF7L,EAAQuL,UAAUM,IAHhB,IAILhB,MAAO,CAAC,2BAED7K,EAAQuL,UAAUM,GAAahB,MAAMkP,IAFrC,IAGHrO,OAAO,GAAD,oBACD1L,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM,EAAG1L,KAD9D,4BAGCsN,IAHD,IAIFre,KAAMib,GACN/X,UAAU,2BACLmb,GAAenb,WADX,IAEPiE,OAAO,GAAD,oBACDkX,GAAenb,UAAUiE,OAAOsV,MAAM,EAAG2B,KADxC,4BAGCC,GAAenb,UAAUiE,OAAOiX,KAHjC,IAIFtb,IAAKA,MAJH,aAMDub,GAAenb,UAAUiE,OAAOsV,MAAM2B,GAAW,UAbtD,aAiBDrnB,EAAQuL,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOga,MAAM1L,GAAW,WAxB3E,aA6BJha,EAAQuL,UAAUma,MAAM7Z,EAAc,OAGxC,GA7c6B,SAAC/H,GAAD,MACpB,mBAAhBA,EAAO2gB,KA4cIgD,CAAuB3jB,GAAS,CACzC,IAAM+H,GAAc/H,EAAOsM,OAAOvE,YAC5BkO,GAAWjW,EAAOsM,OAAO2J,SACzBoN,GAAUrjB,EAAOsM,OAAO+W,QACxBpb,GAAMjI,EAAOsM,OAAOrE,IAEpB2b,GAA8B,CADpB1nB,EAAQuL,UAAUM,IAAahB,MAAMkP,IAAUuI,MAAM6E,IAAS9b,GAAG,GAAG,GACtCU,IAC9C,OAAO,2BACF/L,GADL,IAEEuL,UAAU,GAAD,oBACJvL,EAAQuL,UAAUma,MAAM,EAAG7Z,KADvB,4BAGF7L,EAAQuL,UAAUM,KAHhB,IAILhB,MAAO,CAAC,2BAED7K,EAAQuL,UAAUM,IAAahB,MAAMkP,KAFrC,IAGHuI,MAAM,GAAD,oBACAtiB,EAAQuL,UAAUM,IAAahB,MAAMkP,IAAUuI,MAAMoD,MAAM,EAAGyB,KAD9D,4BAEEnnB,EAAQuL,UAAUM,IAAahB,MAAMkP,IAAUuI,MAAM6E,KAFvD,IAEiE9b,GAAI,CAACqc,OAFtE,aAGA1nB,EAAQuL,UAAUM,IAAahB,MAAMkP,IAAUuI,MAAMoD,MAAMyB,GAAU,WAVzE,aAeJnnB,EAAQuL,UAAUma,MAAM7Z,GAAc,OAGxC,OAhf+B,SACtC/H,GADsC,MAEoC,2BAAhBA,EAAO2gB,KA8etDkD,CAAyB7jB,GAE3B,2BACF9D,GADL,IAEEmL,QAASrH,EAAOsM,OAAOwX,SAASzc,QAChCT,cAAe5G,EAAOsM,OAAOwX,SAASld,cAEtCa,UAAWzH,EAAOsM,OAAOwX,SAASrc,UAClCya,KAAK,2BAAMhmB,EAAQgmB,MAASliB,EAAOsM,OAAOwX,SAAS5B,MACnDlb,MAAM,2BAAM9K,EAAQ8K,OAAUhH,EAAOsM,OAAOwX,SAAS9c,SAIlD9K,GC7mBI6nB,GAAkB,SAC7BC,EACAnd,EACAod,GAH6B,MAIY,CACzCC,SAAU,SACRhD,EACA/C,EACApW,EACAM,GAJQ,OAvBK,SACf6Y,EACA/C,EACApW,EACAkc,EACA5b,GAMC4b,EAJ6C,CAC5CtD,KAAM,WACNrU,OAAQ,CAAEvE,cAAamZ,cAAa7Y,YAAW8V,eAmB5C+F,CAAShD,EAAa/C,EAAWpW,EAAakc,EAAU5b,IAC7D8b,YAAa,SACXjD,EACA/C,EACA9V,GAHW,OA3CK,SAClB6Y,EACA/C,EACAtX,EACAod,EACA5b,GAMA4b,EAJiD,CAC/CtD,KAAM,cACNrU,OAAQ,CAAE4U,cAAa/C,YAAW9V,YAAWxB,qBAsC1Csd,CAAYjD,EAAa/C,EAAWtX,EAAiBod,EAAU5b,IACpE+b,YAAa,SAACrc,GAAD,OAAyBic,EAAWvc,UAAUM,IAC3Dsc,SAAU,SAACtc,EAAqBkO,GAAtB,OAA2C+N,EAAWvc,UAAUM,GAAahB,MAAMkP,IAC7FqO,SAAU,SAACvc,EAAqBkO,EAAkBC,GAAxC,OACR8N,EAAWvc,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,IAC3DrN,OAAQ,SAACH,EAAW6b,GAA0B,IAAD,EACAP,EAAWhd,MAA9C4D,EADmC,EACnCA,aAAc4Z,EADqB,EACrBA,iBAEtB,OAAO9b,EAAIkC,QAD4BzO,IAAhBooB,EAA4BA,EAAcC,IAGnE1b,OAAQ,SAAC2b,EAAcF,GAA0B,IAAD,EACHP,EAAWhd,MAA9C4D,EADsC,EACtCA,aAAc4Z,EADwB,EACxBA,iBAEtB,OAAQC,QAD+BtoB,IAAhBooB,EAA4BA,EAAcC,IAChC5Z,GAEnCO,OAAQ,SAACxC,EAAWZ,EAAqBkO,EAAkBwI,GAA0B,IAAD,EACjBuF,EAAWvc,UAAUM,GAAahB,MAAMkP,GAAjG0I,EAD0E,EAC1EA,YAAa1Y,EAD6D,EAC7DA,SAAuBye,EADsC,EACnDjG,YACzBkG,OAAiCxoB,IAAhBsiB,EAA4BA,EAAciG,EACjE,OAAOV,EAAWvc,UAAUM,GAAa5P,OAASwQ,EAAI/K,KAAK4K,IAAI,GAAIvC,GAAY0Y,EAAcgG,GAE/Fxc,OAAQ,SAACyc,EAAc7c,EAAqBkO,EAAkBwI,GAA0B,IAAD,EACpBuF,EAAWvc,UAAUM,GAAahB,MAAMkP,GAAjG0I,EAD6E,EAC7EA,YAAa1Y,EADgE,EAChEA,SAAuBye,EADyC,EACtDjG,YACzBkG,OAAiCxoB,IAAhBsiB,EAA4BA,EAAciG,EACjE,OAASV,EAAWvc,UAAUM,GAAa5P,OAASwsB,EAAiBC,GAAQjG,EAAe/gB,KAAK4K,IAAI,IAAKvC,MCzEjG4e,GAAa,SAACnc,EAAWoc,EAAoBla,GACxD,OAAOlC,EAAIkC,EAAeka,GAEfC,GAAa,SAACN,EAAcK,EAAoBla,GAC3D,OAAQ6Z,EAAOK,GAAcla,GCNlBoa,GAAa,SAACrc,EAAWsc,EAAoBhf,EAAkBwY,EAAqByG,GAC/F,OAAOD,EAAatc,EAAI/K,KAAK4K,IAAI,GAAIvC,GAAYif,EAAWzG,GAEjD0G,GAAa,SACxBP,EACAK,EACAhf,EACAwY,EACAyG,GAEA,OAASD,EAAaxG,EAAcmG,GAAQM,EAAYtnB,KAAK4K,IAAI,IAAKvC,IAG3Dmf,GAAmB,SAC9BR,EACAhf,EACAyf,EACAtd,EACAkO,EACAqP,GAEA,IAAMC,EAAYD,GAAgC,GAClD,GAAIvZ,GAAU6Y,IAAS7Y,GAAUsZ,IAActZ,GAAUhE,IAAgBgE,GAAUkK,IAAalK,GAAUnG,GACxG,OAAO,KACT,IAAMS,EAAS,GAOf,GANIN,GAAmBH,GACfA,EAAQS,OAAO,IAAIA,EAAO3B,KAAKkB,EAAQS,OAAO,IAEhDV,GAAqBC,GAAUS,EAAO3B,KAAKkB,EAAQN,KAAMM,EAAQL,KAAMK,EAAQJ,IAAKI,EAAQH,OAC3FY,EAAO3B,KAAKkB,EAAQH,OAEL,IAAlBY,EAAOjK,OAAc,OAAO,KAEhC,IAAIopB,EAAyC,GAc7C,OAbAnf,EAAOoE,SAAQ,SAACnE,EAAOmf,GACrB,IAAMC,EAAYV,GAChB1e,EACA+e,EAAUtd,GAAa5P,OACvBktB,EAAUtd,GAAahB,MAAMkP,GAAUhQ,SACvCof,EAAUtd,GAAahB,MAAMkP,GAAUwI,YACvC4G,EAAUtd,GAAahB,MAAMkP,GAAU0I,aAErC+G,GAAad,EAAOW,GAAWG,GAAad,EAAOW,GACrDC,EAAQ9gB,KAAK,CAAEiE,EAAGrC,EAAMC,QAAQ0F,GAAY3F,IAASse,KAAMc,OAIzDF,EACGA,EAAQG,MAAK,SAACC,EAAGhQ,GACtB,OAAIhY,KAAKgc,IAAIgM,EAAEhB,KAAOA,GAAQhnB,KAAKgc,IAAIhE,EAAEgP,KAAOA,IAAe,EACtDhnB,KAAKgc,IAAIgM,EAAEhB,KAAOA,GAAQhnB,KAAKgc,IAAIhE,EAAEgP,KAAOA,GAAc,EAC5D,KAEJ,MAyCF,IAAMiB,GAAyB,SACpCR,EACAza,EACAR,EACAD,EACA2b,EACAC,GAEA,IAAKV,EAAW,OAAO,KACvB,GAAyB,IAArBA,EAAUjpB,OAAc,OAAO,KAEnC,IAAM4pB,EAAsBX,EAmG5B,OAjGAW,EAAoBvb,SAAQ,SAAC/C,EAAUK,GACrC,IAAMke,EAA+C,GACrDve,EAASX,MAAM0D,SAAQ,SAAC1D,EAAOkP,GAC7B,IAAIiQ,EAAoC,KACpCC,EAAoC,KACpCvJ,EAAsB,EAC1B7V,EAAMa,OAAO6C,SAAQ,SAAC2b,EAAQlQ,GAAc,IAAD,gBACnCrR,EAAQmhB,EAAoBje,GAAahB,MAAMkP,GAAUrO,OAAOsO,GAChE/Q,EAAON,EAAMM,KACnBN,EAAMob,SAASE,KAAO,CACpBhb,KAAMA,EAAKgF,GACXzB,EAAGyB,EACHsa,KAAMsB,EACN1b,WAAY,IAEdxF,EAAMob,SAASC,MAAQ,CACrB/a,KAAMA,EAAKiF,GACX1B,EAAG0B,EACHqa,KAAMqB,EACNzb,WAAY,IAEd,IAAME,EAAU1F,EAAMM,KAAK5L,QAAO,SAAC0O,EAAK0C,GAAN,OAAcA,GAAOP,GAAUO,GAAOR,KACxEtF,EAAM0F,QAAUA,EAChB1F,EAAMib,UACJlb,GAAiBC,KAAW,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOwD,iBAAR,iBAAC,EAAkBC,eAAnB,aAAC,EAA2B+d,aAAxD,OACIxhB,QADJ,IACIA,GADJ,UACIA,EAAOwD,iBADX,iBACI,EAAkBC,eADtB,aACI,EAA2B+d,YAAY,GACvCzoB,KAAKif,IAAL,MAAAjf,KAAI,aACC2M,EAAQ3N,KAAI,SAACgJ,GACd,GAAIG,GAAmBH,GAAU,CAC/B,IAAMiX,EAAMjf,KAAKif,IAAL,MAAAjf,KAAI,aAASgI,EAAQS,OAAO9M,QAAO,SAAC+M,GAAD,OAAqB,OAAVA,OAC1D,OAAKuW,GAAe,IAARA,EACLA,EADuB,EAGhC,OAAIlX,GAAqBC,GAAiBA,EAAQL,KAC3CK,EAAQH,WAGzBZ,EAAMmb,UACJpb,GAAiBC,KAAW,OAACA,QAAD,IAACA,GAAD,UAACA,EAAOwD,iBAAR,iBAAC,EAAkBC,eAAnB,aAAC,EAA2B+d,aAAxD,OACIxhB,QADJ,IACIA,GADJ,UACIA,EAAOwD,iBADX,iBACI,EAAkBC,eADtB,aACI,EAA2B+d,YAAY,GACvCzoB,KAAKyjB,IAAL,MAAAzjB,KAAI,aACC2M,EAAQ3N,KAAI,SAACgJ,GACd,GAAIG,GAAmBH,GAAU,CAC/B,IAAMyb,EAAMzjB,KAAKyjB,IAAL,MAAAzjB,KAAI,aAASgI,EAAQS,OAAO9M,QAAO,SAAC+M,GAAD,OAAqB,OAAVA,OAC1D,OAAK+a,GAAe,IAARA,EACLA,EADuB,EAGhC,OAAI1b,GAAqBC,GAAiBA,EAAQJ,IAC3CI,EAAQH,YAGE,OAAvBygB,GAA+BrhB,EAAMmb,UAAYkG,KAAoBA,EAAqBrhB,EAAMmb,YACzE,OAAvBmG,GAA+BthB,EAAMib,UAAYqG,KAAoBA,EAAqBthB,EAAMib,WAChGjb,EAAMoB,SAAW2W,IAAaA,EAAc/X,EAAMoB,aAIxD,IAAMqgB,EAAkB1oB,KAAKif,IAAIjf,KAAKC,OAAO6J,EAASvP,OAASuP,EAAS9Q,KAAO,IAAK,GAG9EqP,EAAW2W,EAEX8B,EAlGL,SAAyB7B,EAAawE,EAAakF,EAAaC,GAQrE,IAPA,IAAIC,EAAmB,EAAI7oB,KAAK4K,IAAI,GAAI+d,GACpCG,EAAkBD,EAClBE,EAAkBD,EAChBE,EAAuB,SAACC,GAAD,OAAmBjpB,KAAKgc,KAAKiD,EAAMwE,GAAOwF,EAAQL,IAC3EM,EAAYF,EAAqBF,GAEjClf,EAAI,EACDkf,EAAkB7J,EAAMwE,GAAK,CAClC,IAAK,IAAI1Z,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMof,EAAe,IAANpf,EAAU,EAAU,IAANA,EAAU,IAAM,EACzCqf,EAAkBJ,EAAqBF,EAAkBK,GACzDC,EAAkBF,IACpBA,EAAYE,EACZL,EAAkBD,EAAkBK,GAGxCvf,IACAkf,EAAkBD,EAAmB7oB,KAAK4K,IAAI,GAAIhB,GAEpD,OAAOe,WAAWoe,EAAgBpgB,QAAQggB,IA8EjBU,CAJrBd,EAAqBA,GAAsB,EAC3CD,EAAqBA,GAAsB,EAGkCjgB,EAAUqgB,GACvFvf,EAAM2X,aAAeA,EAErB,IAAIwI,EAA+B,KAC/BC,EAA+B,KACnCpgB,EAAMa,OAAO6C,SAAQ,SAAC5F,EAAOqR,GAC3BrR,EAAMgb,KAAOjiB,KAAKwpB,KAAKviB,EAAMib,UAAYpB,GAAgBA,EACzD7Z,EAAMkb,KAAOniB,KAAKiN,MAAMhG,EAAMmb,UAAYtB,GAAgBA,GACpC,OAAlBwI,GAA0BriB,EAAMgb,KAAOqH,KAAeA,EAAgBriB,EAAMgb,OAC1D,OAAlBsH,GAA0BtiB,EAAMkb,KAAOoH,KAAeA,EAAgBtiB,EAAMkb,SAGlF,IAAMpB,GACHjX,EAASvP,OAASuP,EAAS9Q,OAASswB,GAAiB,IAAMC,GAAiB,IAAMvpB,KAAK4K,IAAI,GAAIvC,GAClGc,EAAM4X,YAAcA,EACpB5X,EAAM0X,aAAeuG,GAAWmC,GAAiB,EAAGzf,EAASvP,OAAQ8N,EAAU,EAAG0Y,GAAejX,EAASvP,OAU1G,IATA,IAAIkvB,EAAWlC,GAAWzd,EAASvP,OAAQuP,EAASvP,OAAQ8N,EAAUc,EAAM0X,YAAa1X,EAAM4X,aAC3FnX,EAAIwd,GACNpnB,KAAKwpB,KAAKC,EAAW3I,GAAgBA,EACrChX,EAASvP,OACT8N,EACAc,EAAM0X,YACNE,GAGKnX,GAAKE,EAAS9Q,KAAK,CACxB,IAAI0wB,EAAKnC,GAAW3d,EAAGE,EAASvP,OAAQ4O,EAAMd,SAAUc,EAAM0X,YAAa1X,EAAM4X,aAC7E4I,GAAW3pB,KAAKC,MAAMypB,EAAK1pB,KAAK4K,IAAI,GAAIvC,IAAarI,KAAK4K,IAAI,GAAIvC,IAAWwC,WAC7EjB,EAAEE,EAAS9Q,IAAI,IAAM4Q,EAAGE,EAASvP,OAAO,IAC5C8tB,EAAUvhB,KAAK,CAAEkgB,KAAMpd,EAAG1G,MAAOymB,IACjC/f,GAAMmX,EAAcD,EAAgB9gB,KAAK4K,IAAI,IAAKvC,GAEpDc,EAAM6X,UAAYqH,QAGfD,GC/LIwB,GAAyB,SACpCpF,EACAiD,GAEA,IAAKjD,IAAUiD,EAAW,OAAO,KACjC,IAAK,IAAI7d,EAAI,EAAGA,EAAI6d,EAAUjpB,OAAQoL,IAAK,CACzC,IAAME,EAAW2d,EAAU7d,GAC3B,GAAI4a,EAAM,IAAM1a,EAAS9Q,KAAOwrB,EAAM,GAAK1a,EAASvP,OAAQ,OAAOqP,EAErE,OAAO,MA8DIigB,GAAoB,SAC/BC,EACArC,EACAre,EACA2gB,EACAxF,EACAyF,EACAC,GAOA,IAAKH,EAAY,OAAO,KACxB,GAAIC,EAAW,OAAO,KAEtB,GAAIxF,EAEF,MAAO,CACL5f,KAAM,WAENulB,KAAMJ,GAIV,IAAMK,EAzEa,SACnB3F,EACAiD,EACAre,GAEA,IAAKob,IAAUiD,IAAcre,EAAO,MAAO,GAC3C,IAAMe,EAAcyf,GAAuBpF,EAAOiD,GAClD,GAAoB,OAAhBtd,EAAsB,MAAO,GAEjC,IAAIigB,EAA+C,GAC7CzD,EAAcvd,EAAMwd,iBACpB5Z,EAAe5D,EAAMihB,mBAiC3B,OAhCA5C,EAAUtd,GAAahB,MAAM0D,SAAQ,SAACyd,EAAaC,GACjD,IAAM1J,EAAcyJ,EAAYzJ,YAC1BE,EAAcuJ,EAAYvJ,YAChCuJ,EAAY1J,MAAM/T,SAAQ,SAAC2d,EAAM/E,GAC/B+E,EAAK7gB,GAAGkD,SAAQ,SAAC4d,EAAUC,GAEvBlG,EAAM,IAAMyC,GAAWwD,EAAS,GAAI9D,EAAa3Z,GAAgB,IACjEwX,EAAM,IAAMyC,GAAWwD,EAAS,GAAI9D,EAAa3Z,GAAgB,IACjEwX,EAAM,IACJ4C,GACEqD,EAAS,GACThD,EAAUtd,GAAa5P,OACvBktB,EAAUtd,GAAahB,MAAMohB,GAAgBliB,SAC7CwY,EACAE,GAEA,IACJyD,EAAM,IACJ4C,GACEqD,EAAS,GACThD,EAAUtd,GAAa5P,OACvBktB,EAAUtd,GAAahB,MAAMohB,GAAgBliB,SAC7CwY,EACAE,GAEA,IAEJqJ,EAAStjB,KAAK,CAACqD,EAAaogB,EAAgB9E,EAASiF,aAKtDN,EA6BcO,CAAab,EAAYrC,EAAWre,GACzD,GAAI+gB,EAAa3rB,OAAS,EACxB,MAAO,CACLmG,KAAM,WACN8J,IAAK0b,EACLD,KAAMzC,EAAU0C,EAAa,GAAG,IAAIhhB,MAAMghB,EAAa,GAAG,IAAIvJ,MAAMuJ,EAAa,GAAG,IAAIxgB,GAAGwgB,EAAa,GAAG,KAE/G,IAAMS,EA5F8B,SACpCpG,EACAiD,GAEA,IAAKjD,EAAO,OAAO,KACnB,IAAK,IAAI5a,EAAI,EAAGA,EAAI6d,EAAUjpB,OAAQoL,IAAK,CACzC,IAAME,EAAW2d,EAAU7d,GAC3B,GAAI4a,EAAM,IAAM1a,EAASvP,OAAS,IAAMiqB,EAAM,GAAK1a,EAASvP,OAAS,GAAI,OAAOqP,EAElF,OAAO,KAmFmBihB,CAAuBf,EAAYrC,GAC7D,OAA0B,OAAtBmD,GAA8BA,IAAsBnD,EAAUjpB,OAAO,EAChE,CAAEmG,KAAM,iBAAkB8J,IAAKmc,EAAmBE,WAAYrD,EAAUmD,GAAmBrwB,QAGlGuvB,EAAW,IAAM,GAAKA,EAAW,GAAK,EAAIE,GAAeF,EAAW,IAAM,GAAKA,EAAW,GAAK,EAAIG,EAC5E,CAAEtlB,KAAM,aACZmlB,EAAW,IAAM,GAAKA,EAAW,GAAK,EAAIE,GAAeF,EAAW,IAAM,EAAIG,EAC1E,CAAEtlB,KAAM,SAC1B,MAGIomB,GAAmB,SAC9BC,EACAvD,EACAre,EACAK,GAEA,GAA4B,aAAxBuhB,EAAermB,MAAqD,IAA9BqmB,EAAevc,IAAIjQ,SAAiBwsB,EAAed,KAAM,OAAOzC,EAE1G,IAAMwD,EAAYxhB,EAAQQ,aAAaP,KAAKwhB,SAAWzhB,EAAQQ,aAAaP,KAAKwhB,SAAWzhB,EAAQ0hB,KAAKxhB,GAAG,GACtGyhB,EACJ3hB,EAAQQ,aAAaP,KAAKQ,aAAa1L,OAAS,GAAOiL,EAAQQ,aAAaP,KAAKQ,aAAa,GAAGX,SAC7FE,EAAQQ,aAAaP,KAAKQ,aAAa,GAAGX,SAC1CE,EAAQ0hB,KAAKxhB,GAAG,GAChB0hB,EAAQpE,GACZjnB,KAAKC,MAAMknB,GAAW1d,EAAQ0hB,KAAKG,QAAQ,GAAIliB,EAAMwd,iBAAkBxd,EAAMihB,qBAC7EjhB,EAAMwd,iBACNxd,EAAMihB,oBAEFkB,EAASP,EAAevc,IAAI,GAAG,GAC/B4J,EAAW2S,EAAevc,IAAI,GAAG,GAEnC4T,EAGE,GACFmJ,EAAY,CAAEzgB,EAAGigB,EAAed,KAAK,GAAIlD,KAAMvd,EAAQ0hB,KAAKG,QAAQ,IACxE7D,EAAU8D,GAAQpiB,MAAMkP,GAAUrO,OAAO6C,SAAQ,SAAC5F,EAAOqR,GACvD,IAAMmT,EAAajE,GAAiB/d,EAAQ0hB,KAAKG,QAAQ,GAAIrkB,EAAMM,KAAK8jB,GAAQ5D,EAAW8D,EAAQlT,GAC7FoT,GAAcA,EAAWjtB,OAAS,GAAG6jB,EAASvb,KAAT,2BAAmB2kB,EAAW,IAA9B,IAAkC1gB,EAAGJ,WAAW8gB,EAAW,GAAG1gB,SAEvGsX,EAAS7jB,OAAS,IACpBgtB,EAAY,CAAEzgB,EAAGsX,EAAS,GAAGtX,EAAGic,KAAM3E,EAAS,GAAG2E,OAGpD,IAAM0E,EACJzE,GAAW+D,EAAed,KAAK,GAAI9gB,EAAMwd,iBAAkBxd,EAAMihB,oBAAsBY,EAAUI,EAC7FM,EACJvE,GACE4D,EAAed,KAAK,GACpBzC,EAAU8D,GAAQhxB,OAClBktB,EAAU8D,GAAQpiB,MAAMkP,GAAUhQ,SAClCof,EAAU8D,GAAQpiB,MAAMkP,GAAUwI,YAClC4G,EAAU8D,GAAQpiB,MAAMkP,GAAU0I,aAEpCqK,EACAI,EAAUxE,KACN4E,EAAOzE,GAAWuE,EAAStiB,EAAMwd,iBAAkBxd,EAAMihB,oBACzDwB,EAAOtE,GACXoE,EACAlE,EAAU8D,GAAQhxB,OAClBktB,EAAU8D,GAAQpiB,MAAMkP,GAAUhQ,SAClCof,EAAU8D,GAAQpiB,MAAMkP,GAAUwI,YAClC4G,EAAU8D,GAAQpiB,MAAMkP,GAAU0I,aAEpC1b,QAAQC,IAAI2lB,EAASG,EAASM,EAASC,EAASC,EAAMC,GACtDxmB,QAAQC,IACN,OACA2hB,GACEjnB,KAAKC,MAAMknB,GAAW1d,EAAQ0hB,KAAKG,QAAQ,GAAIliB,EAAMwd,iBAAkBxd,EAAMihB,qBAC7EjhB,EAAMwd,iBACNxd,EAAMihB,oBAERlD,GAAW1d,EAAQ0hB,KAAKG,QAAQ,GAAI,EAAG,GACvC7hB,EAAQ0hB,KAAKG,QAAQ,IA1DS,kBA4DyBN,EAAevc,IAAI,GA5D5C,GA4DzBqd,EA5DyB,KA4DZC,EA5DY,KA4DGtG,EA5DH,KA4DYiF,EA5DZ,KAuFhC,MA1BkD,uBAC7CjD,EAAUzD,MAAM,EAAG8H,IAD0B,4BAG3CrE,EAAUqE,IAHiC,IAI9C3iB,MAAM,GAAD,oBACAse,EAAUqE,GAAa3iB,MAAM6a,MAAM,EAAG+H,IADtC,4BAGEtE,EAAUqE,GAAa3iB,MAAM4iB,IAH/B,IAIDnL,MAAM,GAAD,oBACA6G,EAAUqE,GAAa3iB,MAAM4iB,GAAenL,MAAMoD,MAAM,EAAGyB,IAD3D,4BAGEgC,EAAUqE,GAAa3iB,MAAM4iB,GAAenL,MAAM6E,IAHpD,IAID9b,GAAG,GAAD,oBACG8d,EAAUqE,GAAa3iB,MAAM4iB,GAAenL,MAAM6E,GAAS9b,GAAGqa,MAAM,EAAG0G,IAD1E,CAEA,CAACkB,EAAMC,IAFP,aAGGpE,EAAUqE,GAAa3iB,MAAM4iB,GAAenL,MAAM6E,GAAS9b,GAAGqa,MAAM0G,EAAY,QAPpF,aAUAjD,EAAUqE,GAAa3iB,MAAM4iB,GAAenL,MAAMoD,MAAMyB,EAAU,QAdtE,aAiBAgC,EAAUqE,GAAa3iB,MAAM6a,MAAM+H,EAAgB,QArBV,aAwB7CtE,EAAUzD,MAAM8H,EAAc,MAOxBE,GAAiB,SAC5BhB,EACAvD,EACA0D,GAEA,GAA4B,mBAAxBH,EAAermB,MAAgD,OAAnBqmB,EAAyB,OAAOvD,EAEhF,IAAMtd,EAAc6gB,EAAevc,IAC7Bwd,EAAYjsB,KAAKyjB,IACrBzjB,KAAKif,IAAI+L,EAAeF,WAAaK,EAAKxhB,GAAG,GAAKwhB,EAAKG,QAAQ,GAAI7D,EAAUtd,GAAanR,IAAM,IAChGyuB,EAAUtd,EAAc,GAAG5P,OAAS,IAGtC,MAAM,GAAN,oBACKktB,EAAUzD,MAAM,EAAG7Z,IADxB,4BAEOsd,EAAUtd,IAFjB,IAE+B5P,OAAQ0xB,IAFvC,2BAGOxE,EAAUtd,EAAc,IAH/B,IAGmCnR,IAAKizB,KAHxC,aAIKxE,EAAUzD,MAAM7Z,EAAc,MAMxB+hB,GAAgB,SAE3BC,EAEA7H,EACA7a,GAEA,IAOM2iB,EAA8B,CALlB3iB,EAAQQ,aAAaP,KAAKwhB,SAAWzhB,EAAQQ,aAAaP,KAAKwhB,SAAWzhB,EAAQ0hB,KAAKxhB,GAAG,GAE1GF,EAAQQ,aAAaP,KAAKQ,aAAa1L,OAAS,GAAOiL,EAAQQ,aAAaP,KAAKQ,aAAa,GAAGX,SAC7FE,EAAQQ,aAAaP,KAAKQ,aAAa,GAAGX,SAC1CE,EAAQ0hB,KAAKxhB,GAAG,IAEtB,OAAKwiB,GAAiB7H,GAAS8H,EAExB,2BAAK9H,GAAZ,IAAkBE,MAAM,GAAD,oBAAMF,EAAKE,OAAX,CAAkB4H,MAVQ,CAAE7H,WAAW,EAAOC,MAAO,KC9O1E6H,GAASC,EAAQ,KAERC,GAA+B,CAC1CnjB,MAAO,CACLC,YAAa,GACbC,oBAAqB,GACrBkjB,YAAa,EACb5F,iBAAkB,EAClByD,mBAAoB,GACpB7d,OAAQ,EACRD,KAAM,EACNc,UAAW,EACXU,QAAS,EACT0e,kBAAmB,EACnBC,gBAAiB,EACjBC,oBAAqB,EACrBC,aAAc,KACd5f,aAAc,GACd6f,WAAY,GACZ9tB,MAAO,CACL+lB,UAAW,OACXhM,YAAa,OACb5M,UAAW,OACXtS,SAAU,GACVoS,SAAU,UAGd4Y,KAAM,CAAEM,UAAU,EAAME,UAAU,EAAMrmB,MAAO,CAAE+Z,YAAa,uBAAwBgU,YAAa,KACnG3jB,MAAO,CACLD,WAAY,GACZmD,mBAAoB,GACpBtN,MAAO,CACL+lB,UAAW,OACXhM,YAAa,OACb5M,UAAW,OACXtS,SAAU,GACVoS,SAAU,UAGd0Y,gBAAiB,OACjBY,YAAY,EACZzb,UAAW,GACXya,KAAM,CACJC,WAAW,EACXC,MAAO,IAETxb,cAAe,CAAEhQ,IAAK,EAAGD,KAAM,EAAGlB,MAAO,IAAKF,OAAQ,IAAKuyB,MAAM,GACjEzgB,QAAS,CACPsjB,YAAY,EACZrjB,KAAM,CAAEsjB,UAAU,EAAOrjB,GAAI,CAAC,EAAG,IACjCsjB,MAAO,CAAEC,YAAY,EAAOC,MAAO,CAAC,EAAG,IACvCC,cAAe,CACbC,iBAAiB,EACjB1jB,GAAI,CAAC,EAAG,GACR2Y,OAAO,EACPC,MAAM,EACN+I,QAAS,CAAC,EAAG,GACbgC,gBAAiB,CAAC,EAAG,IAEvBnC,KAAM,CACJoC,YAAY,EACZ5jB,GAAI,CAAC,EAAG,GACR2Y,OAAO,EACPC,MAAM,EACN+I,QAAS,CAAC,EAAG,GACbgC,gBAAiB,CAAC,EAAG,GACrBH,MAAO,CAAC,EAAG,IAEbljB,aAAc,CACZP,KAAM,CACJoB,EAAG,EACH+b,KAAM,EACNG,KAAM,EACN9c,aAAc,GACdC,YAAa,EACbqjB,YAAa,GACbtC,SAAU,EACV5e,WAAY,GAEdmhB,MAAO,CAAEC,mBAAoB,SAKtBC,GAAgB,SAC3BC,EACAC,GAO0F,IAAD,IACnFC,EAAqBD,EAASC,iBAAmBD,EAASC,iBAAmB,GAC7EC,EAAqBF,EAASE,iBAAmBF,EAASE,iBAAmB,GAC7EC,GACkB,WAAtBH,EAASI,UAA2BJ,EAASl2B,QAAWk2B,EAASh2B,QAE3Dg2B,EAASI,SACXJ,EAASI,SAFT,aALmF,EAU1D/vB,IAAMgwB,WAEnC9K,GAAmBmJ,IAZoE,mBAUlFnG,EAVkF,KAUtEC,EAVsE,KAcnF8H,EAAcjwB,IAAMC,OAA6B,CACrD6K,cAAeujB,GAAavjB,cAC5BS,QAAS8iB,GAAa9iB,QACtBL,MAAO,CACLojB,YAAa,EACb5F,iBAAkB,EAClByD,mBAAoB,GACpB7d,OAAQ,EACRD,KAAM,EACNc,UAAW,EACXU,QAAS,EACT0e,kBAAmB,EACnBC,gBAAiB,EACjBC,oBAAqB,EACrBC,aAAc,KACd5f,aAAc,GACd6f,WAAY,IAEduB,IAAK,CAAEC,sBAAuB,KAAMC,qBAAsB,EAAGtD,eAAgB,MAC7EuD,WAAY,IAAIhrB,KAChBirB,YAAa,GACbC,yBAA0B,OAGtBxlB,EAAkBmd,EAAWpd,cAAcrR,OAAS,EAG1D+2B,aACE,CACEC,OAAQ,SAACC,GAA4C,IAAD,QAC5CC,GACH,UAACV,EAAY7vB,QAAQmL,QAAQ0hB,YAA7B,aAAC,EAAkCgC,QAAWgB,EAAY7vB,QAAQkwB,YAAY5f,SAAS,SACpF,UAAAuf,EAAY7vB,QAAQmL,QAAQ0hB,YAA5B,eAAkCgC,MAAM,IAAKyB,EAAUzB,MAAM,GAC7DyB,EAAUzB,MAAM,GAChB2B,GACH,UAACX,EAAY7vB,QAAQmL,QAAQ0hB,YAA7B,aAAC,EAAkCgC,QAAWgB,EAAY7vB,QAAQkwB,YAAY5f,SAAS,SACpF,UAAAuf,EAAY7vB,QAAQmL,QAAQ0hB,YAA5B,eAAkCgC,MAAM,IAAKyB,EAAUzB,MAAM,GAC7DyB,EAAUzB,MAAM,GAEdxjB,EAA4EilB,EAA5EjlB,GAAI2hB,EAAwEsD,EAAxEtD,QAAmBgC,EAAqDsB,EAA/DG,SAA2BzM,EAAoCsM,EAApCtM,MAAOC,EAA6BqM,EAA7BrM,KAAcgL,EAAeqB,EAAvBI,OAC7Db,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEmL,QAAQ,2BACH0kB,EAAY7vB,QAAQmL,SADlB,IAEL0hB,KAAM,CAAEoC,aAAY5jB,KAAI2hB,UAASgC,kBAAiB/K,OAAMD,QAAO6K,MAAO,CAAC0B,EAAQC,MAEjFN,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,SAClDD,WAAYJ,EAAY7vB,QAAQiwB,cAGpCU,OAAQ,SAACC,GACPf,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEmL,QAAQ,2BACH0kB,EAAY7vB,QAAQmL,SADlB,IAELC,KAAM,CAAEsjB,SAAUkC,EAAUF,OAAQrlB,GAAIulB,EAAUvlB,MAEpD6kB,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,mBAGtDW,QAAS,SAACC,GACRjB,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEmL,QAAQ,2BACH0kB,EAAY7vB,QAAQmL,SADlB,IAELsjB,WAAYqC,EAAWJ,SAEzBR,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,mBAGtDa,QAAS,SAACC,GAA8C,IAAD,QAC/CT,GACH,UAACV,EAAY7vB,QAAQmL,QAAQwjB,aAA7B,aAAC,EAAmCE,QAAWgB,EAAY7vB,QAAQkwB,YAAY5f,SAAS,UACrF,UAAAuf,EAAY7vB,QAAQmL,QAAQwjB,aAA5B,eAAmCE,MAAM,IAAKmC,EAAWnC,MAAM,GAC/DmC,EAAWnC,MAAM,GACjB2B,GACH,UAACX,EAAY7vB,QAAQmL,QAAQwjB,aAA7B,aAAC,EAAmCE,QAAWgB,EAAY7vB,QAAQkwB,YAAY5f,SAAS,UACrF,UAAAuf,EAAY7vB,QAAQmL,QAAQwjB,aAA5B,eAAmCE,MAAM,IAAKmC,EAAWnC,MAAM,GAC/DmC,EAAWnC,MAAM,GACvBgB,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEmL,QAAQ,2BACH0kB,EAAY7vB,QAAQmL,SADlB,IAELwjB,MAAO,CAAEE,MAAO,CAAC0B,EAAQC,GAAS5B,WAAYoC,EAAWN,UAE3DR,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,aAGtDe,UAAW,SAACX,GAA+C,IACjDjlB,EAAwDilB,EAAxDjlB,GAAI2hB,EAAoDsD,EAApDtD,QAAShJ,EAA2CsM,EAA3CtM,MAAOC,EAAoCqM,EAApCrM,KAAgB+K,EAAoBsB,EAA9BG,SAClCZ,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEmL,QAAQ,2BACH0kB,EAAY7vB,QAAQmL,SADlB,IAEL2jB,cAAe,CAAEC,iBAAiB,EAAM1jB,KAAI2hB,UAASgC,kBAAiB/K,OAAMD,WAE9EkM,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,gBAIxD,CACEgB,UAAW5B,EACX31B,UAAW,mCAAE6S,EAAF,KAAKC,EAAL,WAAY,CAACD,EAAIsb,EAAWpd,cAAchQ,IAAK+R,EAAIqb,EAAWpd,cAAcjQ,OAEvFoyB,KAAM,CAAEsE,UAAU,EAAMC,mCAAmC,GAC3DhmB,KAAM,KAKVxL,IAAMG,WAAU,WAEd,GADAgH,QAAQC,IAAI,OACPsoB,GAAmBA,EAAetvB,QAAvC,CAEA,GADA+G,QAAQC,IAAI,YACR8gB,EAAWd,YAAmC,eAArB0I,EAAmC,CAC9D3oB,QAAQC,IAAI,eACZsoB,EAAetvB,QAAQS,MAAMzH,SAAW,QACxCs2B,EAAetvB,QAAQS,MAAMlH,MAAQ,OACrC+1B,EAAetvB,QAAQS,MAAMpH,OAAS,OACtCi2B,EAAetvB,QAAQS,MAAM/F,IAAM,MAL2B,MAMT40B,EAAetvB,QAA/CzG,EANyC,EAMtD83B,YAAkCh4B,EANoB,EAMlCi4B,aAC5BzB,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEkwB,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,oBAClDxlB,cAAe,CAAEhQ,IAAK,EAAGD,KAAM,EAAGlB,QAAOF,SAAQuyB,MAAM,SAGpD,CAAC,IAAD,EACiB0D,EAAetvB,QAAQuxB,wBAArC72B,EADH,EACGA,IAAKD,EADR,EACQA,KADR,EAEgD60B,EAAetvB,QAA/CzG,EAFhB,EAEG83B,YAAkCh4B,EAFrC,EAEuBi4B,aAC5BhC,EAAetvB,QAAQS,MAAMzH,SAAW,WACxCs2B,EAAetvB,QAAQS,MAAMlH,MACzBg2B,EAASh2B,OAA8B,WAArBm2B,EAAgCH,EAASh2B,MAAQ,KAAO,OAC9E+1B,EAAetvB,QAAQS,MAAMpH,OACzBk2B,EAASl2B,QAA+B,WAArBq2B,EAAgCH,EAASl2B,OAAS,KAAO,OAChFi2B,EAAetvB,QAAQS,MAAM/F,IAAM,MACnCm1B,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEkwB,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,oBAClDxlB,cAAe,CAAEhQ,MAAKD,OAAMlB,QAAOF,SAAQuyB,MAAM,KAIrD,IAAM2D,EAASl2B,SAAYk2B,EAASh2B,OAA8B,WAArBm2B,EAA7C,CACA,IAAM8B,EAAqB,SAAC/pB,GAC1B,GAAK6nB,GAAmBA,EAAetvB,QACvC,GAAI8nB,EAAWd,YAAmC,eAArB0I,EAAmC,CAAC,IAAD,EACTJ,EAAetvB,QAA/CzG,EADyC,EACtD83B,YAAkCh4B,EADoB,EAClCi4B,aAC5BzB,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEkwB,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,oBAClDxlB,cAAe,CAAEhQ,IAAK,EAAGD,KAAM,EAAGlB,QAAOF,SAAQuyB,MAAM,SAGpD,CAAC,IAAD,EACiB0D,EAAetvB,QAAQuxB,wBAArC72B,EADH,EACGA,IAAKD,EADR,EACQA,KADR,EAEgD60B,EAAetvB,QAA/CzG,EAFhB,EAEG83B,YAAkCh4B,EAFrC,EAEuBi4B,aAK5BzB,EAAY7vB,QAAZ,2BACK6vB,EAAY7vB,SADjB,IAEEkwB,YAAY,GAAD,oBAAML,EAAY7vB,QAAQkwB,aAA1B,CAAuC,oBAClDxlB,cAAe,CAAEhQ,MAAKD,OAAMlB,QAAOF,SAAQuyB,MAAM,OAYvD,OARA7kB,QAAQC,IAAI,+BACNsoB,EAAetvB,QAAQyxB,eAC3BnC,EAAetvB,QAAQyxB,cAAcC,iBAAiB,UAAU,eAGlEC,OAAOD,iBAAiB,SAAUF,GAClCG,OAAOD,iBAAiB,oBAAqBF,GAEtC,WACLG,OAAOC,oBAAoB,SAAUJ,GACrCG,OAAOC,oBAAoB,oBAAqBJ,QAEjD,CACDlC,EACAC,EAASh2B,MACTg2B,EAASl2B,OACTyuB,EAAWd,WACX0I,EALC,OAMDJ,QANC,IAMDA,GANC,UAMDA,EAAgBtvB,eANf,aAMD,EAAyBqxB,YANxB,OAOD/B,QAPC,IAODA,GAPC,UAODA,EAAgBtvB,eAPf,aAOD,EAAyBsxB,eAG3B,IAAMO,EAA0D/J,EAAWvc,UAAU7K,KAAI,SAAC8K,GAAD,MAAe,CAGtGX,MAAOW,EAASX,MAAMnK,KAAI,SAACsrB,GAAD,MAAkB,CAC1CjiB,SAAUiiB,EAAYjiB,SACtB2B,OAAQsgB,EAAYtgB,OAAOhL,KAAI,SAACiI,GAC9B,IAAMmpB,EAAmBppB,GAAiBC,GAAjB,eAA+BA,EAAMwD,WAAc,GAE5E,OAAO,aAELpC,SAAUpB,EAAMoB,SAChBzM,KAAMqL,EAAMrL,KACZmD,MAAOkI,EAAMlI,MACb4F,KAAMsC,EAAMtC,MACTyrB,MAGPxP,MAAO0J,EAAY1J,MAAM5hB,KAAI,SAACwrB,GAAD,MAAW,CAAE7lB,KAAM6lB,EAAK7lB,KAAM+J,OAAQ8b,EAAK9b,OAAQ3P,MAAOyrB,EAAKzrB,kBAQ1F0vB,EAA2B,CAC/BrlB,MAN0B,CAC1BC,YAAa+c,EAAWhd,MAAMC,YAC9BC,oBAAqB8c,EAAWhd,MAAME,oBACtCvK,MAAOqnB,EAAWhd,MAAMrK,OAIxB0oB,UAAW0I,GAuTb,OApTK9D,GAAO8B,EAAY7vB,QAAQmwB,yBAA0BA,KACxDN,EAAY7vB,QAAQmwB,yBAA2BA,GAGjDvwB,IAAMG,WAAU,WACd,IAAMgyB,EAAU,WACd,IAAMC,EAAWnC,EAAY7vB,QACvBiyB,EAAeD,EAAS7mB,QAAQ2jB,cAChCoD,EAAYF,EAAS7mB,QAAQ0hB,KACnC,GAAImF,EAAS9B,YAAYhwB,OAAS,EAAG,CAAC,IAAD,EAO/BiyB,EAEAzF,EARE0F,EAAatK,EAAWjd,MAAMD,WAC9BynB,EAAaL,EAAStnB,cAAcnR,MAAQ,EAC5C+4B,EAAcN,EAAStnB,cAAcrR,OAAS,EAC9Ck5B,EAAczK,EAAWhd,MAAMC,YACjCynB,EAAgB1K,EAAWvc,UAC3BknB,EAAkCT,EAASlnB,MAE3C4nB,EAAW5K,EAAW9B,KAG1B,GADKgM,EAAS9B,YAAY5f,SAAS,aAAY0hB,EAAS7mB,QAAQ2jB,cAAcC,iBAAkB,GAC5F9e,GAAY+hB,EAAS9B,YAAa,oBAAsBpI,EAAWvc,UAAUrL,OAAS,EAAG,CAC3F,IAAMqlB,EACJyM,EAAStnB,cAAcrR,OACvB,EACAyuB,EAAWhd,MAAMC,YACjB+c,EAAWvc,UAAUuc,EAAWvc,UAAUrL,OAAS,GAAGjE,OAElD02B,EAAoBjxB,KAAKiN,MAAM4W,EAAUuC,EAAWvc,UAAUrL,QAC9D0yB,EAAiB9K,EAAWvc,UAAU,GAAGtP,OAAS6rB,EAAWvc,UAAU,GAAG7Q,IAAMi4B,EAEhFE,EAAcF,GADEC,EAHA,QAGiDA,EAAiB,GAElFE,EACJhL,EAAWvc,UAAUrL,OAAS,EAC1BwB,KAAKiN,OAAO4W,EAAUsN,IAAgB/K,EAAWvc,UAAUrL,OAAS,IACpE,EACA6yB,EACJjL,EAAWvc,UAAUrL,OAAS,GAAKqlB,EAAUsN,IAAgB/K,EAAWvc,UAAUrL,OAAS,GAAK,EAC9F8yB,EAAcD,EACdE,EAAqB,EACrBC,EAAc,EAClBV,EAAgBA,EAAc9xB,KAAI,SAAC8K,EAAUK,GAC3C,GAAoB,IAAhBA,EAEF,OADAonB,EAAaznB,EAASvP,OAAS,EAAI42B,EAC5B,2BAAKrnB,GAAZ,IAAsBvP,OAAQuP,EAASvP,OAAS,EAAI42B,IAEpD,IAAMM,EACJzxB,KAAK0xB,KAAKJ,GAAe,GAAKA,EAAc,GAAqB,IAAhBA,GAC5C,EACDtxB,KAAK0xB,KAAKJ,GAAe,GAAKA,EAAc,GAAqB,IAAhBA,EACjD,EACA,EACNA,GAAeG,EACfD,GAAeC,EACf,IAAME,EAASJ,EAIf,OAFAA,EAAaznB,EAASvP,OAAS4P,EAAcinB,EAAwBD,EAAcnxB,KAAKgc,IAAIwV,GAErF,2BACF1nB,GADL,IAEE9Q,IAAK24B,EACLp3B,OAAQuP,EAASvP,OAAS4P,EAAcinB,EAAwBD,EAAcnxB,KAAKgc,IAAIwV,QAK7FnsB,QAAQC,IAAIue,EAASsN,EAAaC,EAAuBC,EAAMf,EAAStnB,cAAcrR,QACtFw2B,EAAY7vB,QAAQmwB,yBAA2B,KAEjD,GACElgB,GAAY+hB,EAAS9B,YAAa,OAAQ,QAAS,kBAAmB,SACpE8B,EAASlC,IAAIpD,eACf,CAGA,IAAM4G,EAAQ,OAAGpB,QAAH,IAAGA,OAAH,EAAGA,EAAWlF,QAkB5B,GAhBAN,EAAiBnB,GACf+H,EACAd,EACAC,IACET,EAASlC,IAAIpD,eACf5E,EAAW9B,KAAKC,UAChBoM,EAAaD,EACbE,EAAcC,IAGbP,EAASlC,IAAIpD,gBACZA,GACF,CAAC,kBAAkBpc,SAASoc,EAAermB,QAE3C2rB,EAASlC,IAAIpD,eAAiBA,GAE1BsF,EAASlC,IAAIpD,eAAgB,CACQ,IAAD,EAMD,EACsC,EAP7E,GAAMsF,EAAS7mB,QAAQ0hB,KAAKoC,WACgB,oBAAtC,UAAA+C,EAASlC,IAAIpD,sBAAb,eAA6BrmB,QAC/BmsB,EAAgB9E,GAAesE,EAASlC,IAAIpD,eAAgB8F,EAAeR,EAAS7mB,QAAQ0hB,OAIhG,IAAKmF,EAAS7mB,QAAQ0hB,KAAKoC,WACzB,IAAK,CAAC,WAAY,YAAY3e,SAAzB,UAAkC0hB,EAASlC,IAAIpD,sBAA/C,aAAkC,EAA6BrmB,MACxB,oBAAtC,UAAA2rB,EAASlC,IAAIpD,sBAAb,eAA6BrmB,QAG/BmsB,EAAgB9E,GAAesE,EAASlC,IAAIpD,eAAgB8F,EAAeR,EAAS7mB,QAAQ0hB,MAE5FmF,EAAS7B,yBAA2B,KACpC6B,EAASlC,IAAIpD,eAAiB,MAOtC,GACKA,GAAkB,CAAC,QAAS,aAAapc,SAASoc,EAAermB,OACpE4J,GAAY+hB,EAAS9B,YAAa,kBAAmB,QACrD,CAAC,IAAD,oBACwD8B,EAASlC,IAAzDE,EADR,EACQA,qBAAsBD,EAD9B,EAC8BA,sBAC1BwD,GAAa,UAACf,SAAD,iBAAC,EAAgB,UAAjB,iBAAC,EAAoB3nB,aAArB,iBAAC,EAA4B,UAA7B,iBAAC,EAAgCa,cAAjC,aAAC,EAAyC,IAA3C,UACZ8mB,SADY,aACZ,EAAgB,GAAG3nB,MAAM,GAAGa,OAAO,GACnC,KACE6nB,IAAgB3qB,GAAa2qB,KAAYA,EAAY,OAE3DvB,EAASlnB,MH5cmB,SACtC0oB,EACAnD,EACA1B,EACAgC,EACA8C,EACAC,EACAC,EACAC,EACAlI,EACAmI,GAEA,IAAMjF,KAAc,OAACD,QAAD,IAACA,OAAD,EAACA,EAAOC,YACtBkF,EAAO,OAAGnF,QAAH,IAAGA,OAAH,EAAGA,EAAOE,MAAM,GACvBkF,EAAiB,OAAGpD,QAAH,IAAGA,OAAH,EAAGA,EAAQtlB,GAE5B2oB,EAAU,SAACzL,GAQf,MADM,GALJ7mB,KAAKC,MACHD,KAAKyjB,IACFzjB,KAAKif,IAAI4H,EAAO,IAAK,IAAMkL,EAAiB,IAAQ,KAAOA,EAAiB,IAC3D/H,EAAc,EAA/B+H,GACC,KAMV,GADA1sB,QAAQC,IAAIwsB,EAAavlB,KAAOulB,EAAatlB,OAAQslB,EAAatlB,OAAQslB,EAAavlB,MACjFylB,EAAiB,CACrB,IAAM9H,EAAI,OAAGyE,QAAH,IAAGA,OAAH,EAAGA,EAAQrD,QACrB,IAAKpB,EAAM,OAAO4H,EAClB,GAAIG,IAAiBG,EAAS,CAC5B,IAAMxL,GAAoB,OAAC+H,QAAD,IAACA,OAAD,EAACA,EAAQxB,OAC/BntB,KAAKif,IACHjf,KAAKyjB,IACHkL,EAAOxB,MAAM,GAAK2E,EAAalL,iBAC/BoD,EAAc,EAAI8H,EAAazH,sBAE7B8H,EAAY,GAAKL,EAAazH,oBAEpCyH,EAAalL,iBACjB,OAAO,2BAAKkL,GAAZ,IAA0BlL,qBACrB,GAAIsL,IAAiBE,EAAS,CACnC,IAAI/D,EAAwCyD,EAAazD,sBAErDyD,EAAazD,sBADbyD,EAAazH,mBAEXiE,EAAwBwD,EAAaxD,qBAEvCwD,EAAaxD,qBADbwD,EAAalL,iBAGb4F,GAAe,OAACmC,QAAD,IAACA,OAAD,EAACA,EAAQxB,OAAQ2E,EAAatF,aAAb,OAA2BmC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAQxB,MAAM,IAAK2E,EAAatF,YAC/FA,EAAcxsB,KAAKyjB,IACjBzjB,KAAKif,IAAIuN,GAAc,KACuC,KAA1CxC,EAAc,EAA/B+H,EAAmCA,EAAiB,KAAeA,EAAiB,IAAO,KAEhG,IAAM1H,EAAqB0H,EAAiBO,EAAQ9F,GAC9C+F,EAAqBjE,EACrBkE,EAAWtI,EAAK,GAIhBtD,EAAmB0H,IAHLpE,EAAK,GAAKqI,GAAuBlE,EACzBhE,EAAqBkI,GAEQC,EAIzD,OAHI,OAAC7D,QAAD,IAACA,OAAD,EAACA,EAAQpB,cACXc,EAAwB,MAEnB,2BACFyD,GADL,IAEEzD,wBACAC,uBACA9B,cACAnC,qBACAzD,2BAGC,GAAMsG,GAAgBkF,EAAS,CACpC,IAAI/D,EAAuCyD,EAAazH,mBAClDiE,EAAuBwD,EAAalL,iBAGtC4F,EAAcsF,EAAatF,YAAc4F,EAAU,GACvD5F,EAAcxsB,KAAKyjB,IACjBzjB,KAAKif,IAAIuN,GAAc,KACuC,KAA1CxC,EAAc,EAA/B+H,EAAmCA,EAAiB,KAAeA,EAAiB,IAAO,KAEhG,IAAM1H,EAAqB0H,EAAiBO,EAAQ9F,GAC9C+F,EAAqBjE,EACrBkE,EAAaH,EAAoBA,EAAkB,GAAK,EACxDI,IACAJ,EAAoBA,EAAkB,GAAK,GAAKE,GAAuBlE,EAGvEzH,EAAoB0H,GAFXtuB,KAAKC,MAAMwyB,GAAcpI,EAAqByH,EAAalL,kBAEL4L,EAIrE,OAHKtF,IACHmB,EAAwB,MAEnB,2BACFyD,GADL,IAEEzD,wBACAC,uBACA9B,cACAnC,qBACAzD,qBAGJ,OAAOkL,EGoWoBY,CAAyB,2BACnCpC,EAASlnB,OADyB,IAClBklB,uBAAsBD,0BAC3CiC,EAAS7mB,QAAQ0hB,KACjBmF,EAAS7mB,QAAQwjB,MACjBqD,EAAS7mB,QAAQC,KACjBqkB,EACAuC,EAAS9B,YAAY5f,SAAS,QACL,eAAX,QAAd,EAAAoc,SAAA,eAAgBrmB,MACS,WAAX,QAAd,EAAAqmB,SAAA,eAAgBrmB,MAChBgsB,GACS,QAAT,EAAAkB,SAAA,eAAWtqB,KAAK/I,SAAS,GAK3BuyB,EAAS,uCACJA,GACAT,EAASlnB,OHlXW,SACnC4D,EACA2lB,EACA5pB,EACAG,EACA2oB,GAYA,IAAMhF,EAAkD,GAElDrgB,EAASxM,KAAKif,IAAIjf,KAAKwpB,MAAMmJ,EAAiB3lB,GAAe,GAC7D4lB,EAAS,OAAGf,QAAH,IAAGA,OAAH,EAAGA,EAAWtqB,KAAK/I,OAC5B6O,EAAYrN,KAAKif,IAAIjf,KAAKwpB,MAAMmJ,EAAiB3lB,GAAe,GAAKA,EAAe2lB,EACtFxK,EAAU,EACZ5b,EAAO,EACHkgB,EAAoBzsB,KAAKgc,IAAIhc,KAAKyjB,IAAIzjB,KAAKwpB,MAAMmJ,EAAiB3lB,GAAe,IACnF0f,EAAkB,EAClBC,EAAsB,EACtBC,EAAe,KACnB,GAAM7jB,GAAoBG,GAAgB0pB,IAOxCzK,EAAUnoB,KAAKyjB,IAAI1a,EAAgB6pB,EAAY5lB,EAAe2lB,GAC9DpmB,EAAOvM,KAAKyjB,IAAIzjB,KAAKiN,OAAOkb,EAAUwK,GAAkB3lB,GAAe4lB,EAAY,GAGnFjG,GAAuBF,GAFvBC,EAAkB1sB,KAAKif,IAAIjf,KAAKiN,OAAOlE,EAAiB4pB,GAAkB3lB,GAAgB4lB,EAAW,MAEtCrmB,EAAOC,EAASigB,EAAoBC,GAC7FmF,IACJjF,EAAejS,GACbkX,EAAUtqB,KACViF,EACAD,EACAslB,EAAU7P,KACV2K,EACAvR,OAAOC,OAAO,GAAIwW,EAAU/W,aAGN+W,EAAU7P,KAAKjH,aAGrC,IAFA,IAAI8X,EAAQxlB,EACRylB,EAAKtmB,EACFqmB,EAAQ1K,GAAS,CACtB,IAAM4K,EAAejW,GAAY+U,EAAUtqB,KAAKurB,GAAIrrB,KAAMoqB,EAAU/W,SAAU+W,EAAU7P,KAAKjH,YAA7D,eAC1B6R,IAEN,GAAKmG,EAAL,CAKA,IAAMtmB,EAAa0M,GAAc0Y,EAAUtqB,KAAKurB,GAAIrrB,KAAMsrB,GAC1DlG,EAAW/lB,KAAK,CAAEgE,EAAG+nB,EAAOpmB,WAAYA,EAAW5B,aACnDgoB,GAAS7lB,EACT8lB,SAPED,GAAS7lB,EACT8lB,IAYV,MAAO,CACLtmB,OAAQA,EACRa,UAAWA,EACXd,KAAMA,EACNwB,QAASoa,EACTnb,eACAyf,oBACAC,kBACAC,sBACAE,aACAD,gBGkSaoG,CACD1C,EAASlnB,MAAMihB,mBACfiG,EAASlnB,MAAMwd,iBACf0J,EAAStnB,cAAcnR,MACvBuuB,EAAWjd,MAAMD,WACjB2oB,IAIN,GACK7G,GAAkB,CAAC,QAAS,YAAa,kBAAkBpc,SAASoc,EAAermB,OACpF2rB,EAASlC,IAAIpD,gBACfzc,GAAY+hB,EAAS9B,YAAa,kBAAmB,QACrD,CAEA,IAAMyE,EAAsBhL,GAC1B6I,EACAR,EAASlnB,MAAMihB,mBACf0G,EAAUvkB,OACVukB,EAAUxkB,KACVwkB,EAAU1jB,UACV0jB,EAAUhjB,SAENklB,IAAqBnC,EAAgBmC,IAG/C,GAAI3C,EAAS9B,YAAY5f,SAAS,eAAgB,CAAC,IAAD,UAC1CskB,ED7MiB,SAC/BlmB,EACA2lB,EACAvpB,EACAyoB,EACA5C,GAIA,IAAK4C,IAAc5C,EAAQ,OAFH,KAGxB,IAAMkE,EAAOnzB,KAAKC,MAAMknB,GAAU,OAAC8H,QAAD,IAACA,OAAD,EAACA,EAAQtlB,GAAG,GAAWgpB,EAAgB3lB,IACzE,GAAImmB,EAAO,GAAKA,EAAOtB,EAAUtqB,KAAK/I,OAAS,EAAG,MAAO,CAAE40B,kBAAmBD,GAC9E,IAAME,EAAWrzB,KAAKgc,IAAIhc,KAAKC,MAAMkzB,IAE/BvG,EAAejS,GACnBkX,EAAUtqB,KACV6B,EAAMoD,OACNpD,EAAMmD,KACNslB,EAAU7P,KACV5Y,EAAMujB,oBACNvR,OAAOC,OAAO,GAAIwW,EAAU/W,WAG9B,IAAK8R,IAAiBiF,EAAU7P,KAAKjH,YAAa,OAhB1B,KAkBxB,IAAMgY,EAAejW,GAAY+U,EAAUtqB,KAAK8rB,GAAU5rB,KAAMoqB,EAAU/W,SAAU+W,EAAU7P,KAAKjH,YAAnE,eAC1B6R,IAON,MAAO,CAAEyG,WAAUC,gBALDna,GAChB0Y,EAAUtqB,KAAK8rB,GAAU5rB,KACvBsrB,GAA8BlB,EAAU7P,KAAKjH,YAAYE,iBAGzBsY,YADhBtM,GAAWoM,EAAUV,EAAgB3lB,GACRomB,kBAAmBD,GC4KxCK,CAClBzC,EAAU1G,mBACV0G,EAAUnK,iBACVmK,EAHmC,UAInCD,SAJmC,iBAInC,EAAgB,UAJmB,iBAInC,EAAoB3nB,aAJe,iBAInC,EAA4B,UAJO,iBAInC,EAAgCa,cAJG,aAInC,EAAyC,GACzCsmB,EAAS7mB,QAAQC,MAIjBrE,QAAQC,IAAI4tB,GAKZzC,EDvLkC,SAC5ChJ,EACAgM,EACAC,EACAC,EACAJ,EACAtE,EACAM,GAEA,IAAM5lB,EAAE,OAAGslB,QAAH,IAAGA,OAAH,EAAGA,EAAQtlB,GACnB,GAAKslB,GAAWxH,GAAc9d,EAA9B,CAEA,IAAMiqB,EAAiB,SAACjqB,GAEtB,IADA,IAAIQ,GAAuB,EAClBP,EAAI,EAAGA,EAAI6d,EAAUjpB,OAAQoL,IAAK,CACzC,IAAME,EAAW2d,EAAU7d,GACvBD,EAAG,IAAMG,EAAS9Q,KAAO2Q,EAAG,GAAKG,EAASvP,SAAQ4P,EAAcP,GAEtE,OAAOO,GAEHA,EAAcypB,EAAejqB,GACnC,IAAqB,IAAjBQ,EAAJ,CACA,IAAMujB,EAAuB6B,GAAeA,EAAU5lB,GAAKiqB,EAAerE,EAAU5lB,IAAM,KAEpFO,EAA+E,GAqDrF,OAnDiB,OAAbupB,GACFhM,EAAUtd,GAAahB,MAAM0D,SAAQ,SAACyd,EAAaC,GACjDD,EAAYtgB,OAAO6C,SAAQ,SAAC5F,EAAOqR,GACjC,IAAI9O,EAAuB,KACvBD,EAA0B,KAExBsqB,EAAerM,GAAgB,OACnCyH,QADmC,IACnCA,OADmC,EACnCA,EAAQtlB,GAAG,GACX1C,EAAMM,KAAKksB,GACXhM,EACAtd,EACAogB,GAEIsJ,GAAgBA,EAAar1B,OAAS,IAC1C+K,EAAWsqB,EAAa,GAAG7M,KAC3Bxd,EAAQqqB,EAAa,GAAG9oB,GAG1Bb,EAAapD,KAAK,CAChBuR,SAAUkS,EACVjS,SAAUA,EACV/Q,KAAMN,EAAMM,KAAKksB,GACjB1oB,EAAGwc,GAAU,OACX0H,QADW,IACXA,OADW,EACXA,EAAQtlB,GAAG,GACX8d,EAAUtd,GAAa5P,OACvB+vB,EAAYjiB,SACZiiB,EAAYzJ,YACZyJ,EAAYvJ,aAEdvX,MAAOA,EACPD,SAAUA,EACVkD,WAAYknB,UAKO,CACzBjqB,KAAM,CACJmd,KAAI,OAAEoI,QAAF,IAAEA,OAAF,EAAEA,EAAQtlB,GAAG,GACjBuhB,SAAUqI,EACVvM,KAAI,OAAEiI,QAAF,IAAEA,OAAF,EAAEA,EAAQtlB,GAAG,GACjBmB,EAAG2oB,EACHnnB,WAAYonB,EACZvpB,cACAD,aAAcA,EACdsjB,YAAamG,GAEflG,MAAO,CACLC,mBAAoBA,MC6GGoG,CACfhD,OALyCvyB,KAAf,OAAX20B,QAAW,IAAXA,OAAA,EAAAA,EAAaG,UAAb,OAAqCH,QAArC,IAAqCA,OAArC,EAAqCA,EAAaG,SAAW,UACvB90B,KAAxB,OAAX20B,QAAW,IAAXA,OAAA,EAAAA,EAAaE,mBAAkCF,EAAYE,mBAAqB,GAC9D,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAaI,kBAAmB,IAC5B,OAAXJ,QAAW,IAAXA,OAAA,EAAAA,EAAaK,cAAc,EAO7CjD,EAAS7mB,QAAQC,KACjB4mB,EAAS7mB,QAAQ2jB,eAavB,IACEkD,EAAS9B,YAAY5f,SAAS,UAC5B,UAAC0hB,EAASlC,WAAV,aAAC,EAAcpD,iBAAkB,CAAC,WAAY,YAAYpc,SAAS0hB,EAASlC,IAAIpD,eAAermB,UAG9F2rB,EAASlC,IAAIpD,gBACZA,GACF,CAAC,WAAY,YAAYpc,SAASoc,EAAermB,QAEjD2rB,EAASlC,IAAIpD,eAAiBA,GAE1BsF,EAASlC,IAAIpD,gBAAgB,CACQ,IAAD,EAUD,KAVvC,GAAMsF,EAAS7mB,QAAQ0hB,KAAKoC,WACgB,cAAtC,UAAA+C,EAASlC,IAAIpD,sBAAb,eAA6BrmB,QAC/BmsB,EAAgB/F,GACduF,EAASlC,IAAIpD,eACb8F,EACAC,EACAT,EAAS7mB,UAIf,IAAK6mB,EAAS7mB,QAAQ0hB,KAAKoC,WACzB,GAA0C,cAAtC,UAAA+C,EAASlC,IAAIpD,sBAAb,eAA6BrmB,MAE/BmsB,EAAgB/F,GACduF,EAASlC,IAAIpD,eACb8F,EACAC,EACAT,EAAS7mB,SAGX6mB,EAAS7B,yBAA2B,KACpC6B,EAASlC,IAAIpD,eAAiB,UACzB,GAAIuF,EAAalD,iBAAyD,cAAtC,WAAAiD,EAASlC,IAAIpD,sBAAb,iBAA6BrmB,MAAqB,CAC3F,IAAMovB,GAAW3N,EAAW9B,KAAK3f,KAE7B,CAAC,QAAS,SAASiK,SAASwX,EAAW9B,KAAK3f,MAC5C,EACA,CAAC,aAAaiK,SAASwX,EAAW9B,KAAK3f,MACvC,EACA,EALA,EAOCovB,GAEC/C,EAASxM,MAAMhmB,OAASu1B,GAAU,EACpC/C,EAAW9E,GAAc8E,EAASrsB,KAAMqsB,EAAUV,EAAS7mB,UAI3DqnB,EDzUG,SACrBrJ,EACAre,EACAkb,EACA6G,GAEA,IAAMhhB,EAAcyf,GAAuBuB,EAAKG,QAAS7D,GAEzD,GADApiB,QAAQC,IAAI6E,EAAaf,EAAOkb,EAAMA,EAAK3f,MACvB,OAAhBwF,IAAyBf,IAAUkb,IAAS6G,IAAS7G,EAAK3f,KAAM,OAAO8iB,EAC3E,IACMuM,EADW1P,EAAKE,MACCxlB,KAAI,SAACwlB,EAAOyP,GAAR,MAAqB,CAC9C9M,GAAW3C,EAAM,GAAIpb,EAAMwd,iBAAkBxd,EAAMihB,oBACnD9C,GACE/C,EAAM,GACNiD,EAAUtd,GAAa5P,OACvBktB,EAAUtd,GAAahB,MAAM,GAAGd,SAChCof,EAAUtd,GAAahB,MAAM,GAAG0X,YAChC4G,EAAUtd,GAAahB,MAAM,GAAG4X,iBAIpC,MAAM,GAAN,oBACK0G,EAAUzD,MAAM,EAAG7Z,IADxB,4BAGOsd,EAAUtd,IAHjB,IAIIhB,MAAM,CAAD,2BAEEse,EAAUtd,GAAahB,MAAM,IAF/B,IAGDyX,MAAM,GAAD,oBACA6G,EAAUtd,GAAahB,MAAM,GAAGyX,OADhC,CAEH,CAAEjX,GAAIqqB,EAAOrvB,KAAM2f,EAAK3f,KAAM5F,MAAO,CAAE+Z,YAAa,OAAQob,YAAa,cAL1E,oBAQAzM,EAAUtd,GAAahB,MAAM6a,MAAM,QAZ5C,aAeKyD,EAAUzD,MAAM7Z,EAAc,KCqSDgqB,CAAQrD,EAAeC,EADvCC,EAAW9E,GAAc8E,EAASrsB,KAAMqsB,EAAUV,EAAS7mB,SACC6mB,EAAS7mB,QAAQ0hB,MAC7E6F,EAAW,CAAEzM,WAAW,EAAOC,MAAO,IACtC8L,EAASlC,IAAIpD,eAAiB,MATpBgG,EAAW,CAAEzM,WAAW,EAAOC,MAAO,KAkBwB8L,EAA5E/B,WAA4E+B,EAAhE9B,YAAgE8B,EAAnD7B,yBAAmD6B,EAAzBlnB,MAAyBknB,EAAlBlC,IA/P/B,IA+PuCgG,GA/PvC,YA+PiD9D,EA/PjD,uEAgQnCA,EAASlnB,MAAT,2BAAsBknB,EAASlnB,OAAU2nB,GACnCN,IAAgBH,EAAS7mB,QAAQQ,aAAewmB,GAGtDpK,EAAS,CACPtD,KAAM,yBACNrU,OAAQ,CACNwX,SAAS,2BACJkO,IADG,IAENhrB,MAAO2nB,EACPlnB,UAAWinB,EACXxM,KAAM0M,OAMZ7C,EAAY7vB,QAAZ,2BACKgyB,GADL,IAEE/B,WAAY,IAAIhrB,KAChBirB,YAAa,OAKnBnpB,QAAQC,IAAI,iBACZ6oB,EAAY7vB,QAAQkwB,YAAY1nB,KAAK,QACrCupB,IACA,IAAMgE,EAAcpE,OAAOqE,YAAYjE,EAAS,IAAOvC,GACvD,OAAO,WACLmC,OAAOsE,cAAcF,MAEtB,CACDvG,EACAC,EACA3H,EAAW9B,KAAKC,UAChB6B,EAAW9B,KAAKE,MAChB4B,EAAWjd,MAAMD,WACjBkd,EAAWhd,MAAMC,YACjB8kB,EAAY7vB,QAAQmwB,yBACpBrI,EAAWd,aAGN,CAAC,2BAEDc,GAFA,IAGH9b,QAAS6b,GAAgBC,EAAYnd,EAAiBod,KAExDA,IC1oBSmO,GAAa,SAACh4B,GAA4B,IAC7CuC,EAAoDvC,EAApDuC,MAAOylB,EAA6ChoB,EAA7CgoB,MAAOiQ,EAAsCj4B,EAAtCi4B,KAAMC,EAAgCl4B,EAAhCk4B,YAAaC,EAAmBn4B,EAAnBm4B,eACzC,GAAqB,IAAjBnQ,EAAMhmB,OAAc,OAAO,KAC/B,IAAMsa,GAAe,OAAC/Z,QAAD,IAACA,OAAD,EAACA,EAAO+Z,aAAc/Z,EAAM+Z,YAAc,MACzDob,GAAe,OAACn1B,QAAD,IAACA,OAAD,EAACA,EAAOm1B,aAAcn1B,EAAMm1B,YAAc,OACzDU,EAAU,CAAC,OAAQ,YAAa,gBAAgBhmB,SAAS6lB,GAAQA,EAAO,YACxEI,EAAoC,GAM1C,GAJIrQ,EAAM,GAAG,GAAKA,EAAM,GAAG,GACzBqQ,EAAc/tB,KAAd,aAAuB0d,EAAM,IAA7B,aAAsCA,EAAM,KACvCqQ,EAAc/tB,KAAd,aAAuB0d,EAAM,IAA7B,aAAsCA,EAAM,KAEnC,cAAZoQ,GAAoC,iBAATH,EAAyB,CACtD,IAAMK,EAAKD,EAAc,GAAG,GAAKA,EAAc,GAAG,GAC5CE,EAAKF,EAAc,GAAG,GAAKA,EAAc,GAAG,GAC5CG,EAAQD,EAAKD,EACbG,EAAaF,EAAK,EAAIL,EAAcC,EACpC3c,EAAI6c,EAAc,GAAG,GAAKG,EAAQH,EAAc,GAAG,GACnDK,GAAcD,EAAajd,GAAKgd,EAGtC,GAFAH,EAAc,GAAG,GAAKK,EACtBL,EAAc,GAAG,GAAKI,EACT,iBAATR,EAAyB,CAC3B,IAAMU,EAAUJ,EAAK,EAAIJ,EAAiBD,EACpCU,GAAWD,EAAUnd,GAAKgd,EAChCH,EAAc,GAAG,GAAKO,EACtBP,EAAc,GAAG,GAAKM,GAI1B,OACE,eAAC,IAAMz2B,SAAP,WACE,cAAC,KAAD,CACEoM,EAAG,EACHC,EAAG,EACHC,OAAQ,CAAC6pB,EAAc,GAAG,GAAIA,EAAc,GAAG,GAAIA,EAAc,GAAG,GAAIA,EAAc,GAAG,IACzF1pB,OAAQ2N,EACR1N,YAAa,IAEf,cAAC,KAAD,CAAQN,EAAG0Z,EAAM,GAAG,GAAIzZ,EAAGyZ,EAAM,GAAG,GAAI6Q,OAAQ,EAAGvpB,KAAMooB,IACzD,cAAC,KAAD,CAAQppB,EAAG0Z,EAAM,GAAG,GAAIzZ,EAAGyZ,EAAM,GAAG,GAAI6Q,OAAQ,EAAGvpB,KAAMooB,QCvClDoB,GAAS,SAAC94B,GAAwB,IACrCuC,EAA8CvC,EAA9CuC,MAAOylB,EAAuChoB,EAAvCgoB,MAAOkQ,EAAgCl4B,EAAhCk4B,YAAaC,EAAmBn4B,EAAnBm4B,eACnC,GAAqB,IAAjBnQ,EAAMhmB,OAAc,OAAO,KAC/B,IAAMsa,GAAe,OAAC/Z,QAAD,IAACA,OAAD,EAACA,EAAO+Z,aAAc/Z,EAAM+Z,YAAc,MACzDob,GAAe,OAACn1B,QAAD,IAACA,OAAD,EAACA,EAAOm1B,aAAcn1B,EAAMm1B,YAAc,OAKzDW,EAAoC,GAG1C,OAFAA,EAAc/tB,KAAK,CAAC0d,EAAM,GAAG,GAAIkQ,GAAc,CAAClQ,EAAM,GAAG,GAAImQ,IAG3D,eAAC,IAAMj2B,SAAP,WACE,cAAC,KAAD,CACEoM,EAAG,EACHC,EAAG,EACHC,OAAQ,CAAC6pB,EAAc,GAAG,GAAIA,EAAc,GAAG,GAAIA,EAAc,GAAG,GAAIA,EAAc,GAAG,IACzF1pB,OAAQ2N,EACR1N,YAAa,IAEf,cAAC,KAAD,CAAQN,EAAG0Z,EAAM,GAAG,GAAIzZ,EAAGyZ,EAAM,GAAG,GAAI6Q,OAAQ,EAAGvpB,KAAMooB,QCrBlDqB,GAAS,SAAC/4B,GAAwB,IACrCuC,EAAqCvC,EAArCuC,MAAOylB,EAA8BhoB,EAA9BgoB,MAAO0D,EAAuB1rB,EAAvB0rB,UAAWC,EAAY3rB,EAAZ2rB,QACjC,GAAqB,IAAjB3D,EAAMhmB,OAAc,OAAO,KAC/B,IAAMsa,GAAe,OAAC/Z,QAAD,IAACA,OAAD,EAACA,EAAO+Z,aAAc/Z,EAAM+Z,YAAc,MACzDob,GAAe,OAACn1B,QAAD,IAACA,OAAD,EAACA,EAAOm1B,aAAcn1B,EAAMm1B,YAAc,OAKzDW,EAAoC,GAG1C,OAFAA,EAAc/tB,KAAK,CAACohB,EAAW1D,EAAM,GAAG,IAAK,CAAC2D,EAAS3D,EAAM,GAAG,KAG9D,eAAC,IAAM9lB,SAAP,WACE,cAAC,KAAD,CACEoM,EAAG,EACHC,EAAG,EACHC,OAAQ,CAAC6pB,EAAc,GAAG,GAAIA,EAAc,GAAG,GAAIA,EAAc,GAAG,GAAIA,EAAc,GAAG,IACzF1pB,OAAQ2N,EACR1N,YAAa,IAEf,cAAC,KAAD,CAAQN,EAAG0Z,EAAM,GAAG,GAAIzZ,EAAGyZ,EAAM,GAAG,GAAI6Q,OAAQ,EAAGvpB,KAAMooB,QChClDsB,GAAY,WACvB,IAAIC,EAAaC,YAAe,CAC9Bz+B,QAAS,CACPqN,QAAS,CACPnN,KAAM,WAERD,UAAW,CACTC,KAAM,WAERwN,KAAM,WA0CV,OAtCA8wB,EAAWE,WAAWC,GAAK,CACzB/+B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,OACVK,WAAY,OAEdw7B,EAAWE,WAAWE,GAAK,CACzBh/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,SACVK,WAAY,OAEdw7B,EAAWE,WAAWG,GAAK,CACzBj/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,OACVK,WAAY,OAEdw7B,EAAWE,WAAWI,GAAK,CACzBl/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,UACVK,WAAY,OAEdw7B,EAAWE,WAAWK,GAAK,CACzBn/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,UACVK,WAAY,OAEdw7B,EAAWE,WAAWM,GAAK,CACzBp/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,UACVK,WAAY,OAEdw7B,EAAWE,WAAW9+B,WAAa,kCACnC4+B,EAAaS,YAAoBT,GAlDV,G,wCCmBZU,GAAgB,SAAC35B,GAGvB,IACG4pB,EAA2B5pB,EAA3B4pB,WAAYgQ,EAAe55B,EAAf45B,WADhB,GAGYzyB,YAAc,qBAEayiB,EAAWjd,OALlD,KAKID,WALJ,EAKgBmD,mBACyB+Z,EAAWhd,OAIlDxS,GAVF,EAMIyS,YANJ,EAMiBC,oBACE8c,EAAWpd,cAAcnR,MACxBuuB,EAAWpd,cAAcrR,OACnCyuB,EAAWhd,MAAMyjB,WACjBppB,eAEd,OACE,cAAC,IAAM/E,SAAP,UAGE,eAACoF,GAAA,EAAD,WACE,eAACG,GAAA,EAAD,CAAUC,QAAM,EAAhB,UACE,cAACC,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAAC,IAAD,CAAMyM,KAAMoE,IAAc5I,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAEpE,cAACC,GAAA,EAAD,CAAcjyB,QAAQ,mBAAmBkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,sBAE3F,eAACuK,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,eAHjB,UAME,cAACjyB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAAC,IAAD,CAAMyM,KAAMmE,IAAmB3I,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAEzE,cAACC,GAAA,EAAD,CAAcjyB,QAAQ,aAAakyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,sBAErF,eAACuK,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,UAHjB,UAME,cAACjyB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAAC,IAAD,CAAMyM,KAAMqyB,IAAgB72B,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAEtE,cAACC,GAAA,EAAD,CAAcjyB,QAAQ,QAAQkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,sBAEhF,eAACuK,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,aAHjB,UAME,cAACjyB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAAC,IAAD,CAAMyM,KAAMsyB,IAAS92B,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAE/D,cAACC,GAAA,EAAD,CAAcjyB,QAAQ,WAAWkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,sBAEnF,eAACuK,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,YAHjB,UAME,cAACjyB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAAC,IAAD,CAAMyM,KAAMuyB,IAAiB/2B,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAEvE,cAACC,GAAA,EAAD,CAAcjyB,QAAQ,yBAAyBkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,4B,8BCtF5Fk9B,GAAuD,CAClEnU,YAlCsB,SACtBoU,EACAC,GAGyB,IAFzB1d,EAEwB,uDAFP,GAGXoJ,EACJqU,EAAa73B,KAAI,SAAC+3B,EAAYC,GAC5B,GAAIA,EAAgB5d,EAAS,EAAG,MAAO,CAAE3Q,OAAQ,CAAC,MAAOhB,KAAMsvB,EAAWtvB,MAC1E,IAAIwvB,EAAe,EAMnB,OALAJ,EAAa7S,MAAMgT,EAAgB5d,EAAS,EAAG4d,EAAgB,GAAGnqB,SAAQ,SAACqqB,GACrEjvB,GAAmBivB,GAAgBD,GAAgBC,EAAcrvB,MAC5DM,GAAmB+uB,KAC1BD,GAAkBC,EAAczuB,OAAO,GAAKyuB,EAAczuB,OAAO,GAAK,MAEnE,CAAEA,OAAQ,CAACwuB,EAAe7d,GAAS3R,KAAMsvB,EAAWtvB,UACvD,GACR,OAAO+a,GAkBP5mB,KAAM,MACN8S,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAChCK,QAAS,CAAEgE,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAAO8sB,aAAa,GAC/DxyB,KAAM,QAGKyyB,GAAW,SACtBP,EACAC,GAKA,IAFyB,IAFzB1d,EAEwB,uDAFP,GAGXoJ,EAAqC,GAClC5Y,EAAI,EAAGA,EAAIitB,EAAar4B,OAAQoL,IACvC,GAAIA,EAAIwP,EAAS,EACfoJ,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC,MAAOhB,KAAMovB,EAAajtB,GAAGnC,YAEtD,GAAImC,IAAMwP,EAAS,EAAG,CAE3B,IADA,IAAIie,EAAU,EACLttB,EAAI,EAAGA,EAAIqP,EAAQrP,IAAK,CAC/B,IAAM/B,EAAU6uB,EAAa9sB,GACvBrB,EAAQT,GAAmBD,GAC7BA,EAAQH,MACRM,GAAmBH,IACnBA,EAAQS,OAAO,IACf,EACJ4uB,GAAW3uB,EAEb2uB,GAAWje,EACXoJ,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC4uB,GAAU5vB,KAAMovB,EAAajtB,GAAGnC,WACzD,CACL,IAAM6vB,EAAa,GAAKle,EAAS,GAC3BpR,EAAU6uB,EAAajtB,GACvBlB,EAAQT,GAAmBD,GAC7BA,EAAQH,MACRM,GAAmBH,IACnBA,EAAQS,OAAO,IACf,EACE8uB,GACH7uB,EAAS8Z,EAAc5Y,EAAI,GAAGnB,OAAO,IAAiB6uB,EAAc9U,EAAc5Y,EAAI,GAAGnB,OAAO,GACnG+Z,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC8uB,GAAM9vB,KAAMovB,EAAajtB,GAAGnC,OAG9D,OAAO+a,GAEIgV,GAAuD,CAClE/U,YAAa2U,GACbx7B,KAAM,MACN8S,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAChCK,QAAS,CAAEgE,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAAO8sB,aAAa,GAC/DxyB,KAAM,QAkCK8yB,GAAuD,CAClEhV,YAhCsB,SACtBoU,EACAC,GAKA,IAFyB,IAFzB1d,EAEwB,uDAFP,GAGXoJ,EAAoC,GACjC5Y,EAAI,EAAGA,EAAIitB,EAAar4B,OAAQoL,IACvC,GAAIA,EAAIwP,EACNoJ,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC,MAAOhB,KAAMovB,EAAajtB,GAAGnC,WAD7D,CAKA,IADA,IAAIiwB,EAAe,EACV3tB,EAAIH,EAAIwP,EAAS,EAAGrP,GAAKH,EAAGG,IAAK,CACxC,IAAM/B,EAAU6uB,EAAa9sB,GACvB4tB,EAAWd,EAAa9sB,EAAI,GAC9B6tB,EAAY,EAChB,GAAI7vB,GAAqBC,IAAYD,GAAqB4vB,GAAW,CACnE,IAAME,EAAK7vB,EAAQL,KAAOK,EAAQJ,IAC5BkwB,EAAM93B,KAAKgc,IAAIhU,EAAQL,KAAOgwB,EAAS9vB,OACvCkwB,EAAM/3B,KAAKgc,IAAIhU,EAAQJ,IAAM+vB,EAAS9vB,OAC5C+vB,EAAY53B,KAAKif,IAAI4Y,EAAIC,EAAKC,QAEnB/3B,KAAKgc,IAAIhU,EAAQH,MAAQ8vB,EAAS9vB,OAE/C6vB,GAAgBE,EAElBpV,EAAc1b,KAAK,CAAE2B,OAAQ,CAACivB,EAAete,GAAS3R,KAAMovB,EAAajtB,GAAGnC,OAE9E,OAAO+a,GAIP5mB,KAAM,MACN8S,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAChCK,QAAS,CAAEgE,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAAO8sB,aAAa,GAC/DxyB,KAAM,QAsCKqzB,GAAuD,CAClEvV,YApCsB,SACtBoU,EACAC,GAMA,IAHyB,IAFzB1d,EAEwB,uDAFP,GAGXoJ,EAAoC,GACtCyV,EAA6D,KACxDruB,EAAI,EAAGA,EAAIitB,EAAar4B,OAAQoL,IACvC,KAAIA,EAAIwP,IACNoJ,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC,MAAOhB,KAAMovB,EAAajtB,GAAGnC,OACjD,IAANmC,IAFN,CAIA,IAAM5B,EAAU6uB,EAAajtB,GACvB+tB,EAAWd,EAAajtB,EAAI,GAC5BsuB,EAASlwB,EAAQH,MAAQ8vB,EAAS9vB,MAClCjE,EAAKs0B,EAAS,EAAIA,EAAS,EAC3BC,EAAMD,EAAS,GAAKA,EAAS,EAC7BE,EAAI,EAAIhf,EAId,GAHU,IAANxP,IACFquB,EAAW,CAAEI,UAAWz0B,EAAI00B,WAAYH,IAErCF,KAAYruB,EAAIwP,GAArB,CAGA,IAAMmf,EAAa30B,EAAKw0B,GAAK,EAAIA,GAAKH,EAASI,UAC/CJ,EAASI,UAAYE,EACrB,IAAMC,EAAcL,EAAMC,GAAK,EAAIA,GAAKH,EAASK,WACjDL,EAASK,WAAaE,EACtB,IAAMC,EAAsB,IAAhBD,EAAoB,IAAM,IAAM,KAAO,EAAID,EAAaC,GAChE5uB,EAAIwP,EAAQoJ,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC,MAAOhB,KAAMovB,EAAajtB,GAAGnC,OACtE+a,EAAc1b,KAAK,CAAE2B,OAAQ,CAACgwB,GAAMhxB,KAAMovB,EAAajtB,GAAGnC,QAEjE,OAAO+a,GAIP5mB,KAAM,MACN8S,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAChCK,QAAS,CAAEgE,OAAQ,CAAC,CAAE9S,KAAM,SAAUyO,IAAK,KAAO8sB,aAAa,EAAM9uB,SAAU,EAAGogB,YAAa,CAAC,EAAG,MACnG9jB,KAAM,QAqBK+zB,GAAuD,CAClE98B,KAAM,MACN+I,KAAM,OACN+J,OAAQ,GACRhE,QAAS,CAAEgE,OAAQ,GAAIyoB,aAAa,EAAM9uB,SAAU,GACpDoa,YAvBsB,SAACoU,GAEvB,IADA,IAAMrU,EAAoC,GACjC5Y,EAAI,EAAGA,EAAIitB,EAAar4B,OAAQoL,IAAK,CAC5C,IAAM5B,EAAU6uB,EAAajtB,GAC7B,GAAU,IAANA,GAAW1B,GAAgBF,GAC7Bwa,EAAc1b,KAAK,CAAE2B,OAAQ,CAACT,EAAQgR,QAASvR,KAAMO,EAAQP,WAD/D,CAIA,IAAMkwB,EAAWd,EAAajtB,EAAI,GAClC,GAAK1B,GAAgBF,IAAaE,GAAgByvB,GAAlD,CAIA,IAAMgB,EAAM3wB,EAAQgR,OAAS2e,EAAS3e,OACtCwJ,EAAc1b,KAAK,CAAE2B,OAAQ,CAACkwB,GAAMlxB,KAAMovB,EAAajtB,GAAGnC,YAJxD+a,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC,MAAOhB,KAAMovB,EAAajtB,GAAGnC,QAM/D,OAAO+a,IAsBIoW,GAA0D,CACrEnW,YAbyB,SAACoU,GAE1B,IADA,IAAMrU,EAAoC,GACjC5Y,EAAI,EAAGA,EAAIitB,EAAar4B,OAAQoL,IAAK,CAC5C,IAAM5B,EAAU6uB,EAAajtB,GACzB1B,GAAgBF,GAClBwa,EAAc1b,KAAK,CAAE2B,OAAQ,CAACT,EAAQgR,QAASvR,KAAMO,EAAQP,OAE7D+a,EAAc1b,KAAK,CAAE2B,OAAQ,CAAC,GAAIhB,KAAMO,EAAQP,OAGpD,OAAO+a,GAIP5mB,KAAM,SACN8S,OAAQ,GACRhE,QAAS,CAAEgE,OAAQ,GAAIyoB,aAAa,EAAM9uB,SAAU,GACpD1D,KAAM,QAoCKk0B,GAAwD,CACnEpW,YAlCuB,SACvBoU,EACAC,GAKyB,IAJzBgC,EAIwB,uDAJC,GACzBC,EAGwB,uDAHA,GACxBC,EAEwB,uDAFD,EAIjBC,EAAW7B,GAASP,EAAcC,EAAcgC,GAChDI,EAAU9B,GAASP,EAAcC,EAAciC,GAE/CI,EAA4BF,EAASj6B,KAAI,SAACqL,EAAKyC,GACnD,IAAMssB,EAAaF,EAAQpsB,GAAQrE,OAAO,GACpC4wB,EAAchvB,EAAI5B,OAAO,GAE/B,MAAO,CACLA,OAAQ,CAFmB,OAAhB4wB,GAAuC,OAAfD,EAAsB,KAAOC,EAAcD,GAG9E3xB,KAAMovB,EAAa/pB,GAAQrF,KAC3B6xB,YAAa,CAAC,WAIZC,EAASnC,GAAS+B,EAAMrC,EAAckC,GACtCQ,EAAeL,EAAKn6B,KAAI,SAACy6B,EAASC,GACtC,IAAMC,EAAeF,EAAQhxB,OAAO,GAC9BmxB,EAAYL,EAAOG,GAASjxB,OAAO,GACnCoxB,EAAkC,OAAjBF,GAAuC,OAAdC,EAAqB,KAAOD,EAAaC,EACzF,OAAO,2BAAKH,GAAZ,IAAqBhxB,OAAQ,CAACkxB,EAAcC,EAAWC,QAEzD,OAAOL,GAKP59B,KAAM,OACN8S,OAAQ,CACN,CAAE9S,KAAM,eAAgByO,IAAK,IAC7B,CAAEzO,KAAM,cAAeyO,IAAK,IAC5B,CAAEzO,KAAM,gBAAiByO,IAAK,IAEhCK,QAAS,CACPgE,OAAQ,CACN,CAAE9S,KAAM,eAAgByO,IAAK,IAC7B,CAAEzO,KAAM,cAAeyO,IAAK,IAC5B,CAAEzO,KAAM,gBAAiByO,IAAK,IAEhC8sB,aAAa,GAGfxyB,KAAM,Q,oBC9QFm1B,GAAoBnjC,aAAW,SAACC,GAAD,OACnCmjC,aAAa,CACXC,KAAM,CACJtgC,MAAO9C,EAAMK,QAAQgjC,KAAK/iC,UAC1B,qBAAsB,CACpBwtB,gBAAiB9tB,EAAMK,QAAQmL,OAAO83B,OAExC,4CAA6C,CAC3CxV,gBAAgB,6BAAD,OAA+B9tB,EAAMK,QAAQkjC,KAAK,KAAlD,KACfzgC,MAAO,0BAET,qFAAsF,CACpFgrB,gBAAiB,gBAGrBvqB,QAAS,CACPT,MAAO9C,EAAMK,QAAQgjC,KAAK/iC,UAC1BkjC,qBAAsBxjC,EAAMiN,QAAQ,GACpCw2B,wBAAyBzjC,EAAMiN,QAAQ,GACvCy2B,aAAc1jC,EAAMiN,QAAQ,GAC5B9M,WAAYH,EAAM++B,WAAW4E,iBAC7B,gBAAiB,CACfxjC,WAAYH,EAAM++B,WAAW6E,mBAE/B3iC,MAAO,QAET4iC,MAAO,CACLrjC,WAAY,EACZ,aAAc,CACZsjC,YAAa9jC,EAAMiN,QAAQ,KAG/B82B,SAAU,GACVC,SAAU,GACV13B,MAAO,CACLnM,WAAY,UACZ2C,MAAO,WAETmhC,UAAW,CACT/iC,QAAS,OACTc,WAAY,SACZnB,QAASb,EAAMiN,QAAQ,EAAG,IAE5Bi3B,aAAc,CAIZjjC,MAAO,eAETkjC,SAAU,CACRtjC,QAAS,GAEXujC,UAAW,CACT3jC,YAAaT,EAAMiN,QAAQ,IAE7Bo3B,UAAW,CACTlkC,WAAY,UACZmkC,SAAU,QAoBHC,GAAY,SAAC3+B,GACxB,IAAMyF,EAAU63B,KAEdmB,EAYEz+B,EAZFy+B,UACWG,EAWT5+B,EAXFw+B,UACAK,EAUE7+B,EAVF6+B,UACA3hC,EASE8C,EATF9C,MACA4hC,EAQE9+B,EARF8+B,QACAC,EAOE/+B,EAPF++B,aACAC,EAMEh/B,EANFg/B,YACAC,EAKEj/B,EALFi/B,uBACAC,EAIEl/B,EAJFk/B,sBACAC,EAGEn/B,EAHFm/B,qBACAC,EAEEp/B,EAFFo/B,oBACG59B,EAd6C,YAe9CxB,EAf8C,oLAiBlD,OACE,cAACq/B,GAAA,EAAD,aACEN,aAAcA,EACdC,YAAaA,EACbt4B,MACE,sBAAK44B,UAAW75B,EAAQ44B,UAAxB,UACGO,EACD,cAACj4B,EAAA,EAAD,CACEC,QAAO,OAAEq4B,QAAF,IAAEA,IAA0B,QACnCK,UAAW75B,EAAQg5B,UACnBvhC,MAAK,OAAEiiC,QAAF,IAAEA,IAAwB,UAHjC,SAKGV,IAEH,cAAC93B,EAAA,EAAD,CAAYC,QAAO,OAAEs4B,QAAF,IAAEA,IAAyB,UAAWhiC,MAAK,OAAEkiC,QAAF,IAAEA,IAAuB,UAAvF,SACGP,OAIPt8B,MAAO,CACL,oBAAqBrF,EACrB,uBAAwB4hC,GAG1Br5B,QAAS,CACP+3B,KAAM/3B,EAAQ+3B,KACd7/B,QAAS8H,EAAQ9H,QACjBwgC,SAAU14B,EAAQ04B,SAClBC,SAAU34B,EAAQ24B,SAClBH,MAAOx4B,EAAQw4B,MACfv3B,MAAOjB,EAAQiB,QAEblF,K,oBC9GJ+9B,GAAY,CAChB,UACA,gBACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,cACA,cACA,gBACA,YACA,aACA,gBACA,cACA,cACA,eAcWC,GAAY,SAACx/B,GAKnB,IACG9C,EAAmD8C,EAAnD9C,MADJ,EACuD8C,EAA5C3E,aADX,MACmB,GADnB,IACuD2E,EAAhC7E,cADvB,MACgC,GADhC,IACuD6E,EAAnBy/B,iBADpC,MACgD,GADhD,EAEJ,OACE,qBAAKl9B,MAAK,aAAIlH,MAAO,GAAIF,OAAQ,GAAIK,UAAW,aAAcP,QAAS,GAAMwkC,GAA7E,SACE,qBACEl9B,MAAO,CACLrE,OAAQ,iBACR7C,MAAOA,EACPF,OAAQA,EACR6C,aAAc,EACdxC,UAAW,aACXyC,WAAYf,QAWTwiC,GAAc,SAAC1/B,GAA6B,IAC/C9C,EAA2B8C,EAA3B9C,MAAOyiC,EAAoB3/B,EAApB2/B,gBADuC,EAE9Bj+B,IAAMqI,UAAS,GAFe,mBAE/C61B,EAF+C,KAEzCC,EAFyC,OAGlBn+B,IAAMqI,SAAwB,MAHZ,mBAG/C+1B,EAH+C,KAGnCC,EAHmC,KAKhDC,EAAWt+B,IAAMC,OAA0B,MAE3Cs+B,EAAQ,uCAAuCC,KAAKhjC,GACpDijC,EAAgBF,GAA0B,kBAAV/iC,EAAqBge,GAAShe,GAAS,KACvEkjC,EACa,kBAAVljC,EACFA,EAAiBmjC,MAChB,oGAEF,KACAC,IAAWF,GAAS,KAAKA,GAAsB,MAAbA,EAAM,GACxCG,EACFH,GAAS,KAAKA,GAAS,KAAKA,GAAS,KAAKA,EACxC,CAACjyB,WAAWiyB,EAAM,IAAKjyB,WAAWiyB,EAAM,IAAKjyB,WAAWiyB,EAAM,KAC9DH,GAAWE,EACX,CAACA,EAAY7kB,EAAG6kB,EAAY5kB,EAAG4kB,EAAY3kB,GAC3C,GACN,GAA2B,IAAvB+kB,EAAYv+B,OAAc,CAC5B,IAAMw+B,EAA8BtjC,KpB4HxBmV,GACP6I,GAAS7I,GAAU,MADQ,KoB3H1BmuB,GAAcD,EAAYj2B,KAAKk2B,EAAallB,EAAGklB,EAAajlB,EAAGilB,EAAahlB,GAGpF,IAAMilB,EAAcH,GAAYF,GAAS,KAAKA,EAA+B,IAAvBjyB,WAAWiyB,EAAM,IAAY,IA3B7B,EA4BtB1+B,IAAMqI,SAAS02B,GA5BO,mBA4B/CC,EA5B+C,KA4BrCC,EA5BqC,KA8BtD,OACE,eAAC,IAAMz+B,SAAP,WACE,cAACmG,EAAA,EAAD,CACEnL,MAAM,UACNqF,MAAO,CAAEtH,QAAS,GAClBqL,QAAS,WACPu5B,GAAQ,IAEVe,IAAKZ,EANP,SAQE,cAAC,GAAD,CAAW9iC,MAAOA,MAEpB,eAAC2jC,GAAA,EAAD,CACEC,GAAI,KACJ51B,KAAM00B,EACNmB,SAAUf,EAASl+B,QACnBk/B,QAAS,WACPnB,GAAQ,IAEVoB,aAAc,CACZC,SAAU,SACVC,WAAY,UAEd3iC,gBAAiB,CACf0iC,SAAU,MACVC,WAAY,UAEd5+B,MAAO,CAAElH,MAAO,KAflB,UAiBE,eAAC+lC,GAAA,EAAD,CACE3B,WAAS,EACT4B,aAAa,SACbjlC,WAAW,SACXklC,QAAQ,eACRj6B,QAAS,EACT9E,MAAO,CAAE3G,OAAQ,sBAAuBP,MAAO,KANjD,UAQGkkC,GAAU/8B,KAAI,SAAC++B,EAAKC,GAAN,OACb,cAACJ,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAACp5B,EAAA,EAAD,CACEnL,MAAM,UACNqF,MAAO,CAAEtH,QAAS,GAClBymC,YAAa,SAACn4B,GACZw2B,EAAc,QAAD,OAASR,GAAUiC,GAAnB,YAA8Bd,EAA9B,OAEfiB,aAAc,WACZ5B,EAAc,OAEhBz5B,QAAS,WACPq5B,EAAgB,QAAUJ,GAAUiC,GAAU,IAAMd,EAAW,IAAM,MAVzE,SAcE,cAAC,GAAD,CACExjC,MAAO,QAAUqkC,EAAM,MACvBlmC,MAAO,GACPF,OAAQ,GACRskC,UAAW,CAAEpkC,MAAO,OAAQF,OAAQ,aAnBnBqmC,MAwBzB,cAACJ,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAAC96B,EAAA,EAAD,sBAEF,cAACy6B,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAGl/B,MAAO,CAAEtH,QAAS,YAApC,SACE,cAAC2mC,GAAA,EAAD,CACEC,MAAOnB,EACPoB,SAAU,SAACv4B,EAAGsE,GACZ8yB,EAAYzkB,MAAMC,QAAQtO,GAAOA,EAAI,GAAKA,GAC1C8xB,EAAgB,QAAD,OACLY,EAAY,GADP,YACaA,EAAY,GADzB,YAC+BA,EAAY,GAD3C,aAEVrkB,MAAMC,QAAQtO,GAAOA,EAAI,GAAKA,GAAO,IAF3B,WAQrB,cAACuzB,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAACM,GAAA,EAAD,CACEnmC,OAAO,OACPgL,QAAQ,WACRxD,KAAK,QACL4+B,WAAY,CAAEz/B,MAAO,CAAEtH,QAAS,qBAChC4mC,MAAOnB,EACPoB,SAAU,SAACv4B,GACT,IAAIsE,EAAM8N,SAASpS,EAAE04B,OAAOJ,MAAO,IAC/BjwB,MAAM/D,KAAMA,EAAM,GAClBA,EAAM,GAAKA,EAAM,MACrB8yB,EAAY9yB,GACZ8xB,EAAgB,QAAD,OAASY,EAAY,GAArB,YAA2BA,EAAY,GAAvC,YAA6CA,EAAY,GAAzD,YAA+D1yB,EAAM,IAArE,eAKvB,sBAAKtL,MAAO,CAAEtE,WAAY,OAAQikC,UAAW,kBAA7C,UACE,eAACd,GAAA,EAAD,CACE3B,WAAS,EACTrjC,WAAW,SACXilC,aAAa,SACbC,QAAQ,SAER/+B,MAAO,CACLgI,cAAe,EAIf3O,OAAQ,qBACRP,MAAO,KAZX,UAiBE,cAAC+lC,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAAC96B,EAAA,EAAD,CAAYY,UAAU,MAAM46B,MAAM,SAAlC,iBAKF,cAACf,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAAC96B,EAAA,EAAD,CAAYY,UAAU,MAAM46B,MAAM,SAAlC,iBAKF,cAACf,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAAC96B,EAAA,EAAD,CAAYY,UAAU,MAAM46B,MAAM,SAAlC,iBAIF,cAACf,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAAC96B,EAAA,EAAD,CAAYY,UAAU,MAAM46B,MAAM,SAAlC,iBAcF,cAACf,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,IACf,cAACL,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAAC,GAAD,CACEvkC,MAAS4iC,GAA0B5iC,EACnC7B,MAAO,GACPF,OAAQ,GACRskC,UAAW,CAAEpkC,MAAO,OAAQF,OAAQ,eAI1C,eAACimC,GAAA,EAAD,CACE3B,WAAS,EACTrjC,WAAW,SACXilC,aAAa,SACbC,QAAQ,SAER/+B,MAAO,CACLgI,cAAe,GAKf2zB,YAAa,QAZjB,UAmBE,cAACkD,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAACM,GAAA,EAAD,CACEF,MAAStB,EAAcA,EAAY,GAAKrjC,EACxCtB,OAAO,OACPgL,QAAQ,WACRxD,KAAK,QACL4+B,WAAY,CACVz/B,MAAO,CAAEtH,QAAS,EAAGgD,WAAW,mBAAD,OAAqByiC,EAAW,IAAhC,WAKrC,cAACU,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAACM,GAAA,EAAD,CACEF,MAAStB,EAAcA,EAAY,GAAKrjC,EACxCtB,OAAO,OACPgL,QAAQ,WACRxD,KAAK,QACL4+B,WAAY,CAAEz/B,MAAO,CAAEtH,QAAS,EAAGgD,WAAW,qBAAD,OAAuByiC,EAAW,IAAlC,OAC7C0B,WAAS,MAGb,cAAChB,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAACM,GAAA,EAAD,CACEF,MAAStB,EAAcA,EAAY,GAAKrjC,EACxCtB,OAAO,OACPgL,QAAQ,WACRxD,KAAK,QACL4+B,WAAY,CAAEz/B,MAAO,CAAEtH,QAAS,EAAGgD,WAAW,qBAAD,OAAuByiC,EAAW,IAAlC,WAGjD,cAACU,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,cAACM,GAAA,EAAD,CACEF,MAAOnB,EACP9kC,OAAO,OACPgL,QAAQ,WACRxD,KAAK,QACL4+B,WAAY,CAAEz/B,MAAO,CAAEtH,QAAS,EAAGgD,WAAW,aAGlD,cAACmjC,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,IACf,cAACL,GAAA,EAAD,CAAMze,MAAI,EAAC8e,GAAI,EAAf,SACE,qBAAKl/B,MAAO,CAAE1E,UAAW,SAAUjC,OAAQ,YAA3C,SAIE,cAACyO,EAAA,EAAD,CACEnN,MAAM,UACN0J,QAAQ,WACRxD,KAAK,QACLb,MAAO,CAAEs3B,SAAU,GACnBvzB,QAAS,kBAAMu5B,GAAQ,IALzB,iCC5SVwC,GAAwB,SAC5BC,EACA1Y,GAEA,OAAI0Y,EAAKp0B,QAAQysB,YACR,WACL/Q,EAAW9b,QAAQic,YACjBH,EAAWvc,UAAU,GAAGV,MAAM,GAAGa,OAAO,GAAGzC,KAC3C6e,EAAWvc,UAAU,GAAGV,MAAM,GAAGa,OAAO,GAAGpO,KAC3CkjC,IAIG,WACL1Y,EAAW9b,QAAQgc,SACjBF,EAAWvc,UAAU,GAAGV,MAAM,GAAGa,OAAO,GAAGzC,KAC3C6e,EAAWvc,UAAU,GAAGV,MAAM,GAAGa,OAAO,GAAGpO,KAC3C,EACAkjC,KAKKC,GAA0B,SAACviC,GAMjC,IAAD,IACI2N,EAAoE3N,EAApE2N,YAAakO,EAAuD7b,EAAvD6b,SAAUC,EAA6C9b,EAA7C8b,SAAU8N,EAAmC5pB,EAAnC4pB,WAAY4Y,EAAuBxiC,EAAvBwiC,mBAC/CC,EAAe7Y,EAAWvc,UAAUM,GAAahB,MAAMkP,GAAUrO,OAAOsO,GACxErR,EAAQD,GAAiBi4B,GAAgBA,EAAe,KACxDroC,EAAQ6M,cAEd,OAAKwD,EAGH,eAAC,GAAD,CAEEi4B,OAAM,oBAAe/0B,EAAf,cAAgCkO,EAAhC,kBAAkDC,GACxD2iB,UAAWh0B,EAAMrL,KACjB0/B,QAAQ,OACRN,UACE,qBACEj8B,MAAO,CACLtE,WAAY7D,EAAMK,QAAQqN,QAAQnN,KAClCU,MAAO,GACPF,OAAQ,GACR+C,OAAQ,iBACRF,aAAc,EACdnD,YAAa,IAPjB,SAUE,cAAC8nC,EAAA,KAAD,CAAM/6B,KAAMmE,IAAmB3I,KAAM,OAAQlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAGhF+E,UACkB,IAAhBlxB,GAAkC,IAAbmO,EACnB,cAACzT,EAAA,EAAD,CACEjF,KAAK,QACLkD,QAAS,SAACiD,GACRA,EAAEq5B,iBAKDJ,EAJgD,CAC/Cjc,KAAM,cACNrU,OAAQ,CAAEvE,cAAakO,SAAU,EAAGC,eAN1C,SAWE,cAAC6mB,EAAA,KAAD,CAAM/6B,KAAM6B,IAAUrG,KAAM,EAAGlG,MAAM,gBAErC6E,EAlCR,UAqCE,cAAC,GAAD,CAEE2gC,QAAuB,IAAd/0B,EAAgC,IAAXkO,EAAiBC,GAAUzN,WACzDowB,UAAU,oBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAK,UAAE0sB,EAAWvc,UAAUM,GAAahB,MAAM,GAAGa,OAAOsO,GAAUvZ,aAA9D,iBAAE,EAAmE+Z,mBAArE,aAAE,EAAiF,GACxFqjB,gBAAiB,SAACziC,GAKfslC,EAJ4D,CAC3Djc,KAAM,0BACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGC,kBAVvC,IAAdnO,EAAgC,IAAXkO,EAAiBC,GAiB5CrR,EAAMwD,UAAUiE,OAAO1P,KAAI,SAAC2P,EAAOgX,GAAR,OAC1B,cAAC,GAAD,CACEuZ,OAAM,UAAK,EAAI/0B,EAAT,cAA0BmO,EAA1B,YAAsCqN,GAC5CsV,UAAWtsB,EAAM/S,KACjBo/B,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMk7B,IAA0B1/B,KAAM,EAAGlG,MAAM,SAChE2hC,UACE,cAACkD,GAAA,EAAD,CACEn7B,QAAQ,WACRhL,OAAO,OACPwH,KAAK,QACL4+B,WAAY,CAAEz/B,MAAO,CAAEtH,QAAS,EAAGI,MAAO,KAC1C0nC,aAAc5wB,EAAMtE,IACpBi0B,SAAU,SAACv4B,GACT,IAAMsE,EAAMM,WAAW5E,EAAE04B,OAAOJ,OAE5BjwB,MAAM/D,IAKT20B,EAJsD,CACrDjc,KAAM,oBACNrU,OAAQ,CAAErE,MAAKF,cAAakO,SAAU,EAAGC,WAAUqN,wBAzEjE,oBACoBxb,EADpB,cACqCkO,EADrC,kBACuDC,IAJtC,MA0FRknB,GAAsB,SAAChjC,GAK7B,IACG4pB,EAAqD5pB,EAArD4pB,WAAYgQ,EAAyC55B,EAAzC45B,WAAY1uB,EAA6BlL,EAA7BkL,KAAMs3B,EAAuBxiC,EAAvBwiC,mBAChCpoC,EAAQ6M,cAFV,EAG8BvF,IAAMqI,UAAS,GAH7C,mBAGGk5B,EAHH,KAGcC,EAHd,KAKEC,EAA6D,CACjE,CAAE/jC,KAAM,UAAWgkC,KAAMC,KACzB,CAAEjkC,KAAM,aAAcgkC,KAAMr3B,KAC5B,CAAE3M,KAAM,aAAcgkC,KAAME,KAC5B,CAAElkC,KAAM,SAAUgkC,KAAMG,MAEpBC,EAIA,CACJ,CAAEpkC,KAAM,MAAO6O,UAAWmsB,GAAMqJ,SAAU,WAC1C,CAAErkC,KAAM,MAAO6O,UAAW+sB,GAAMyI,SAAU,WAC1C,CAAErkC,KAAM,MAAO6O,UAAWutB,GAAMiI,SAAU,cAC1C,CAAErkC,KAAM,OAAQ6O,UAAWouB,GAAOoH,SAAU,cAC5C,CAAErkC,KAAM,MAAO6O,UAAWgtB,GAAMwI,SAAU,cAC1C,CAAErkC,KAAM,SAAU6O,UAAWmuB,GAASqH,SAAU,UAChD,CAAErkC,KAAM,MAAO6O,UAAWiuB,GAAMuH,SAAU,WAGtCC,EAAgB9Z,EAAWvc,UAC9B7K,KAAI,SAAC8K,EAAUyhB,GAAX,OACHzhB,EAASX,MAAMnK,KAAI,SAACmK,EAAOg3B,GAAR,OAAsBh3B,EAAMa,OAAOrO,QAAO,SAACykC,GAAD,MAA4B,cAAhBA,EAAOz7B,QAAsBnG,aAEvGoa,OACA0G,QAAO,SAAC+gB,EAAKC,GAAN,OAAcD,EAAMC,KAG9B,OACE,eAAC,IAAM5hC,SAAP,WACE,sBACEK,MAAO,CACLzH,SAAU,WACV4C,MAAO,GACPxC,OAAQ,GAJZ,UASGwoC,EAAgB,EACf,qBAAKnhC,MAAO,CAAEgI,cAAe,GAA7B,SACE,eAACw5B,GAAA,EAAD,CAAmBlC,MAAO,MAAOmC,WAAS,EAACzhC,MAAO,CAAEvE,aAAc,KAAOoF,KAAK,QAA9E,UACE,cAAC6gC,GAAA,EAAD,CAEE1hC,MAAO,CACL2hC,uBAAwB,GACxB7mC,cAAe,OACf8mC,oBAAqB,GACrBlmC,WAAqB,eAATiN,EAAwB9Q,EAAMK,QAAQC,UAAU0pC,MAAQ,QAEtE99B,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,eATjB,SAYE,cAACjzB,EAAA,EAAD,qBAEF,cAACs9B,GAAA,EAAD,CACEpC,MAAM,UACNt/B,MAAO,CACLs7B,wBAAyB,GACzBD,qBAAsB,GACtB3/B,WAAqB,kBAATiN,EAA2B9Q,EAAMK,QAAQC,UAAU0pC,MAAQ,QAEzE99B,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,kBARjB,uBAeF,KACJ,sBACEr3B,MAAO,CACLtE,WAAY7D,EAAMK,QAAQC,UAAU0pC,MACpClmC,OAAQ,iBACRF,aAAc,GACd/C,QAAS,GALb,UAQE,cAACoN,EAAA,EAAD,CACEjF,KAAK,QACLb,MAAO,CAAErE,OAAQ,iBAAkBtC,OAAQ,WAC3C0K,QAAS,kBAAM+9B,MAAM,aAHvB,SAKE,cAAC1B,EAAA,KAAD,CAAM/6B,KAAM08B,IAAYlhC,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,iBAEhE,cAACzxB,EAAA,EAAD,CACEjF,KAAK,QACLb,MAAO,CAAErE,OAAQ,iBAAkBtC,OAAQ,mBAC3C0K,QAAS,kBAAM48B,GAAa,SAACphC,GAAD,OAAcA,MAH5C,SAKE,cAAC6gC,EAAA,KAAD,CACE/6B,KAAMq7B,EAAYsB,IAA+BC,IACjDphC,KAAM,EACNlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,uBAMrC,cAAC2K,GAAA,EAAD,CAGEC,oBAAqB,cAAC/B,EAAA,KAAD,CAAM/6B,KAAM+8B,IAAavhC,KAAM,EAAGlG,MAAM,SAC7D0nC,kBAAmB,cAACjC,EAAA,KAAD,CAAM/6B,KAAMi9B,IAAczhC,KAAM,EAAGlG,MAAM,SAC5D4nC,eAAgB,qBAAKviC,MAAO,CAAElH,MAAO,MAGrC0pC,kBAAgB,EARlB,SAWY,kBAAT75B,EACG0e,EAAWvc,UAAU7K,KAAI,SAAC8K,EAAUK,GAAX,OACvBL,EAASX,MAAMnK,KAAI,SAACmK,EAAOkP,GAAR,OACjBlP,EAAMa,OAAOhL,KAAI,SAACiI,EAAOqR,GAAR,OACftR,GAAiBC,GACf,cAAC,GAAD,CAEEmf,WAAYA,EACZ4Y,mBAAoBA,EACpB70B,YAAaA,EACbkO,SAAUA,EACVC,SAAUA,GANZ,4BAC4BnO,EAD5B,kBACiDkO,EADjD,kBACmEC,IAOjE,cAIRmnB,EACFE,EAAU3gC,KAAI,SAACwiC,EAAKC,GAAN,OACZ,cAAC,GAAD,CAEEvC,OAAQuC,EAAO52B,WACfowB,UAAWuG,EAAI5lC,KACfo/B,UACE,qBACEj8B,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAACwnC,EAAA,KAAD,CAAM/6B,KAAMo9B,EAAI5B,KAAMhgC,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAGlEgF,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAlBjC,SAoBGZ,EACErkC,QAAO,SAACmjC,GAAD,OAAUA,EAAKmB,WAAauB,EAAI5lC,QACvCmsB,MAAK,SAACC,EAAGhQ,GAAJ,OAAWgQ,EAAEpsB,KAAOoc,EAAEpc,KAAO,GAAK,KACvCoD,KAAI,SAAC8/B,EAAM4C,GAAP,OACH,cAAC,GAAD,CAEExC,QAAwB,KAAduC,EAAS,IAAYC,EAAU,IAAI72B,WAC7CowB,UAAW6D,EAAKljC,KAEhB0/B,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAC/BrF,aAAcsD,GAAsBC,EAAKr0B,UAAW2b,IANtD,cACcqb,EADd,iBAC6BC,QAzBnC,cACcD,OAkChBzB,EACGjY,MAAK,SAACC,EAAGhQ,GAAJ,OAAWgQ,EAAEpsB,KAAOoc,EAAEpc,KAAO,GAAK,KACvCoD,KAAI,SAAC8/B,EAAM4C,GAAP,OACH,cAAC,GAAD,CAEExC,QAASwC,EAAU,GAAG72B,WACtBowB,UAAW6D,EAAKljC,KAEhB0/B,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAC/BrF,aAAcsD,GAAsBC,EAAKr0B,UAAW2b,IANtD,mBACmBsb,aCpT7BC,GAAmB,SACvB3C,EACAr6B,GAKGq6B,EAFuC,CAAEjc,KAAM,OAAQrU,OAAQ,CAAE/J,OAAMwF,YADtD,MAOTy3B,GAAgB,SAACplC,GAMvB,IAAD,UACI2N,EAAmE3N,EAAnE2N,YAAakO,EAAsD7b,EAAtD6b,SAAUoN,EAA4CjpB,EAA5CipB,QAASW,EAAmC5pB,EAAnC4pB,WAAY4Y,EAAuBxiC,EAAvBwiC,mBAC9C6C,EAAM,UAAGzb,EAAWvc,iBAAd,iBAAG,EAAuBM,UAA1B,iBAAG,EAAqChB,aAAxC,iBAAG,EAA6CkP,UAAhD,iBAAG,EAAwDuI,aAA3D,aAAG,EAAgE6E,GACzE+E,EAASqX,GAAkB,KACjC,OAAKrX,EAGH,eAAC,GAAD,CAEE0U,OAAM,eAAU/0B,EAAV,YAAyBsb,GAC/BwV,UACgB,UAAdzQ,EAAK7lB,KACD,kBACc,UAAd6lB,EAAK7lB,KACL,gBACc,cAAd6lB,EAAK7lB,KACL,YACA,OAENq2B,UACE,cAACmE,EAAA,KAAD,CACE/6B,KAAoB,UAAdomB,EAAK7lB,MAAkC,UAAd6lB,EAAK7lB,MAAkC,cAAd6lB,EAAK7lB,KAAuBm9B,IAAWC,IAC/FniC,KAAM,EACNlG,MAAM,OACNsoC,OAAsB,cAAdxX,EAAK7lB,MAAwB,GAAmB,UAAd6lB,EAAK7lB,KAAmB,GAAK,IAjB7E,UAqBiB,UAAd6lB,EAAK7lB,KACJ,cAAC,GAAD,CAEEu6B,OAAM,eAAU/0B,EAAV,eAA4Bsb,EAA5B,eACNwV,UAAW,UACXD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM69B,IAAyBriC,KAAM,EAAGlG,MAAM,SAC/D2hC,UACE,cAACkD,GAAA,EAAD,CACEn7B,QAAQ,WACRhL,OAAO,OACPwH,KAAK,QACL4+B,WAAY,CAAEz/B,MAAO,CAAEtH,QAAS,EAAGI,MAAO,KAC1C0nC,aAAc/U,EAAK7gB,GAAG,GAAG,GACzB20B,SAAU,SAACv4B,GACT,IAAMsE,EAAMM,WAAW5E,EAAE04B,OAAOJ,OAC5BjwB,MAAM/D,IAKT20B,EAJmD,CAClDjc,KAAM,iBACNrU,OAAQ,CAAErE,MAAKF,cAAakO,SAAU,EAAGoN,iBAjBnD,eACetb,EADf,eACiCsb,EADjC,gBAwBE,KACJ,cAAC,GAAD,CAEEyZ,OAAM,eAAU/0B,EAAV,YAAyBsb,EAAzB,WACNwV,UAAW,eACXD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO8wB,EAAKzrB,MAAM+Z,YAClBqjB,gBAAiB,SAACziC,GAKfslC,EAJuD,CACtDjc,KAAM,qBACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGoN,iBAX5D,eACetb,EADf,YAC8Bsb,EAD9B,YAkBA,cAAC,GAAD,CAEEyZ,OAAM,eAAU/0B,EAAV,YAAyBsb,EAAzB,gBACNwV,UAAW,eACXD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM89B,IAAatiC,KAAM,EAAGlG,MAAM,SACnD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO8wB,EAAKzrB,MAAMm1B,YAClBiI,gBAAiB,SAACziC,GAKfslC,EAJuD,CACtDjc,KAAM,qBACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGoN,iBAX5D,eACetb,EADf,YAC8Bsb,EAD9B,mBAjEF,eACeA,IAJC,MA4FP0c,GAAiB,SAAC3lC,GAKxB,IACG4pB,EAAqD5pB,EAArD4pB,WAAYgQ,EAAyC55B,EAAzC45B,WAAY4I,EAA6BxiC,EAA7BwiC,mBAAoBt3B,EAASlL,EAATkL,KAC9C9Q,EAAQ6M,cAFV,EAG8BvF,IAAMqI,UAAS,GAH7C,mBAGGk5B,EAHH,KAGcC,EAHd,KAKEC,EAAwD,CAC5D,CAAE/jC,KAAM,QAASgkC,KAAMwC,KACvB,CAAExmC,KAAM,WAAYgkC,KAAMyC,MAEtBzhB,EAIA,CACJ,CAAEhlB,KAAM,YAAa+I,KAAM,YAAas7B,SAAU,SAClD,CAAErkC,KAAM,aAAc+I,KAAM,QAASs7B,SAAU,SAC/C,CAAErkC,KAAM,WAAY+I,KAAM,QAASs7B,SAAU,UAGzCqC,EAAWlc,EAAWvc,UACzB7K,KAAI,SAAC8K,GAAD,OAAcA,EAASX,MAAMnK,KAAI,SAACmK,GAAD,OAAWA,EAAMyX,MAAMpiB,aAC5Doa,OACA0G,QAAO,SAAC+gB,EAAKC,GAAN,OAAcD,EAAMC,KAE9B,OACE,eAAC,IAAM5hC,SAAP,WACE,sBACEK,MAAO,CACLzH,SAAU,WACV4C,MAAO,GACPxC,OAAQ,GAJZ,UASG4qC,EAAW,EACV,qBAAKvjC,MAAO,CAAEgI,cAAe,GAA7B,SACE,eAACw5B,GAAA,EAAD,CAAmBlC,MAAO,MAAOmC,WAAS,EAACzhC,MAAO,CAAEvE,aAAc,KAAOoF,KAAK,QAA9E,UACE,cAAC6gC,GAAA,EAAD,CACE1hC,MAAO,CACL2hC,uBAAwB,GACxB7mC,cAAe,OACf8mC,oBAAqB,GACrBlmC,WAAqB,UAATiN,EAAmB9Q,EAAMK,QAAQC,UAAU0pC,MAAQ,QAEjE99B,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,UARjB,SAWE,cAACjzB,EAAA,EAAD,qBAEF,cAACs9B,GAAA,EAAD,CACEpC,MAAM,UACNt/B,MAAO,CACLs7B,wBAAyB,GACzBD,qBAAsB,GACtB3/B,WAAqB,aAATiN,EAAsB9Q,EAAMK,QAAQC,UAAU0pC,MAAQ,QAEpE99B,QAAS,WACG,OAAVszB,QAAU,IAAVA,KAAa,aARjB,uBAeF,KAEJ,sBACEr3B,MAAO,CAAEtE,WAAY7D,EAAMK,QAAQC,UAAU0pC,MAAOlmC,OAAQ,iBAAkBF,aAAc,GAAI/C,QAAS,GAD3G,UAGE,cAACoN,EAAA,EAAD,CACEjF,KAAK,QACLb,MAAO,CAAErE,OAAQ,iBAAkBtC,OAAQ,WAC3C0K,QAAS,kBAAM+9B,MAAM,aAHvB,SAKE,cAAC1B,EAAA,KAAD,CAAM/6B,KAAM08B,IAAYlhC,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,iBAEhE,cAACzxB,EAAA,EAAD,CACEjF,KAAK,QACLb,MAAO,CAAErE,OAAQ,iBAAkBtC,OAAQ,mBAC3C0K,QAAS,kBAAM48B,GAAa,SAACphC,GAAD,OAAcA,MAH5C,SAKE,cAAC6gC,EAAA,KAAD,CACE/6B,KAAMq7B,EAAYsB,IAA+BC,IACjDphC,KAAM,EACNlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,uBAKrC,cAAC2K,GAAA,EAAD,CAGEC,oBAAqB,cAAC/B,EAAA,KAAD,CAAM/6B,KAAM+8B,IAAavhC,KAAM,EAAGlG,MAAM,SAC7D0nC,kBAAmB,cAACjC,EAAA,KAAD,CAAM/6B,KAAMi9B,IAAczhC,KAAM,EAAGlG,MAAM,SAC5D4nC,eAAgB,qBAAKviC,MAAO,CAAElH,MAAO,MAGrC0pC,kBAAgB,EARlB,SAWY,aAAT75B,EACG0e,EAAWvc,UAAU7K,KAAI,SAAC8K,EAAUK,GAAX,OACvBL,EAASX,MAAMnK,KAAI,SAACmK,EAAOkP,GAAR,OACjBlP,EAAMyX,MAAM5hB,KAAI,SAACwrB,EAAM/E,GAAP,OACd,cAAC,GAAD,CAEEW,WAAYA,EACZ4Y,mBAAoBA,EACpB70B,YAAaA,EACbkO,SAAUA,EACVoN,QAASA,GANX,4BAC4Btb,EAD5B,kBACiDkO,EADjD,kBACmEoN,aAUvEga,EACFE,EAAU3gC,KAAI,SAACwiC,EAAKC,GAAN,OACZ,cAAC,GAAD,CAEEvC,OAAQuC,EAAO52B,WACfowB,UAAWuG,EAAI5lC,KACfo/B,UACE,qBACEj8B,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,IAPZ,SAUE,cAACwnC,EAAA,KAAD,CAAM/6B,KAAMo9B,EAAI5B,KAAMhgC,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAGlEgF,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAlBjC,SAoBGhgB,EACEjlB,QAAO,SAAC6uB,GAAD,OAAUA,EAAKyV,WAAauB,EAAI5lC,QACvCmsB,MAAK,SAACC,EAAGhQ,GAAJ,OAAWgQ,EAAEpsB,KAAOoc,EAAEpc,KAAO,GAAK,KACvCoD,KAAI,SAACwrB,EAAM/E,GAAP,OACH,cAAC,GAAD,CAEEyZ,QAAwB,KAAduC,EAAS,IAAYhc,EAAU,IAAI5a,WAC7CowB,UAAWzQ,EAAK5uB,KAEhB0/B,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAC/BrF,aAAc,WACZoG,GAAiB3C,EAAoBxU,EAAK7lB,MAChC,OAAVyxB,QAAU,IAAVA,KAAa,QARjB,cACcqL,EADd,iBAC6Bhc,QAzBnC,cACcgc,OAqChB7gB,EACGmH,MAAK,SAACC,EAAGhQ,GAAJ,OAAWgQ,EAAEpsB,KAAOoc,EAAEpc,KAAO,GAAK,KACvCoD,KAAI,SAACwrB,EAAM/E,GAAP,OACH,cAAC,GAAD,CAEEyZ,QAASzZ,EAAU,GAAG5a,WACtBowB,UAAWzQ,EAAK5uB,KAEhB0/B,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAC/BrF,aAAc,WACZoG,GAAiB3C,EAAoBxU,EAAK7lB,MAChC,OAAVyxB,QAAU,IAAVA,KAAa,QARjB,mBACmB3Q,a,8BC1PtB8c,GAAoB,SAAC/lC,GAI3B,IACG4pB,EAA+C5pB,EAA/C4pB,WAAYgQ,EAAmC55B,EAAnC45B,WAAY4I,EAAuBxiC,EAAvBwiC,mBAC1BpoC,EAAQ6M,cAFV,EAG8BvF,IAAMqI,UAAS,GAH7C,gCAI4BrI,IAAMqI,SAA6B,OAJ/D,mBAIGg3B,EAJH,KAIaiF,EAJb,KAUEC,EAAc,SAAChE,GACnB+D,EAAY,MACN/D,IAAkB,OAAVrI,QAAU,IAAVA,KAAaqI,KAG7B,OACE,eAAC,IAAM//B,SAAP,WACE,qBACEK,MAAO,CACLzH,SAAU,WACV4C,MAAO,GACPxC,OAAQ,GAJZ,SAoCE,sBAAKqH,MAAO,CAAEgI,cAAe,GAA7B,UACE,cAACF,EAAA,EAAD,CAEE9H,MAAO,CACLrE,OAAQ,iBACRF,aAAc,GACd/C,QAAS,EAEToC,cAAe,OACfY,WAAY7D,EAAMK,QAAQC,UAAU0pC,MACpC/oC,MAAO,OACP6B,MAAO9C,EAAMK,QAAQC,UAAUo/B,cAEjCxzB,QA5DU,SAAC4/B,GACnBF,EAAYE,EAAMC,gBA+CZ,SAcE,cAACx/B,EAAA,EAAD,wBAEF,eAAC,KAAD,CACEm6B,GAAG,YACHC,SAAUA,EACVqF,aAAW,EACXl7B,KAAMm7B,QAAQtF,GACdC,QAAS,kBAAMiF,OAAYlkC,IAC3Bk/B,aAAc,CACZC,SAAU,MACVC,WAAY,UAEd3iC,gBAAiB,CACf0iC,SAAU,SACVC,WAAY,UAZhB,UAeE,cAACmF,GAAA,EAAD,CAAUhgC,QAAS,kBAAM2/B,EAAY,eAArC,uBACA,cAACK,GAAA,EAAD,CAAUhgC,QAAS,kBAAM2/B,EAAY,UAArC,0BAMN,eAACxB,GAAA,EAAD,CAGEC,oBAAqB,cAAC/B,EAAA,KAAD,CAAM/6B,KAAM+8B,IAAavhC,KAAM,EAAGlG,MAAM,SAC7D0nC,kBAAmB,cAACjC,EAAA,KAAD,CAAM/6B,KAAMi9B,IAAczhC,KAAM,EAAGlG,MAAM,SAC5D4nC,eAAgB,qBAAKviC,MAAO,CAAElH,MAAO,MAGrC0pC,kBAAgB,EARlB,UAWE,eAAC,GAAD,CACErC,OAAO,IACPjE,UAAU,UACVD,UACE,qBACEj8B,MAAO,CACLtE,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCU,MAAO,GACPF,OAAQ,GACR+C,OAAQ,iBACRF,aAAc,EACdnD,YAAa,IAPjB,SAUE,cAAC8nC,EAAA,KAAD,CAAM/6B,KAAM2+B,IAAqBnjC,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAG7EgF,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAC/BnF,uBAAuB,KAlBzB,UAoBE,cAAC,GAAD,CACEyD,OAAO,KACPjE,UAAU,mBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM4+B,IAAUpjC,KAAM,EAAGlG,MAAM,SAChD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO0sB,EAAW1B,gBAClByX,gBAAiB,SAACziC,GAKhBslC,EAAmB,CACjBjc,KAAM,qBACNrU,OAAQ,CAAEhV,cAMlB4hC,QAAQ,SAEV,cAAC,GAAD,CACE4D,OAAO,KACPjE,UAAU,kBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM4+B,IAAUpjC,KAAM,EAAGlG,MAAM,SAChD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO0sB,EAAWhd,MAAMrK,MAAM+lB,UAC9BqX,gBAAiB,SAACziC,GAKfslC,EAJqD,CACpDjc,KAAM,mBACNrU,OAAQ,CAAEhV,MAAOA,QAOzB4hC,QAAQ,SAEV,cAAC,GAAD,CACE4D,OAAO,KACPjE,UAAU,oBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO0sB,EAAWhd,MAAMrK,MAAM+Z,YAC9BqjB,gBAAiB,SAACziC,GAKfslC,EAJuD,CACtDjc,KAAM,qBACNrU,OAAQ,CAAEhV,MAAOA,QAOzB4hC,QAAQ,SAEV,cAAC,GAAD,CACE4D,OAAO,KACPjE,UAAU,kBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM6+B,IAAerjC,KAAM,EAAGlG,MAAM,SACrD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO0sB,EAAWhd,MAAMrK,MAAMmN,UAC9BiwB,gBAAiB,SAACziC,GAKfslC,EAJqD,CACpDjc,KAAM,mBACNrU,OAAQ,CAAEhV,MAAOA,QAMzBA,MAAM,UACN4hC,QAAQ,SAEV,cAAC,GAAD,CACE4D,OAAO,KACPjE,UAAU,kBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM8+B,IAAStjC,KAAM,EAAGlG,MAAM,SAC/C2hC,UACE,cAAC8H,GAAA,EAAD,CACEC,QAAShd,EAAWxB,KAAKM,SACzBtlB,KAAK,QACLb,MAAO,CAAEtH,QAAS,EAAGI,MAAO,GAAIF,OAAQ,IACxC2mC,SAAU,WAKPU,EAJoD,CACnDjc,KAAM,kBACNrU,OAAQ,QAMhBhV,MAAM,UACN4hC,QAAQ,SAEV,cAAC,GAAD,CACE4D,OAAO,KACPjE,UAAU,kBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAM8+B,IAAStjC,KAAM,EAAGlG,MAAM,SAC/C2hC,UACE,cAAC8H,GAAA,EAAD,CACEC,QAAShd,EAAWxB,KAAKQ,SACzBxlB,KAAK,QACLb,MAAO,CAAEtH,QAAS,EAAGI,MAAO,GAAIF,OAAQ,IACxC2mC,SAAU,WAKPU,EAJoD,CACnDjc,KAAM,kBACNrU,OAAQ,QAMhBhV,MAAM,UACN4hC,QAAQ,SAEV,cAAC,GAAD,CACE4D,OAAO,KACPjE,UAAU,oBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAO0sB,EAAWxB,KAAK7lB,MAAM+Z,YAC7BqjB,gBAAiB,SAACziC,GAKfslC,EAJuD,CACtDjc,KAAM,qBACNrU,OAAQ,CAAEhV,MAAOA,QAMzBA,MAAM,UACN4hC,QAAQ,YAIXlV,EAAWvc,UAAU7K,KAAI,SAAC8K,EAAUK,GAAX,OACxB,eAAC,GAAD,CACEsxB,uBAAuB,KAEvByD,OAAM,cAAS,EAAI/0B,GACnB8wB,UAA2B,IAAhB9wB,EAAoB,YAApB,mBAA8CA,GACzDmxB,QAAS1kC,EAAMK,QAAQqN,QAAQs8B,MAC/B5F,UACE,qBACEj8B,MAAO,CACLtE,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCU,MAAO,GACPF,OAAQ,GACR+C,OAAQ,iBACRF,aAAc,EACdnD,YAAa,IAPjB,SAUE,cAAC8nC,EAAA,KAAD,CAAM/6B,KAAMi/B,IAAoBzjC,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAG5E+E,UACkB,IAAhBlxB,EACE,cAACtF,EAAA,EAAD,CACEjF,KAAK,QACLkD,QAAS,SAACiD,GACRA,EAAEq5B,iBAKDJ,EAJmD,CAClDjc,KAAM,iBACNrU,OAAQ,CAAEvE,kBANhB,SAWE,cAACg1B,EAAA,KAAD,CAAM/6B,KAAM6B,IAAUrG,KAAM,EAAGlG,MAAM,gBAErC6E,EAnCR,UAsCGuL,EAASX,MAAM,GAAGa,OAAOhL,KAAI,SAACiI,EAAOqR,GAAR,eAC5BtR,GAAiBC,GACf,cAAC,GAAD,CAEEmf,WAAYA,EACZ4Y,mBAAoBA,EACpB70B,YAAaA,EACbkO,SAAU,EACVC,SAAUA,GANZ,4BAC4BnO,EAD5B,UACiD,EADjD,kBAC4DmO,IAO1DpR,GAAaD,GACf,cAAC,IAAMvI,SAAP,UACE,cAAC,GAAD,CAEEwgC,OAAM,oBAAe/0B,EAAf,UAAoC,EAApC,kBAA+CmO,GACrD2iB,UAAWh0B,EAAMrL,KACjB0/B,QAAQ,OACRN,UACE,qBACEj8B,MAAO,CACLtE,WAAY7D,EAAMK,QAAQqN,QAAQnN,KAClCU,MAAO,GACPF,OAAQ,GACR+C,OAAQ,iBACRF,aAAc,EACdnD,YAAa,IAPjB,SAUE,cAAC8nC,EAAA,KAAD,CAAM/6B,KAAMoE,IAAc5I,KAAM,OAAQlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAG3E+E,UACkB,IAAhBlxB,GAAkC,IAAbmO,EACnB,cAACzT,EAAA,EAAD,CACEjF,KAAK,QACLkD,QAAS,SAACiD,GACRA,EAAEq5B,iBAKDJ,EAJgD,CAC/Cjc,KAAM,cACNrU,OAAQ,CAAEvE,cAAakO,SAAU,EAAGC,eAN1C,SAWE,cAAC6mB,EAAA,KAAD,CAAM/6B,KAAM6B,IAAUrG,KAAM,EAAGlG,MAAM,gBAErC6E,EAlCR,SAqCuB,cAApB0I,EAAM+a,KAAKrd,KACV,cAAC,GAAD,CACEu6B,OAAM,UAAK,EAAI/0B,EAAT,cAA0BmO,GAChC2iB,UAAU,oBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAK,UAAE0sB,EAAWvc,UAAUM,GAAahB,MAAM,GAAGa,OAAOsO,GAAUvZ,aAA9D,iBAAE,EAAmE+Z,mBAArE,aAAE,EAAiF,GACxFqjB,gBAAiB,SAACziC,GAKfslC,EAJ4D,CAC3Djc,KAAM,0BACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGC,mBAStC,gBAApBrR,EAAM+a,KAAKrd,KACb,eAAC,IAAMjG,SAAP,WACE,cAAC,GAAD,CACEwgC,OAAM,UAAK,EAAI/0B,EAAT,cAA0BmO,GAChC2iB,UAAU,kBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAOuN,EAAMlI,MAAMkP,cACnBkuB,gBAAiB,SAACziC,GAKfslC,EAJ0D,CACzDjc,KAAM,wBACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGC,mBAS5D,cAAC,GAAD,CACE4mB,OAAM,UAAK,EAAI/0B,EAAT,cAA0BmO,GAChC2iB,UAAU,oBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAOuN,EAAMlI,MAAMmP,gBACnBiuB,gBAAiB,SAACziC,GAKfslC,EAJ4D,CAC3Djc,KAAM,0BACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGC,mBAS5D,cAAC,GAAD,CACE4mB,OAAM,UAAK,EAAI/0B,EAAT,cAA0BmO,GAChC2iB,UAAU,sBACVD,UAAW,cAACmE,EAAA,KAAD,CAAM/6B,KAAMi7B,IAAgBz/B,KAAM,EAAGlG,MAAM,SACtD2hC,UACE,cAAC,GAAD,CACE3hC,MAAOuN,EAAMlI,MAAM4O,kBACnBwuB,gBAAiB,SAACziC,GAKfslC,EAJ8D,CAC7Djc,KAAM,4BACNrU,OAAQ,CAAEhV,MAAOA,EAAOyQ,cAAakO,SAAU,EAAGC,sBAU5D,MArHN,oBACoBnO,EADpB,UACyC,EADzC,kBACoDmO,MAuHpD,QAGLxO,EAASX,MAAM,GAAGyX,MAAMpiB,OAAS,EAChC,cAAC,GAAD,CAEE0gC,OAAM,gBAAW/0B,EAAX,OACN6wB,UACE,qBACEj8B,MAAO,CACLtE,WAAY7D,EAAMK,QAAQqN,QAAQnN,KAClCU,MAAO,GACPF,OAAQ,GACR+C,OAAQ,iBACRF,aAAc,EACdnD,YAAa,IAPjB,SAUE,cAAC8nC,EAAA,KAAD,CAAM/6B,KAAMqyB,IAAgB72B,KAAM,OAAQlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAG7E2E,UAAU,QACVK,QAAQ,OAlBV,SAoBGxxB,EAASX,MAAM,GAAGyX,MAAM5hB,KAAI,SAACwrB,EAAM/E,GAAP,OAC3B,cAAC,GAAD,CAEEW,WAAYA,EACZ4Y,mBAAoBA,EACpB70B,YAAaA,EACbkO,SAAU,EACVoN,QAASA,GANX,4BAC4Btb,EAD5B,UACiD,EADjD,iBAC2Dsb,QAtB/D,gBACgBtb,EADhB,QA+BE,OA7MN,cAEcA,cC3TXm5B,GAAmB,SAAC9mC,GAIIA,EAA3B4pB,WAA2B5pB,EAAf45B,WAEJzyB,YAAc,qBAHzB,IAIC/M,EAAQ6M,cAEd,OACE,cAAC,IAAM/E,SAAP,UAGE,eAACoF,GAAA,EAAD,WACE,eAACG,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,aAFX,UAME,eAACqB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,GACRL,SAAU,WACV0B,IAAK,GATT,UAYE,cAAC,IAAD,CACEoL,KAAMm/B,IACN3jC,KAAM,EACNlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,aAC/Bv3B,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGD,KAAM,GAC7CipC,OAAQ,IAEV,cAAC,IAAD,CACE59B,KAAMmE,IACN3I,KAAM,GACNlG,MAAO,OACPqF,MAAO,CAAEzH,SAAU,WAAYiD,OAAQ,EAAGL,MAAO,QAGrD,cAACq8B,GAAA,EAAD,CACEjyB,QAAQ,uBACRkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,sBAGpD,eAACuK,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,aAFX,UAME,eAACqB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCk/B,SAAU,GACV1+B,OAAQ,GACRL,SAAU,WACV0B,IAAK,GATT,UAYE,cAAC,IAAD,CACEoL,KAAMm/B,IACN3jC,KAAM,EACNlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,aAC/Bv3B,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGD,KAAM,GAC7CipC,OAAQ,IAEV,cAAC,IAAD,CACE59B,KAAMqyB,IACN72B,KAAM,GACNlG,MAAO,OACPqF,MAAO,CAAEzH,SAAU,WAAYiD,OAAQ,EAAGL,MAAO,QAGrD,cAACq8B,GAAA,EAAD,CAAcjyB,QAAQ,kBAAkBkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,sBAE1F,eAACuK,GAAA,EAAD,CACEC,QAAM,EACNpB,QAAS,aAFX,UAME,cAACqB,GAAA,EAAD,CACEpF,MAAO,CACLrE,OAAQ,iBACRF,aAAc,EACdnD,YAAa,GACboD,WAAY7D,EAAMK,QAAQC,UAAUC,KACpCU,MAAO,GACPF,OAAQ,IAPZ,SAUE,cAAC,IAAD,CAAMyM,KAAMsyB,IAAS92B,KAAM,EAAGlG,MAAO9C,EAAMK,QAAQC,UAAUo/B,iBAE/D,cAACC,GAAA,EAAD,CACEjyB,QAAQ,8CACRkyB,uBAAwB,CAAEpzB,QAAS,KAAM1J,MAAO,4BClGtD8G,GAAY7J,aAAW,SAACC,GAAD,OAC3BmjC,aAAa,CACXyJ,MAAO,CACLC,UAAW,MACX/oC,OAAQ,iBACRimC,oBAAqB,GACrBvG,qBAAsB,IAExBsJ,aAAc,CACZD,UAAW,MACX/oC,OAAQ,iBACR2/B,wBAAyB,GACzBD,qBAAsB,SAgBfuJ,GAAc,SAACnnC,GAMrB,IACGghC,EAA8DhhC,EAA9DghC,QAAS91B,EAAqDlL,EAArDkL,KAAM0e,EAA+C5pB,EAA/C4pB,WAAYgQ,EAAmC55B,EAAnC45B,WAAY4I,EAAuBxiC,EAAvBwiC,mBACzCpoC,EAAQ6M,cACRmgC,EAAUjgC,YAAc,qBACxB1B,EAAUzB,KAEhB,OACE,eAACqjC,GAAA,EAAD,CACEC,OAAUF,EAAU,OAAS,SAC7Bl8B,OAAQA,EACRzF,QAAS,CAAEuhC,MAASI,EAAU3hC,EAAQyhC,aAAezhC,EAAQuhC,OAC7DO,WAAY,CAAEC,cAAc,GAJ9B,UAME,qBAAKjlC,MAAO,CAAEtE,WAAY7D,EAAMK,QAAQqN,QAAQnN,KAAMuC,MAAO9C,EAAMK,QAAQqN,QAAQgyB,aAAc7+B,QAAS,IAA1G,SACE,eAACmmC,GAAA,EAAD,CAAM3B,WAAS,EAACrjC,WAAW,SAASklC,QAAQ,SAA5C,UACE,cAACF,GAAA,EAAD,CAAMze,MAAI,EAAV,SACE,cAAChc,EAAA,EAAD,CAAYY,UAAU,MAAMX,QAAQ,KAApC,SACY,YAATsE,EACG,cACS,kBAATA,EACA,iBACS,eAATA,EACA,gBACS,aAATA,EACA,YACS,UAATA,EACA,WACS,aAATA,EACA,WACA,iBAGR,cAACk2B,GAAA,EAAD,CAAMze,MAAI,EAAC8e,IAAE,IACb,cAACL,GAAA,EAAD,CAAMze,MAAI,EAAV,SACE,sBAAKpgB,MAAO,CAAEpH,OAAQ,UAAtB,UACK+P,GAAiB,SAATA,EACT,cAAC7C,EAAA,EAAD,CACEjF,KAAK,QACLkD,QAAS,WACPszB,EAAW,SAHf,SAME,cAAC,IAAD,CAAMhyB,KAAM6/B,IAASrkC,KAAM,KAAMlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,iBAE9D,KAEJ,cAACzxB,EAAA,EAAD,CACEjF,KAAK,QACLkD,QAAS,aAFX,SAME,cAAC,IAAD,CAAMsB,KAAM8/B,IAAetkC,KAAM,KAAMlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,iBAEtE,cAACzxB,EAAA,EAAD,CACEjF,KAAK,QACLkD,QAAS,WACA,OAAP06B,QAAO,IAAPA,QAHJ,SAME,cAAC,IAAD,CAAMp5B,KAAM6B,IAAUrG,KAAM,KAAMlG,MAAO9C,EAAMK,QAAQqN,QAAQgyB,2BAMzE,qBAAKv3B,MAAO,CAAEtH,QAAS,IAAvB,SACY,SAATiQ,EACC,cAAC,GAAD,CAAe0e,WAAYA,EAAYgQ,WAAYA,IACxC,eAAT1uB,GAAkC,kBAATA,EAC3B,cAAC,GAAD,CACE0e,WAAYA,EACZgQ,WAAYA,EACZ1uB,KAAMA,EACNs3B,mBAAoBA,IAEX,UAATt3B,GAA6B,aAATA,EACtB,cAAC,GAAD,CACE0e,WAAYA,EACZ4Y,mBAAoBA,EACpB5I,WAAYA,EACZ1uB,KAAMA,IAEG,aAATA,EACF,cAAC,GAAD,CAAmB0e,WAAYA,EAAY4Y,mBAAoBA,EAAoB5I,WAAYA,IACpF,YAAT1uB,EACF,cAAC,GAAD,CAAkB0e,WAAYA,EAAYgQ,WAAYA,IACpD,WC1HN+N,GAAM,IAAIC,KAEHC,GAAS,SAAC7nC,GAAwB,IAAD,sBAEpC3E,EAA8C2E,EAA9C3E,MAAOF,EAAuC6E,EAAvC7E,OAAQ2oB,EAA+B9jB,EAA/B8jB,UAAkB2N,GAAazxB,EAApBuC,MAAoBvC,EAAbyxB,UAGnCqW,EAA0CpmC,IAAMC,OAAO,MALjB,EAMED,IAAMqI,SAElD,MAR0C,mBAMpBg+B,GANoB,aASArmC,IAAMqI,SAA6B,MATnC,mBASrCi+B,EATqC,KASrBC,EATqB,OAUH9W,GAAc2W,EAAc,CAAEzsC,QAAOF,SAAQs2B,aAV1C,mBAUrC7H,EAVqC,KAUzB4Y,EAVyB,KAW7B5Y,EAAWhd,MAAMihB,mBAXY,MAYDjE,EAAWjd,MAA9CD,EAZoC,EAYpCA,WAAYmD,EAZwB,EAYxBA,mBAZwB,EAaC+Z,EAAWhd,MAAhDC,EAboC,EAapCA,YAAaC,EAbuB,EAavBA,oBACfP,EAAiBqd,EAAWpd,cAAcnR,MAAQ,EAClDoR,EAAkBmd,EAAWpd,cAAcrR,OAAS,EACpD+sC,EAAkBte,EAAWpd,cAAckhB,KAMjDhsB,IAAMG,WAAU,WACd,GAAKqmC,EAAL,CACA,IAAMC,EAAWR,GAAIS,QAAQz9B,IAE7B,GADcw9B,EAASrkB,IAIhB,GAAoC,IAAhC8F,EAAWvc,UAAUrL,OAAc,CAC5C,IAAM4D,EAA2C,CAC/C2gB,KAAM,cACNrU,OAAQ,CAAE4U,YAAahD,EAAU,GAAG/Y,KAAMgZ,UAAWD,EAAU,GAAG1kB,KAAMqN,oBAEzE+1B,EAAwE58B,SAPzEy+B,MAAM,sDACNx7B,QAAQC,IAAI,0CAA2C,QAASgb,EAAW,UAAWqkB,EAASE,WAYhG,CAACvkB,EAAW8F,EAAWvc,UAAUrL,OAAQyK,EAAiBy7B,EAAiBr7B,IAC9E,IAAMP,EAAYsd,EAElB/gB,QAAQC,IAAIwD,GACZ,IAAMg8B,EAAQh8B,EAAUM,MAAMyjB,WAC9B,OAEE,aADA,CACC,IAAMnuB,SAAP,UACE,eAACqmC,EAAA,EAAD,CAAenuC,MAAO4+B,GAAtB,UACE,qBACE4H,IAAKkH,EACLvlC,MAAO,CACL/G,UAAW,aAMX0C,OAAQ,gBACRD,WAAYqO,EAAU4b,iBAV1B,SAcE,eAAC,KAAD,CACE7sB,MAAOuuB,EAAWpd,cAAcnR,MAChCF,OAAQyuB,EAAWpd,cAAcrR,OACjCqtC,WAAW,EAHb,UAQE,eAAC,KAAD,WASG,KAAKl8B,EAAUe,UAAY,cAAC,GAAD,CAAcf,UAAWA,IAAgB,KACpEA,EAAUe,UAAU7K,KAAI,SAAC8K,EAAUK,GAAX,OACvBL,EAASX,MAAMnK,KAAI,SAACsrB,EAAaC,GAAd,OACjBD,EAAYtgB,OAAOhL,KAAI,SAACiI,EAAOqR,GAC7B,IAAM2sB,EAAan8B,EAAUe,UAAUM,GAAahB,MAAM,GAAGa,OAAOsO,GAE9D4sB,EAAgBl+B,GAAiBi+B,GAAcA,EAAWx6B,UAAU9F,KAAO,KACjF,GAAIqC,GAAiBi+B,IAAeA,EAAW19B,KAAK/I,OAAS,EAAG,CAC9D,IAAM2mC,EAAiBF,EAAW19B,KAAK09B,EAAW19B,KAAK/I,OAAS,GAAGiK,OAEnE,GAAsB,SAAlBy8B,EACF,OAAOC,EAAenmC,KAAI,SAAComC,EAAqBC,GAAtB,OACxB,cAAC,GAAD,CACEv8B,UAAWA,EACXqB,YAAaA,EACbkO,SAAU,EACVC,SAAUA,EAEVE,aAAc6sB,GANhB,UAKUl7B,EALV,YAKyBmO,EALzB,YAKqC+sB,OAIlC,GAAsB,SAAlBH,EACT,OACE,cAAC,GAAD,CACEp8B,UAAWA,EACXqB,YAAaA,EACbkO,SAAU,EACVC,SAAUA,GAJZ,UAKUnO,EALV,YAKyBmO,IAK/B,OAAO,cAKVxP,EAAUW,QAAQC,KAAKsjB,UAAYlkB,EAAUwb,KAAKE,MAAMhmB,QAAU,EACnE,cAAC,KAAD,CACEsM,EAAG,EACHC,EAAG,EACHC,OAAQ,CACNlC,EAAUwb,KAAKE,MAAM,GAAG,GACxB1b,EAAUwb,KAAKE,MAAM,GAAG,IACvB,UAAC1b,EAAUW,eAAX,aAAC,EAAmBQ,aAAaP,KAAKoB,GACnChC,EAAUwB,QAAQW,OAAOnC,EAAUW,QAAQQ,aAAaP,KAAKoB,GAC7DhC,EAAUW,QAAQC,KAAKC,GAAG,IAC7B,UAACb,EAAUW,eAAX,iBAAC,EAAmBQ,oBAApB,iBAAC,EAAiCP,KAAKQ,oBAAvC,iBAAC,EAAqD,UAAtD,aAAC,EAAyDX,UAA3D,UACIT,EAAUW,eADd,iBACI,EAAmBQ,oBADvB,aACI,EAAiCP,KAAKQ,aAAa,GAAGX,SACtDT,EAAUW,QAAQC,KAAKC,GAAG,IAEhCwB,OAAQ,MACRC,YAAa,IAEb,KAEH,KAAKtC,EAAUe,UACZf,EAAUe,UAAU,GAAGV,MAAM,GAAGyX,MAAM5hB,KAAI,SAACwrB,EAAM/E,GAC/C,MAAkB,cAAd+E,EAAK7lB,MAA2C,IAAnB6lB,EAAK7gB,GAAGnL,OAErC,cAAC,GAAD,CACEi2B,KAAK,YACLC,YAAa5rB,EAAUe,UAAU,GAAG7Q,IACpC27B,eAAgB7rB,EAAUe,UAAU,GAAGtP,OACvCiqB,MAAO,CACL,CAAC1b,EAAUwB,QAAQW,OAAOuf,EAAK7gB,GAAG,GAAG,IAAKb,EAAUwB,QAAQiD,OAAOid,EAAK7gB,GAAG,GAAG,GAAI,EAAG,IACrF,CAACb,EAAUwB,QAAQW,OAAOuf,EAAK7gB,GAAG,GAAG,IAAKb,EAAUwB,QAAQiD,OAAOid,EAAK7gB,GAAG,GAAG,GAAI,EAAG,KAEvF5K,MAAO,CAAEm1B,YAAa1J,EAAKzrB,MAAMm1B,YAAapb,YAAa0R,EAAKzrB,MAAM+Z,eAGrD,UAAd0R,EAAK7lB,MAAuC,IAAnB6lB,EAAK7gB,GAAGnL,OAEtC,cAAC,GAAD,CACEi2B,KAAK,eACLC,YAAa5rB,EAAUe,UAAU,GAAG7Q,IACpC27B,eAAgB7rB,EAAUe,UAAU,GAAGtP,OACvCiqB,MAAO,CACL,CAAC1b,EAAUwB,QAAQW,OAAOuf,EAAK7gB,GAAG,GAAG,IAAKb,EAAUwB,QAAQiD,OAAOid,EAAK7gB,GAAG,GAAG,GAAI,EAAG,KAEvF5K,MAAO,CAAEm1B,YAAa1J,EAAKzrB,MAAMm1B,YAAapb,YAAa0R,EAAKzrB,MAAM+Z,eAGrD,UAAd0R,EAAK7lB,MAAuC,IAAnB6lB,EAAK7gB,GAAGnL,OAEtC,cAAC,GAAD,CACEi2B,KAAK,kBACLvM,UAAW,EACXC,QAASrf,EAAUE,cAAcnR,MAAQiR,EAAUK,MAAMD,WACzDsb,MAAO,CACL,CAAC1b,EAAUwB,QAAQW,OAAOuf,EAAK7gB,GAAG,GAAG,IAAKb,EAAUwB,QAAQiD,OAAOid,EAAK7gB,GAAG,GAAG,GAAI,EAAG,KAEvF5K,MAAO,CAAEm1B,YAAa1J,EAAKzrB,MAAMm1B,YAAapb,YAAa0R,EAAKzrB,MAAM+Z,eAGhE,QAEd,QAIN,eAAC,KAAD,WACE,cAAC,KAAD,CACEhO,EAAG,GACHC,EAAG9B,EAAkBI,EAAc,GACnCxR,MAAOkR,EACPpR,OAAQ0R,EACRyC,KAAMsa,EAAWhd,MAAMrK,MAAM+lB,UAC7B3Z,OAAQib,EAAWhd,MAAMrK,MAAM+Z,YAC/B1N,YAAa,IAEdtC,EAAUe,UAAU7K,KAAI,SAAC8K,EAAUK,GAAX,OACvB,eAAC,IAAMzL,SAAP,WACE,cAAC,KAAD,CAEEoM,EAAG/B,EAAiBG,EAAa,GACjC6B,EAAGjB,EAAS9Q,IAAM,GAClBnB,MAAOqR,EACPvR,OAAQmS,EAASvP,OAASuP,EAAS9Q,IAEnCmS,OAAQib,EAAWhd,MAAMrK,MAAM+Z,YAC/B1N,YAAa,IAEf,cAAC,KAAD,CAEEN,EAAG,GACHC,EAAGjB,EAAS9Q,IAAM,GAClBnB,MAAOkR,EAAiBG,EACxBvR,OAAQmS,EAASvP,OAASuP,EAAS9Q,IACnCmS,OAAQib,EAAWhd,MAAMrK,MAAM+Z,YAC/B1N,YAAa,MAlBIjB,SAwBzB,cAAC,KAAD,UACG26B,EAAM9lC,KAAI,SAACsmC,EAAWC,GACrB,OACE,eAAC,IAAM7mC,SAAP,WACE,cAAC,KAAD,CACEoM,EAAGw6B,EAAUx6B,EACbC,EAAGqb,EAAWpd,cAAcrR,OAAS,EAAI0R,EAAc,GACvD2B,OAAQ,CAAC,EAAG,EAAG,EAAG1B,GAClB6B,OAAQib,EAAWhd,MAAMrK,MAAM+Z,YAC/B1N,YAAa,IAEZgb,EAAWxB,KAAKM,SACjB,cAAC,KAAD,CACEpa,EAAGw6B,EAAUx6B,EACbC,EAAG,GACHC,OAAQ,CAAC,EAAG,EAAG,EAAGob,EAAWpd,cAAcrR,OAAS,EAAI0R,EAAc,IACtE8B,OAAQib,EAAWxB,KAAK7lB,MAAM+Z,YAC9B1N,YAAa,IAEb,KACJ,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GAEnB,IAAMC,EAAMF,EAAQG,SACpBD,EAAIO,KAAOqa,EAAWhd,MAAMrK,MAAMnF,SAAW,MAAQwsB,EAAWhd,MAAMrK,MAAMiN,SAC5ER,EAAIS,UAAYma,EAAWhd,MAAMrK,MAAMmN,UACvCV,EAAInR,UAAY,SAChBmR,EAAIW,aAAe,MACnBX,EAAIY,SACFk5B,EAAU74B,WACV64B,EAAUx6B,EACVsb,EAAWpd,cAAcrR,OAAS,EAAI0R,EAAc,GAAM,GAAK,GAGjEiC,EAAQO,gBAAgBN,QA/BTg6B,QA0C3B,cAAC,KAAD,UACGz8B,EAAUe,UAAU7K,KAAI,SAAC8K,EAAUK,GAClC,OAAOL,EAASX,MAAMnK,KAAI,SAACsrB,EAAaC,GAKtC,OAJmBD,EAAYtJ,UAIbhiB,KAAI,SAACwmC,EAAWC,GAChC,OACE,eAAC,IAAM/mC,SAAP,WACE,cAAC,KAAD,CACEoM,EAAGsb,EAAWpd,cAAcnR,MAAQ,EAAIqR,EAAa,GACrD6B,EAAGy6B,EAAUxe,KAAO,GACpBhc,OAAQ,CAAC,EAAG,EAAGqB,EAAoB,GACnClB,OAAQib,EAAWhd,MAAMrK,MAAM+Z,YAC/B1N,YAAa,IAEZgb,EAAWxB,KAAKQ,SACjB,cAAC,KAAD,CACEta,EAAG,GACHC,EAAGy6B,EAAUxe,KAAO,GACpBhc,OAAQ,CAAC,EAAG,EAAGob,EAAWpd,cAAcnR,MAAQ,EAAI,GAAK,GACzDsT,OAAQib,EAAWxB,KAAK7lB,MAAM+Z,YAC9B1N,YAAa,IAEb,KACJ,cAAC,KAAD,CACEC,UAAW,SAACC,EAASC,GAEnB,IAAMC,EAAMF,EAAQG,SACpBD,EAAIO,KAAOqa,EAAWjd,MAAMpK,MAAMnF,SAAW,MAAQwsB,EAAWjd,MAAMpK,MAAMiN,SAC5ER,EAAIS,UAAYma,EAAWjd,MAAMpK,MAAMmN,UACvCV,EAAInR,UAAY,OAChBmR,EAAIW,aAAe,SACnBX,EAAIY,SACFo5B,EAAUtiC,MACVkjB,EAAWpd,cAAcnR,MAAQ,EAAIqR,EAAamD,EAAqB,EAAI,GAC3Em5B,EAAUxe,MAGZ1b,EAAQO,gBAAgBN,QA/BTi6B,EAAUtiC,kBAyCzC,cAAC,KAAD,WACI,UAACkjB,EAAW3c,QAAQC,YAApB,aAAC,EAAyBC,KAAQyc,EAAW3c,QAAQsjB,WACrD,cAAC,GAAD,CAAiBjkB,UAAWA,IAC1B,YAWPA,EAAUM,MAAMmD,MAAQu4B,EAAMtmC,OAAS,EACtCsK,EAAUe,UAAU7K,KAAI,SAAC8K,EAAUK,GAAX,OACtBL,EAASX,MAAM,GAAGa,OAAOhL,KAAI,SAACiI,EAAOqR,GAAc,IAAD,sBAC1C1c,EACJoL,GAAiBC,IAAUA,EAAMwD,UAAUiE,OAAOlQ,OAAS,EAA3D,UACOyI,EAAMwD,UAAU7O,KADvB,YAC+BqL,EAAMwD,UAAUiE,OAAO,GAAGrE,IADzD,KAEIrD,GAAiBC,IAA4C,IAAlCA,EAAMwD,UAAUiE,OAAOlQ,OAAlD,UACGyI,EAAMwD,UAAU7O,MACnBqL,EAAMrL,KACZ,IAAKqL,EAAMob,SAASE,KAAM,OAAO,KAEjC,IAAMmjB,GACH58B,EAAUW,QAAQsjB,YACnB5iB,KAAW,UAAKrB,EAAUW,eAAf,iBAAK,EAAmBQ,oBAAxB,aAAK,EAAiCP,KAAKS,eACtD,UAAArB,EAAUW,eAAV,mBAAmBQ,oBAAnB,mBAAiCP,KAAKQ,oBAAtC,mBAAqD,UAArD,eAAyDoO,YAAaA,EAFrE,UAGGxP,EAAUW,eAHb,iBAGG,EAAmBQ,oBAHtB,iBAGG,EAAiCP,YAHpC,iBAGG,EAAuCQ,oBAH1C,iBAGG,EAAsD,UAHzD,aAGG,EAA0D3C,KAC1DuB,EAAUW,QAAQsjB,YAEwB,OAA1CjkB,EAAUW,QAAQQ,aAAaP,KAAKoB,EACpC7D,EAAMM,KAAKuB,EAAUW,QAAQQ,aAAaP,KAAKoB,GAC/C7D,EAAMob,SAASE,KAAKhb,OAASN,EAAMob,SAASE,KAAKhb,KAEvD,OACE,cAAC,GAAD,CAEEzE,QAAS,kBAAMyhC,EAAmB,aAClC3oC,KAAMA,EACNoM,QAAS09B,EACTr9B,SACErB,GAAiBC,SAA+C1I,IAArC0I,EAAMwD,UAAUC,QAAQrC,SAC/CpB,EAAMwD,UAAUC,QAAQrC,SACxBpB,EAAMoB,SAEZrP,IAAK8Q,EAAS9Q,IAAiB,GAAXsf,GAVtB,UACUnO,EADV,YACyBmO,UAc/B,KACJ,qBAAKvZ,MAAO,CAAEzH,SAAU,WAAY0B,KAAK,oBAAC8P,EAAUe,iBAAX,iBAAC,EAAsB,UAAvB,aAAC,EAA0BtP,cAA3B,QAAqC,GAAK,GAAK,GAAIxB,KAAM,IAAlG,SACE,cAAC8N,EAAA,EAAD,CACEnN,MAAM,UACN0J,QAAQ,YACRrE,MAAO,CAAElH,MAAO,GAAIF,OAAQ,GAAIkC,cAAe,OAAQW,aAAc,EAAGb,QAAS,IACjFmJ,QAAS,kBAAM2hC,EAAkB,SAJnC,SAME,qBAAK1lC,MAAO,CAAEzH,SAAU,WAAY0B,IAAK,EAAGrB,OAAQ,IAApD,SACE,cAAC,IAAD,CAAMyM,KAAMgC,IAASxG,KAAK,OAAOlG,MAAM,eAK7C,cAAC,GAAD,CACEgO,KAAM88B,EACNhH,QAAS,WACPiH,EAAkB,OAEpBrO,WAAY,SAACqI,GAAD,OAAYgG,EAAkBhG,IAC1CrY,WAAYtd,EACZk2B,mBAAoBA,U,oBCzY9B,IAAM2G,GAAYC,aAAU,YAkBrB,IAAMC,GAAY,WAAO,IAAD,EACL3nC,IAAMqI,SAAc,MADf,mBACtBu/B,EADsB,KAChBC,EADgB,OAEX7nC,IAAMqI,SAAS,KAFJ,6BAO7B,OAJArI,IAAMG,WAAU,WAlBI2nC,MAAM,gFACvBC,MAAK,SAACC,GACL,OAAOA,EAASjM,UAEjBgM,MAAK,SAAC1+B,GAEL,OAAO4+B,aAAS5+B,GArBH6+B,EAqBmBT,GApB7B,SAAUU,GAQf,OAPAA,EAAE5+B,KAAO2+B,EAAMC,EAAE5+B,MACjB4+B,EAAE3+B,MAAQ2+B,EAAE3+B,KACZ2+B,EAAE1+B,MAAQ0+B,EAAE1+B,KACZ0+B,EAAEz+B,KAAOy+B,EAAEz+B,IACXy+B,EAAEx+B,OAASw+B,EAAEx+B,MACbw+B,EAAErtB,QAAUqtB,EAAErtB,OAEPqtB,KATX,IAAmBD,KAuBdH,MAAK,SAACx3B,GAEL,OAAOA,KASCw3B,MAAK,SAACx3B,GAAD,OAASs3B,EAAQt3B,QAC/B,IAEEq3B,GACLzgC,QAAQC,IAAI,QAAS,CAAC,CAAEiC,KAAMu+B,EAAMlqC,KAAM,eAGxC,cAAC,GAAD,CACE0kB,UAAW,CAAC,CAAE/Y,KAAMu+B,EAAmClqC,KAAM,cAC7DqyB,SAAS,aACTlvB,MAAM,UAPQ,MCpCdunC,GAAS,CACb,CACEnsC,QAAS,SAACqC,GACR,OAAO,cAAC,GAAD,eAAUA,KAEnB4H,KAAM,IACNmiC,OAAO,GAET,CACEpsC,QAAS,SAACqC,GACR,OAAO,cAAC,GAAD,eAAeA,KAExB4H,KAAM,SACNmiC,OAAO,IAIP3vC,GAAQ8+B,YAAe,CACzBz+B,QAAS,CACPqN,QAAS,CACPnN,KAAM,WAERD,UAAW,CACTC,KAAM,WAERwN,KAAM,SAERd,QAAS,SAACslB,GAAD,gBAAe,GAAMA,EAArB,QACTqd,UAAW,CAAEC,eAAgB,CAAE,UAAW,CAAEC,KAAM,CAAC1uC,UAAW,mBAGhEpB,GAAM++B,WAAWC,GAAK,CAAE/+B,WAAY,iCAAkCE,WAAY,IAAK6C,SAAU,OAAQK,WAAY,OACrHrD,GAAM++B,WAAWE,GAAK,CACpBh/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,SACVK,WAAY,OAEdrD,GAAM++B,WAAWG,GAAK,CACpBj/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,OACVK,WAAY,OAEdrD,GAAM++B,WAAWI,GAAK,CACpBl/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,UACVK,WAAY,OAEdrD,GAAM++B,WAAWK,GAAK,CACpBn/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,UACVK,WAAY,OAEdrD,GAAM++B,WAAWM,GAAK,CACpBp/B,WAAY,iCACZE,WAAY,IACZ6C,SAAU,UACVK,WAAY,OAEdrD,GAAM++B,WAAW9+B,WAAa,kCAC9BD,GAAQs/B,YAAoBt/B,IA4Bb+vC,OAxBf,WAAgB,IAAD,EACmBzoC,IAAMqI,UAAS,GADlC,mBACNqgC,EADM,KACIxhC,EADJ,KAEPyhC,EAAe,SAAC3gB,GACyB9gB,GAA5B,IAAb8gB,IAAkC,IAAbA,EAAgCA,GACvC0gB,IAEpB,OACE,cAAC7B,EAAA,EAAD,CAAenuC,MAAOA,GAAtB,SACE,cAAC,IAAD,CAAQkwC,SAAS,IAAjB,SACE,cAAC,IAAD,UACGR,GAAOtnC,KAAI,SAAC+nC,EAAOC,GAAR,OACV,cAAC,IAAD,CACET,OAASQ,EAAMR,OAAQQ,EAAMR,MAE7BniC,KAAM2iC,EAAM3iC,KACZqB,SAAU,cAACshC,EAAM5sC,QAAP,CAAegL,SAAUyhC,EAAUxhC,YAAayhC,KAFrDG,aC3EJC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.1c6519ed.chunk.js","sourcesContent":["import { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useSwiperGlobalStyles = makeStyles(\r\n  (theme: Theme) => ({\r\n    \"@global\": {\r\n      \"@font-face\": {\r\n        fontFamily: \"'swiper-icons'\",\r\n        src:\r\n          \"url('data:application/font-woff;charset=utf-8;base64, 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') format('woff')\",\r\n        fontWeight: \"400\",\r\n        fontStyle: \"normal\",\r\n      },\r\n      \":root\": {\r\n        \"--swiper-theme-color\": theme.palette.secondary.main,\r\n        \"--swiper-navigation-size\": \"44px\",\r\n      },\r\n      \".swiper-container\": {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        position: \"relative\",\r\n        overflow: \"hidden\",\r\n        listStyle: \"none\",\r\n        padding: \"0\",\r\n        zIndex: \"1\",\r\n        height: \"\",\r\n      },\r\n      \".swiper-container-vertical > .swiper-wrapper\": {\r\n        flexDirection: \"column\",\r\n      },\r\n      \".swiper-wrapper\": {\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        zIndex: \"1\",\r\n        display: \"flex\",\r\n        transitionProperty: \"transform\",\r\n        boxSizing: \"content-box\",\r\n      },\r\n      \".swiper-container-android .swiper-slide, .swiper-wrapper\": {\r\n        transform: \"translate3d(0px, 0, 0)\",\r\n      },\r\n      \".swiper-container-multirow > .swiper-wrapper\": {\r\n        flexWrap: \"wrap\",\r\n      },\r\n      \".swiper-container-multirow-column > .swiper-wrapper\": {\r\n        flexWrap: \"wrap\",\r\n        flexDirection: \"column\",\r\n      },\r\n      \".swiper-container-free-mode > .swiper-wrapper\": {\r\n        transitionTimingFunction: \"ease-out\",\r\n        margin: \"0 auto\",\r\n      },\r\n      \".swiper-container-pointer-events\": {\r\n        touchAction: \"pan-y\",\r\n      },\r\n      \".swiper-container-pointer-events.swiper-container-vertical\": {\r\n        touchAction: \"pan-x\",\r\n      },\r\n      \".swiper-slide\": {\r\n        flexShrink: \"0\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        transitionProperty: \"transform\",\r\n        maxWidth: \"100%\",\r\n        height: \"100%\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n      },\r\n      \".swiper-slide-invisible-blank\": {\r\n        visibility: \"hidden\",\r\n      },\r\n      \".swiper-container-autoheight, .swiper-container-autoheight .swiper-slide\": {\r\n        height: \"auto\",\r\n      },\r\n      \".swiper-container-autoheight .swiper-wrapper\": {\r\n        alignItems: \"flex-start\",\r\n        transitionProperty: \"transform, height\",\r\n      },\r\n      \".swiper-container-3d\": {\r\n        perspective: 1200,\r\n      },\r\n      \".swiper-container-3d .swiper-wrapper, .swiper-container-3d .swiper-slide, .swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom, .swiper-container-3d .swiper-cube-shadow\": {\r\n        transformStyle: \"preserve-3d\",\r\n      },\r\n      \".swiper-container-3d .swiper-slide-shadow-left, .swiper-container-3d .swiper-slide-shadow-right, .swiper-container-3d .swiper-slide-shadow-top, .swiper-container-3d .swiper-slide-shadow-bottom\": {\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        pointerEvents: \"none\",\r\n        zIndex: \"10\",\r\n      },\r\n      \".swiper-container-3d .swiper-slide-shadow-left\": {\r\n        backgroundImage: \"linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0))\",\r\n      },\r\n      \".swiper-container-3d .swiper-slide-shadow-right\": {\r\n        backgroundImage: \"linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0))\",\r\n      },\r\n      \".swiper-container-3d .swiper-slide-shadow-top\": {\r\n        backgroundImage: \"linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0))\",\r\n      },\r\n      \".swiper-container-3d .swiper-slide-shadow-bottom\": {\r\n        backgroundImage: \"linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0))\",\r\n      },\r\n      \".swiper-container-css-mode > .swiper-wrapper\": {\r\n        overflow: \"auto\",\r\n        scrollbarWidth: \"none\",\r\n        msOverflowStyle: \"none\",\r\n      },\r\n      \".swiper-container-css-mode > .swiper-wrapper::-webkit-scrollbar\": {\r\n        display: \"none\",\r\n      },\r\n      \".swiper-container-css-mode > .swiper-wrapper > .swiper-slide\": {\r\n        scrollSnapAlign: \"start start\",\r\n      },\r\n      \".swiper-container-horizontal.swiper-container-css-mode > .swiper-wrapper\": {\r\n        scrollSnapType: \"x mandatory\",\r\n      },\r\n      \".swiper-container-vertical.swiper-container-css-mode > .swiper-wrapper\": {\r\n        scrollSnapType: \"y mandatory\",\r\n      },\r\n      \".swiper-button-prev, .swiper-button-next\": {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        width: \"calc(var(--swiper-navigation-size) / 44 * 27)\",\r\n        height: \"var(--swiper-navigation-size)\",\r\n        marginTop: \"calc(-1 * var(--swiper-navigation-size) / 2)\",\r\n        zIndex: \"10\",\r\n        cursor: \"pointer\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"var(--swiper-navigation-color, var(--swiper-theme-color))\",\r\n      },\r\n      \".swiper-button-prev.swiper-button-disabled, .swiper-button-next.swiper-button-disabled\": {\r\n        opacity: \"0.35\",\r\n        cursor: \"auto\",\r\n        pointerEvents: \"none\",\r\n      },\r\n      \".swiper-button-prev:after, .swiper-button-next:after\": {\r\n        fontFamily: \"swiper-icons\",\r\n        fontSize: \"var(--swiper-navigation-size)\",\r\n        textTransform: \"none\",\r\n        letterSpacing: \"0\",\r\n        fallbacks: [\r\n          {\r\n            textTransform: \"none !important\",\r\n          },\r\n        ],\r\n        fontVariant: \"initial\",\r\n        lineHeight: \"1\",\r\n      },\r\n      \".swiper-button-prev, .swiper-container-rtl .swiper-button-next\": {\r\n        left: 10,\r\n        right: \"auto\",\r\n      },\r\n      \".swiper-button-prev:after, .swiper-container-rtl .swiper-button-next:after\": {\r\n        content: \"'prev'\",\r\n      },\r\n      \".swiper-button-next, .swiper-container-rtl .swiper-button-prev\": {\r\n        right: 10,\r\n        left: \"auto\",\r\n      },\r\n      \".swiper-button-next:after, .swiper-container-rtl .swiper-button-prev:after\": {\r\n        content: \"'next'\",\r\n      },\r\n      \".swiper-button-prev.swiper-button-white, .swiper-button-next.swiper-button-white\": {\r\n        swiperNavigationColor: \"#fff\",\r\n      },\r\n      \".swiper-button-prev.swiper-button-black, .swiper-button-next.swiper-button-black\": {\r\n        swiperNavigationColor: \"#000\",\r\n      },\r\n      \".swiper-button-lock\": {\r\n        display: \"none\",\r\n      },\r\n      \".swiper-pagination\": {\r\n        position: \"absolute\",\r\n        textAlign: \"center\",\r\n        transition: \"300ms opacity\",\r\n        transform: \"translate3d(0, 0, 0)\",\r\n        zIndex: \"10\",\r\n      },\r\n      \".swiper-pagination.swiper-pagination-hidden\": {\r\n        opacity: \"0\",\r\n      },\r\n      \".swiper-pagination-fraction, .swiper-pagination-custom, .swiper-container-horizontal > .swiper-pagination-bullets\": {\r\n        bottom: 10,\r\n        left: \"0\",\r\n        width: \"100%\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic\": {\r\n        overflow: \"hidden\",\r\n        fontSize: \"0\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet\": {\r\n        transform: \"scale(0.33)\",\r\n        position: \"relative\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active\": {\r\n        transform: \"scale(1)\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main\": {\r\n        transform: \"scale(1)\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev\": {\r\n        transform: \"scale(0.66)\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev\": {\r\n        transform: \"scale(0.33)\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next\": {\r\n        transform: \"scale(0.66)\",\r\n      },\r\n      \".swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next\": {\r\n        transform: \"scale(0.33)\",\r\n      },\r\n      \".swiper-pagination-bullet\": {\r\n        width: 8,\r\n        height: 8,\r\n        display: \"inline-block\",\r\n        borderRadius: \"50%\",\r\n        background: \"#000\",\r\n        opacity: \"0.2\",\r\n      },\r\n      \"button.swiper-pagination-bullet\": {\r\n        border: \"none\",\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        boxShadow: \"none\",\r\n        webkitAppearance: \"none\",\r\n        mozAppearance: \"none\",\r\n        appearance: \"none\",\r\n      },\r\n      \".swiper-pagination-clickable .swiper-pagination-bullet\": {\r\n        cursor: \"pointer\",\r\n      },\r\n      \".swiper-pagination-bullet-active\": {\r\n        opacity: \"1\",\r\n        background: \"var(--swiper-pagination-color, var(--swiper-theme-color))\",\r\n      },\r\n      \".swiper-container-vertical > .swiper-pagination-bullets\": {\r\n        right: 10,\r\n        top: \"50%\",\r\n        transform: \"translate3d(0px, -50%, 0)\",\r\n      },\r\n      \".swiper-container-vertical > .swiper-pagination-bullets .swiper-pagination-bullet\": {\r\n        margin: \"6px 0\",\r\n        display: \"block\",\r\n      },\r\n      \".swiper-container-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic\": {\r\n        top: \"50%\",\r\n        transform: \"translateY(-50%)\",\r\n        width: 8,\r\n      },\r\n      \".swiper-container-vertical > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet\": {\r\n        display: \"inline-block\",\r\n        transition: \"200ms transform, 200ms top\",\r\n      },\r\n      \".swiper-container-horizontal > .swiper-pagination-bullets .swiper-pagination-bullet\": {\r\n        margin: \"0 4px\",\r\n      },\r\n      \".swiper-container-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic\": {\r\n        left: \"50%\",\r\n        transform: \"translateX(-50%)\",\r\n        whiteSpace: \"nowrap\",\r\n      },\r\n      \".swiper-container-horizontal > .swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet\": {\r\n        transition: \"200ms transform, 200ms left\",\r\n      },\r\n      \".swiper-container-horizontal.swiper-container-rtl > .swiper-pagination-bullets-dynamic .swiper-pagination-bullet\": {\r\n        transition: \"200ms transform, 200ms right\",\r\n      },\r\n      \".swiper-pagination-progressbar\": {\r\n        background: \"rgba(0, 0, 0, 0.25)\",\r\n        position: \"absolute\",\r\n      },\r\n      \".swiper-pagination-progressbar .swiper-pagination-progressbar-fill\": {\r\n        background: \"var(--swiper-pagination-color, var(--swiper-theme-color))\",\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        transform: \"scale(0)\",\r\n        transformOrigin: \"left top\",\r\n      },\r\n      \".swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill\": {\r\n        transformOrigin: \"right top\",\r\n      },\r\n      \".swiper-container-horizontal > .swiper-pagination-progressbar, .swiper-container-vertical > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite\": {\r\n        width: \"100%\",\r\n        height: 4,\r\n        left: \"0\",\r\n        top: \"0\",\r\n      },\r\n      \".swiper-container-vertical > .swiper-pagination-progressbar, .swiper-container-horizontal > .swiper-pagination-progressbar.swiper-pagination-progressbar-opposite\": {\r\n        width: 4,\r\n        height: \"100%\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n      },\r\n      \".swiper-pagination-white\": {\r\n        swiperPaginationColor: \"#fff\",\r\n      },\r\n      \".swiper-pagination-black\": {\r\n        swiperPaginationColor: \"#000\",\r\n      },\r\n      \".swiper-pagination-lock\": {\r\n        display: \"none\",\r\n      },\r\n      \".swiper-scrollbar\": {\r\n        borderRadius: 10,\r\n        position: \"relative\",\r\n        msTouchAction: \"none\",\r\n        background: \"rgba(0, 0, 0, 0.1)\",\r\n      },\r\n      \".swiper-container-horizontal > .swiper-scrollbar\": {\r\n        position: \"absolute\",\r\n        left: \"1%\",\r\n        bottom: 3,\r\n        zIndex: \"50\",\r\n        height: 5,\r\n        width: \"98%\",\r\n      },\r\n      \".swiper-container-vertical > .swiper-scrollbar\": {\r\n        position: \"absolute\",\r\n        right: 3,\r\n        top: \"1%\",\r\n        zIndex: \"50\",\r\n        width: 5,\r\n        height: \"98%\",\r\n      },\r\n      \".swiper-scrollbar-drag\": {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        background: \"rgba(0, 0, 0, 0.5)\",\r\n        borderRadius: 10,\r\n        left: \"0\",\r\n        top: \"0\",\r\n      },\r\n      \".swiper-scrollbar-cursor-drag\": {\r\n        cursor: \"move\",\r\n      },\r\n      \".swiper-scrollbar-lock\": {\r\n        display: \"none\",\r\n      },\r\n      \".swiper-zoom-container\": {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n      },\r\n      \".swiper-zoom-container > img, .swiper-zoom-container > svg, .swiper-zoom-container > canvas\": {\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n        objectFit: \"contain\",\r\n      },\r\n      \".swiper-slide-zoomed\": {\r\n        cursor: \"move\",\r\n      },\r\n      \".swiper-lazy-preloader\": {\r\n        width: 42,\r\n        height: 42,\r\n        position: \"absolute\",\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n        marginLeft: -21,\r\n        marginTop: -21,\r\n        zIndex: \"10\",\r\n        transformOrigin: \"50%\",\r\n        animation: \"swiper-preloader-spin 1s infinite linear\",\r\n        boxSizing: \"border-box\",\r\n        border: \"4px solid var(--swiper-preloader-color, var(--swiper-theme-color))\",\r\n        borderRadius: \"50%\",\r\n        borderTopColor: \"transparent\",\r\n      },\r\n      \".swiper-lazy-preloader-white\": {\r\n        swiperPreloaderColor: \"#fff\",\r\n      },\r\n      \".swiper-lazy-preloader-black\": {\r\n        swiperPreloaderColor: \"#000\",\r\n      },\r\n      \"@keyframes swiper-preloader-spin\": {\r\n        \"100%\": {\r\n          transform: \"rotate(360deg)\",\r\n        },\r\n      },\r\n      \".swiper-container .swiper-notification\": {\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        pointerEvents: \"none\",\r\n        opacity: \"0\",\r\n        zIndex: \"-1000\",\r\n      },\r\n      \".swiper-container-fade.swiper-container-free-mode .swiper-slide\": {\r\n        transitionTimingFunction: \"ease-out\",\r\n      },\r\n      \".swiper-container-fade .swiper-slide\": {\r\n        pointerEvents: \"none\",\r\n        transitionProperty: \"opacity\",\r\n      },\r\n      \".swiper-container-fade .swiper-slide .swiper-slide\": {\r\n        pointerEvents: \"none\",\r\n      },\r\n      \".swiper-container-fade .swiper-slide-active, .swiper-container-fade .swiper-slide-active .swiper-slide-active\": {\r\n        pointerEvents: \"auto\",\r\n      },\r\n      \".swiper-container-cube\": {\r\n        overflow: \"visible\",\r\n      },\r\n      \".swiper-container-cube .swiper-slide\": {\r\n        pointerEvents: \"none\",\r\n        webkitBackfaceVisibility: \"hidden\",\r\n        backfaceVisibility: \"hidden\",\r\n        zIndex: \"1\",\r\n        visibility: \"hidden\",\r\n        transformOrigin: \"0 0\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      },\r\n      \".swiper-container-cube .swiper-slide .swiper-slide\": {\r\n        pointerEvents: \"none\",\r\n      },\r\n      \".swiper-container-cube.swiper-container-rtl .swiper-slide\": {\r\n        transformOrigin: \"100% 0\",\r\n      },\r\n      \".swiper-container-cube .swiper-slide-active, .swiper-container-cube .swiper-slide-active .swiper-slide-active\": {\r\n        pointerEvents: \"auto\",\r\n      },\r\n      \".swiper-container-cube .swiper-slide-active, .swiper-container-cube .swiper-slide-next, .swiper-container-cube .swiper-slide-prev, .swiper-container-cube .swiper-slide-next + .swiper-slide\": {\r\n        pointerEvents: \"auto\",\r\n        visibility: \"visible\",\r\n      },\r\n      \".swiper-container-cube .swiper-slide-shadow-top, .swiper-container-cube .swiper-slide-shadow-bottom, .swiper-container-cube .swiper-slide-shadow-left, .swiper-container-cube .swiper-slide-shadow-right\": {\r\n        zIndex: \"0\",\r\n        webkitBackfaceVisibility: \"hidden\",\r\n        backfaceVisibility: \"hidden\",\r\n      },\r\n      \".swiper-container-cube .swiper-cube-shadow\": {\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n        bottom: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        opacity: \"0.6\",\r\n        zIndex: \"0\",\r\n      },\r\n      \".swiper-container-cube .swiper-cube-shadow:before\": {\r\n        content: \"''\",\r\n        background: \"#000\",\r\n        position: \"absolute\",\r\n        left: \"0\",\r\n        top: \"0\",\r\n        bottom: \"0\",\r\n        right: \"0\",\r\n        webkitFilter: \"blur(50px)\",\r\n        filter: \"blur(50px)\",\r\n      },\r\n      \".swiper-container-flip\": {\r\n        overflow: \"visible\",\r\n      },\r\n      \".swiper-container-flip .swiper-slide\": {\r\n        pointerEvents: \"none\",\r\n        webkitBackfaceVisibility: \"hidden\",\r\n        backfaceVisibility: \"hidden\",\r\n        zIndex: \"1\",\r\n      },\r\n      \".swiper-container-flip .swiper-slide .swiper-slide\": {\r\n        pointerEvents: \"none\",\r\n      },\r\n      \".swiper-container-flip .swiper-slide-active, .swiper-container-flip .swiper-slide-active .swiper-slide-active\": {\r\n        pointerEvents: \"auto\",\r\n      },\r\n      \".swiper-container-flip .swiper-slide-shadow-top, .swiper-container-flip .swiper-slide-shadow-bottom, .swiper-container-flip .swiper-slide-shadow-left, .swiper-container-flip .swiper-slide-shadow-right\": {\r\n        zIndex: \"0\",\r\n        webkitBackfaceVisibility: \"hidden\",\r\n        backfaceVisibility: \"hidden\",\r\n      },\r\n    },\r\n  }),\r\n  { name: \"CSwiper\" }\r\n);\r\n","import React from \"react\";\r\nimport SwiperCore, {\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  //   A11y,\r\n  EffectFade,\r\n  EffectCoverflow,\r\n  EffectCube,\r\n  EffectFlip,\r\n  Autoplay,\r\n} from \"swiper\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Swiper as SwiperObj } from \"swiper\";\r\nimport { Swiper as SwiperOptions } from \"swiper/swiper-react\";\r\nimport { useSwiperGlobalStyles } from \"./SwiperCss/CSwiperJss\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([\r\n  Navigation,\r\n  Pagination,\r\n  Scrollbar,\r\n  EffectCoverflow,\r\n  EffectFade,\r\n  EffectCube,\r\n  EffectFlip,\r\n  Autoplay,\r\n  //   A11y,\r\n]);\r\n\r\nexport interface CSwiperSlidePropTypes extends React.HTMLProps<HTMLDivElement> {\r\n  bgImgSrc?: string;\r\n  divContent?: React.ReactNode;\r\n}\r\nexport interface CSwiperPropTypes extends Omit<SwiperOptions, \"height\" | \"initialSlide\"> {\r\n  activeSlide?: number;\r\n  accentColor?: string;\r\n  CssBackgroundSize?: React.CSSProperties[\"backgroundSize\"];\r\n  height?: React.CSSProperties[\"height\"];\r\n  maxWidth?: React.CSSProperties[\"maxWidth\"];\r\n  slides?: CSwiperSlidePropTypes[];\r\n  onSlideChange?: ((swiper: SwiperObj) => void) | undefined;\r\n}\r\n\r\nconst cswiperDefaultProps: CSwiperPropTypes = {\r\n  // wrapped props - swiper.js doesnt seem to accept explicit \"undefined\" for some props\r\n  autoHeight: false,\r\n  autoplay: false,\r\n  centeredSlides: false, // centered slide, not content (if slide's width is smaller than swiper container)\r\n  effect: \"slide\",\r\n  freeMode: false,\r\n  loop: false,\r\n  loopFillGroupWithBlank: false,\r\n  navigation: true, // deviate from swiper.js default\r\n  pagination: { clickable: true }, // deviate from swiper.js default\r\n  preloadImages: true,\r\n  slideToClickedSlide: false,\r\n  slidesOffsetAfter: 0,\r\n  slidesOffsetBefore: 0,\r\n  slidesPerGroup: 1,\r\n  slidesPerView: 1, // if \"auto\" will disable SlidesPerGroup\r\n  spaceBetween: 0,\r\n  speed: 300,\r\n  // additional props used to faciliate usage\r\n  accentColor: \"#007aff\",\r\n  activeSlide: 0, //replaces initialSlide, becoming reactive\r\n  CssBackgroundSize: \"cover\",\r\n  height: \"100%\",\r\n  maxWidth: \"100%\",\r\n};\r\n\r\nexport const CSwiper: React.FunctionComponent<CSwiperPropTypes> = (props) => {\r\n  const {\r\n    // wrapped props\r\n    autoHeight,\r\n    autoplay,\r\n    breakpoints,\r\n    centeredSlides,\r\n    effect,\r\n    freeMode,\r\n    loop,\r\n    loopFillGroupWithBlank,\r\n    navigation,\r\n    pagination,\r\n    preloadImages,\r\n    slideToClickedSlide,\r\n    slidesOffsetAfter,\r\n    slidesOffsetBefore,\r\n    slidesPerGroup,\r\n    slidesPerView,\r\n    spaceBetween,\r\n    speed,\r\n    // additional props used to faciliate usage\r\n    accentColor,\r\n    activeSlide,\r\n    CssBackgroundSize,\r\n    height,\r\n    maxWidth,\r\n    slides,\r\n    onSlideChange,\r\n    ...other\r\n  } = props;\r\n\r\n  const ActiveSlideRef = React.useRef<number>(!!activeSlide ? activeSlide : 0);\r\n  const SwiperInst = React.useRef<SwiperObj | null>(null);\r\n  const swiperGlobalClasses = useSwiperGlobalStyles();\r\n\r\n  React.useEffect(() => {\r\n    if (!!SwiperInst.current && activeSlide !== undefined) {\r\n      if (activeSlide >= 0 && activeSlide < SwiperInst.current.slides.length) {\r\n        if (activeSlide !== ActiveSlideRef.current) {\r\n          SwiperInst.current.slideTo(activeSlide);\r\n        }\r\n      }\r\n    }\r\n  }, [activeSlide]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Swiper\r\n        spaceBetween={spaceBetween}\r\n        slidesPerView={slidesPerView}\r\n        centeredSlides={centeredSlides}\r\n        slidesPerGroup={slidesPerGroup}\r\n        initialSlide={activeSlide}\r\n        speed={speed}\r\n        effect={effect}\r\n        autoplay={autoplay}\r\n        autoHeight={autoHeight}\r\n        slideToClickedSlide={slideToClickedSlide}\r\n        freeMode={freeMode}\r\n        breakpoints={breakpoints}\r\n        loop={loop}\r\n        loopFillGroupWithBlank={loopFillGroupWithBlank}\r\n        preloadImages={preloadImages}\r\n        slidesOffsetBefore={slidesOffsetBefore}\r\n        slidesOffsetAfter={slidesOffsetAfter}\r\n        navigation={navigation}\r\n        pagination={pagination}\r\n        onSwiper={(swiper) => {\r\n          SwiperInst.current = swiper;\r\n        }}\r\n        onSlideChange={(swiper) => {\r\n          ActiveSlideRef.current = swiper.activeIndex;\r\n          onSlideChange?.(swiper);\r\n        }}\r\n        //\r\n        style={{\r\n          height: height,\r\n          maxWidth: maxWidth,\r\n        }}\r\n        {...other}\r\n      >\r\n        {!!slides\r\n          ? slides.map((slide, slideIdx) => {\r\n              const { bgImgSrc, divContent, style: slideStyle, ...slideOtherProps } = slide;\r\n              return (\r\n                <SwiperSlide\r\n                  key={slideIdx}\r\n                  style={{ ...slideStyle, boxSizing: \"border-box\", backgroundImage: `url(${bgImgSrc})` }}\r\n                  {...slideOtherProps}\r\n                >\r\n                  {divContent}\r\n                </SwiperSlide>\r\n              );\r\n            })\r\n          : null}\r\n      </Swiper>\r\n    </React.Fragment>\r\n  );\r\n};\r\nCSwiper.defaultProps = cswiperDefaultProps;\r\nexport default CSwiper;\r\n","import React from \"react\";\r\n\r\nexport interface DiscountTagPropTypes {\r\n  time?: string;\r\n  discount?: string;\r\n  size?: number;\r\n  paddingPercentOfSize?: number;\r\n  bgImgUrl?: string;\r\n}\r\n\r\nconst discountsDefaultProps: DiscountTagPropTypes = {\r\n  time: \"\",\r\n  discount: \"\",\r\n  size: 65,\r\n  paddingPercentOfSize: 15,\r\n  bgImgUrl: \"https://raw.githubusercontent.com/carmnk/resources/main/ens/images/discounts.png\",\r\n};\r\n\r\nexport const DiscountTag = (props: DiscountTagPropTypes = discountsDefaultProps) => {\r\n  const { time, discount, size = 65, bgImgUrl, paddingPercentOfSize=15 } = props;\r\n\r\n  const padding = Math.round(paddingPercentOfSize/100 * size);\r\n  const upperTextHeightPercent = 45;\r\n  const lowerTextHeightPercent = 55;\r\n  const heightUpperText = Math.round((((size - 2 * padding) * upperTextHeightPercent) / 100) * 0.6);\r\n  const heightLowerText = Math.round((((size - 2 * padding) * lowerTextHeightPercent) / 100) * 0.75);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: size,\r\n        width: size,\r\n        maxWidth: size,\r\n        background: `url(${bgImgUrl})`,\r\n        backgroundSize: \"cover\",\r\n        textAlign: \"center\",\r\n        padding: padding,\r\n        boxSizing: \"border-box\",\r\n        color: \"#fff\",\r\n        display: \"grid\",\r\n        gridTemplateRows: `${upperTextHeightPercent}% ${lowerTextHeightPercent}%`,\r\n        gridTemplateColumns: \"1fr\",\r\n        alignItems: \"center\",\r\n        margin: 0,\r\n      }}\r\n      \r\n    >\r\n      <div>\r\n        <p style={{ fontSize: heightUpperText, margin: 0 }}>{time}</p>\r\n      </div>\r\n      <div>\r\n        <p style={{ fontSize: heightLowerText, margin: 0, fontWeight: 500 }}>{discount}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nDiscountTag.defaultProps = discountsDefaultProps;\r\nexport default DiscountTag;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card, { CardProps } from \"@material-ui/core/Card\";\r\nimport CardActionArea, { CardActionAreaProps } from \"@material-ui/core/CardActionArea\";\r\nimport CardActions, { CardActionsProps } from \"@material-ui/core/CardActions\";\r\nimport CardContent, { CardContentProps } from \"@material-ui/core/CardContent\";\r\nimport CardMedia, { CardMediaProps } from \"@material-ui/core/CardMedia\";\r\nimport CardHeader, { CardHeaderProps } from \"@material-ui/core/CardHeader\";\r\n\r\nconst useStyles = makeStyles({\r\n  headerAction: {\r\n    margin: 0,\r\n  },\r\n});\r\n\r\n/** CCardPropTypes */\r\nexport interface CCardPropTypes {\r\n  /** max-width of whole card */\r\n  cardMaxWidth?: number;\r\n  /** content displayed (below header and media/image)*/\r\n  content?: React.ReactNode;\r\n  /** [Mui paper elevation](https://material-ui.com/api/paper/)*/\r\n  elevation?: number;\r\n  /** content displayed in static footer*/\r\n  footerContent?: React.ReactNode;\r\n  /** content (typically IconButton) to display in right section of header*/\r\n  headerAction?: React.ReactNode;\r\n  /** content (typically Avatar) to display in left section of header*/\r\n  headerAvatar?: React.ReactNode;\r\n  /** header subtitle*/\r\n  headerSubTitle?: React.ReactNode;\r\n  /** header title*/\r\n  headerTitle?: React.ReactNode;\r\n  /** src for image*/\r\n  imageSrc?: string;\r\n  /** image hover tooltip*/\r\n  imageToolTip?: string;\r\n  /** overlay content for media section */\r\n  mediaContent?: React.ReactNode;\r\n  /** height  of media/image */\r\n  mediaHeight?: number;\r\n  /** [material ui CardActionAreaProps](https://material-ui.com/api/card-action-area/)\r\n   * @nospec\r\n   */\r\n  muiCardActionAreaProps?: CardActionAreaProps;\r\n  /** [material ui CardActionsProps](https://material-ui.com/api/card-actions/)\r\n   * @nospec\r\n   */\r\n  muiCardActionsProps?: CardActionsProps;\r\n  /** [material ui CardContentProps](https://material-ui.com/api/card-content/)\r\n   * @nospec\r\n   */\r\n  muiCardContentProps?: CardContentProps;\r\n  /** [material ui CardHeaderProps](https://material-ui.com/api/card-header/)\r\n   * @nospec\r\n   */\r\n  muiCardHeaderProps?: CardHeaderProps;\r\n  /** [material ui CardMediaProps](https://material-ui.com/api/card-media/)\r\n   * @nospec\r\n   */\r\n  muiCardMediaProps?: CardMediaProps;\r\n  /** [material ui CardMediaProps](https://material-ui.com/api/card/)\r\n   * @nospec\r\n   */\r\n  muiCardProps?: CardProps;\r\n  /** use mui ActionArea for Click/Tap events covering Media and Content */\r\n  useActionArea?: boolean;\r\n  /** use content section */\r\n  useContent?: boolean;\r\n  /** use static footer */\r\n  useFooter?: boolean;\r\n  /** use card header */\r\n  useHeader?: boolean;\r\n  /** use media section */\r\n  useMedia?: boolean;\r\n  /** callback fired when ActionArea is clicked */\r\n  onActionAreaClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined;\r\n}\r\n\r\nconst ccardDefaultProps: CCardPropTypes = {\r\n  cardMaxWidth: 320,\r\n  content: null,\r\n  elevation: 8,\r\n  footerContent: null,\r\n  headerAction: null,\r\n  headerAvatar: null,\r\n  headerSubTitle: null,\r\n  headerTitle: null,\r\n  imageSrc: \"#\",\r\n  imageToolTip: \"\",\r\n  mediaContent: null,\r\n  mediaHeight: 240,\r\n  muiCardActionAreaProps: {},\r\n  muiCardActionsProps: {},\r\n  muiCardContentProps: {},\r\n  muiCardHeaderProps: {},\r\n  muiCardMediaProps: {},\r\n  muiCardProps: {},\r\n  useActionArea: true,\r\n  useContent: true,\r\n  useFooter: true,\r\n  useHeader: true,\r\n  useMedia: true,\r\n  onActionAreaClick: undefined,\r\n};\r\n\r\n/** CCard Component\r\n * @remark A simple card component using Material UI's Card component\r\n * @docu\r\n */\r\nexport const CCard = (props: CCardPropTypes) => {\r\n  const {\r\n    cardMaxWidth,\r\n    content,\r\n    elevation,\r\n    footerContent,\r\n    headerAction,\r\n    headerAvatar,\r\n    headerSubTitle,\r\n    headerTitle,\r\n    imageSrc,\r\n    imageToolTip,\r\n    mediaContent,\r\n    mediaHeight,\r\n    muiCardActionAreaProps,\r\n    muiCardActionsProps,\r\n    muiCardContentProps,\r\n    muiCardHeaderProps,\r\n    muiCardMediaProps,\r\n    muiCardProps,\r\n    useActionArea,\r\n    useContent,\r\n    useFooter,\r\n    useHeader,\r\n    useMedia,\r\n    onActionAreaClick = undefined,\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const headerProps: any = {};\r\n  if (!!headerAvatar) headerProps.avatar = headerAvatar;\r\n  if (!!headerAction) headerProps.action = headerAction;\r\n  if (!!headerTitle) headerProps.title = headerTitle;\r\n  if (!!headerSubTitle) headerProps.subheader = headerSubTitle;\r\n\r\n  const cardContent = (\r\n    <React.Fragment>\r\n      {useMedia ? (\r\n        <CardMedia\r\n          image={imageSrc}\r\n          title={imageToolTip}\r\n          style={{ height: mediaHeight, position: \"relative\", top: 0 }}\r\n          {...muiCardMediaProps}\r\n        >\r\n          {mediaContent}\r\n        </CardMedia>\r\n      ) : null}\r\n      {useContent ? <CardContent {...muiCardContentProps}>{content}</CardContent> : null}\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <Card elevation={elevation} style={{ maxWidth: cardMaxWidth }} {...muiCardProps}>\r\n      {useHeader ? (\r\n        <CardHeader classes={{ action: classes.headerAction }} {...headerProps} {...muiCardHeaderProps} />\r\n      ) : null}\r\n      {useActionArea ? (\r\n        <CardActionArea onClick={onActionAreaClick} {...muiCardActionAreaProps}>\r\n          {cardContent}\r\n        </CardActionArea>\r\n      ) : (\r\n        cardContent\r\n      )}\r\n      {useFooter ? <CardActions {...muiCardActionsProps}>{footerContent}</CardActions> : null}\r\n    </Card>\r\n  );\r\n};\r\nCCard.defaultProps = ccardDefaultProps;\r\nexport default CCard;\r\n","import { mdiCurrencyEur } from \"@mdi/js\";\r\nimport { Icon } from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport DiscountTag from \"./Components/Specific/DiscountTag\";\r\nimport CCard from \"./Components/CCard\";\r\nimport CSwiper from \"./Components/CSwiper\";\r\nimport { Chip, Theme, Typography } from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nexport const createDiscountTagsSlides = (discounts: any) => {\r\n  const result = [];\r\n  for (let discount of discounts) {\r\n    result.push({\r\n      divContent: <DiscountTag time={discount.time} discount={discount.discount} size={65} />,\r\n      style: { width: 85 },\r\n    });\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const createPriceIcons = (price: number, color: string) => {\r\n  const priceElements = [];\r\n  for (let i = 0; i < price; i++) {\r\n    priceElements.push(\r\n      <Icon\r\n        key={i}\r\n        path={mdiCurrencyEur}\r\n        size={\"13px\"}\r\n        color=\"#fff\"\r\n        style={{ border: `4px solid ${color}`, borderRadius: \"50%\", background: color }}\r\n      />\r\n    );\r\n  }\r\n  return priceElements;\r\n};\r\n\r\nexport const createProviderCard = (providerData: any, theme: Theme, routeTo?: () => void) => {\r\n  return (\r\n    <div style={{ padding: \"20px 10px\", boxSizing: \"border-box\" }}>\r\n      <CCard\r\n        useHeader={false}\r\n        useFooter={false}\r\n        mediaHeight={192}\r\n        cardMaxWidth={256}\r\n        elevation={2}\r\n        imageSrc={providerData.img}\r\n        imageToolTip={providerData.name}\r\n        onActionAreaClick={(e) => {\r\n          routeTo?.();\r\n          console.log(routeTo);\r\n        }}\r\n        mediaContent={\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              width: \"100%\",\r\n              height: 75,\r\n              overflow: \"hidden\",\r\n              zIndex: 15021987,\r\n            }}\r\n            title=\"discount badges are at top of card stack!\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n            }}\r\n          >\r\n            <CSwiper\r\n              onClick={(swiper) => {\r\n                alert(\r\n                  \"slide No.\" +\r\n                    swiper.clickedIndex +\r\n                    \" clicked, value is: \" +\r\n                    providerData.discountVals[swiper.clickedIndex].time +\r\n                    \" @ \" +\r\n                    providerData.discountVals[swiper.clickedIndex].discount\r\n                );\r\n              }}\r\n              slidesPerView={\"auto\"}\r\n              navigation={false}\r\n              pagination={false}\r\n              slides={createDiscountTagsSlides(providerData.discountVals)}\r\n            ></CSwiper>\r\n          </div>\r\n        }\r\n        content={\r\n          <React.Fragment>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {providerData.name}\r\n            </Typography>\r\n            <div style={{ display: \"grid\", gridTemplateColumns: \"auto 66px\" }}>\r\n              <div>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                  {providerData.info}\r\n                </Typography>\r\n              </div>\r\n              <div>\r\n                {createPriceIcons(providerData.price, theme.palette.primary.main).map((priceEl, priceElIdx) => priceEl)}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const createSkillChipSlide = (title: string, style?: any, onClick?: () => void) => {\r\n  return {\r\n    style: {\r\n      width: \"max-content\",\r\n    },\r\n    divContent: (\r\n      <Chip\r\n        label={<Typography>{title}</Typography>}\r\n        clickable={true}\r\n        variant=\"outlined\"\r\n        size=\"medium\"\r\n        style={style}\r\n        onClick={onClick}\r\n      />\r\n    ),\r\n  };\r\n};\r\n","import {\r\n  Container,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  mdiAccount,\r\n  mdiClipboardCheck,\r\n  mdiCodeTags,\r\n  mdiFire,\r\n  mdiGithub,\r\n  mdiLinkedin,\r\n  mdiMail,\r\n  mdiMapMarker,\r\n} from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { createSkillChipSlide } from \"../ComponentFactory\";\r\nimport CSwiper from \"../Components/CSwiper\";\r\n\r\nexport const Search = (props: any) => {\r\n  const now = new Date();\r\n  const hour = now.getHours();\r\n  let inTwoHours = hour + 2;\r\n  let day = \"today\";\r\n  if (hour + 2 > 24) {\r\n    inTwoHours = hour + 2 - 24;\r\n    day = \"tomrrow\";\r\n  }\r\n\r\n  const theme = useTheme();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  return (\r\n    <div >\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"auto 128px\",\r\n          alignItems: \"center\",\r\n          marginTop: !!matches ? theme.spacing(6) : theme.spacing(2.5),\r\n        }}\r\n      >\r\n        <div>\r\n          <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n            <ListItem button style={{ margin: `${theme.spacing(1)} 0` }}>\r\n              <ListItemIcon>\r\n                <Icon path={mdiFire} color={theme.palette.primary.main} size={\"40px\"} />\r\n              </ListItemIcon>\r\n              <Typography variant=\"h6\" component=\"nav\">\r\n                News\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem button style={{ margin: `${theme.spacing(1)} 0` }}>\r\n              <ListItemIcon>\r\n                <Icon path={mdiClipboardCheck} color={theme.palette.primary.main} size={\"32px\"} />\r\n              </ListItemIcon>\r\n              <Typography variant=\"h6\" component=\"nav\">\r\n                Projects\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem button style={{ margin: `${theme.spacing(1)} 0` }}>\r\n              <ListItemIcon>\r\n                <Icon path={mdiAccount} color={theme.palette.primary.main} size={\"32px\"} />\r\n              </ListItemIcon>\r\n              <Typography variant=\"h6\" component=\"nav\">\r\n                About Me\r\n              </Typography>\r\n            </ListItem>\r\n            <ListItem button style={{ margin: `${theme.spacing(1)} 0` }}>\r\n              <ListItemIcon>\r\n                <Icon path={mdiCodeTags} color={theme.palette.primary.main} size={\"32px\"} />\r\n              </ListItemIcon>\r\n              <Typography variant=\"h6\" component=\"nav\">\r\n                Coding\r\n              </Typography>\r\n            </ListItem>\r\n          </List>\r\n        </div>\r\n        <div style={{ justifySelf: \"center\" }}>\r\n          <img\r\n            src=\"https://github.com/carmnk/resources/raw/main/images/profil.jpg\"\r\n            style={{ borderRadius: \"50%\", width: 96 }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div style={{ marginTop: !!matches ? theme.spacing(5) : theme.spacing(1) }}>\r\n        <CSwiper\r\n          spaceBetween={10}\r\n          slidesPerView={\"auto\"}\r\n          navigation={false}\r\n          pagination={{ type: \"progressbar\" }}\r\n          freeMode={true}\r\n          height={50}\r\n          slides={[\r\n            createSkillChipSlide(\"Fullstack\", { background: theme.palette.primary.main }),\r\n            createSkillChipSlide(\"Typescript\", { background: theme.palette.primary.main }),\r\n            createSkillChipSlide(\"React\", { background: theme.palette.primary.main }),\r\n            createSkillChipSlide(\"Node.js\", { background: theme.palette.primary.main }),\r\n            createSkillChipSlide(\"Mongo/NoSQL\", { background: theme.palette.primary.main }),\r\n            createSkillChipSlide(\"Vanilla JS\", { background: \"#fff\" }),\r\n            createSkillChipSlide(\"CSS/JSS\", { background: \"#fff\" }),\r\n            createSkillChipSlide(\"HTML\", { background: \"#fff\" }),\r\n          ]}\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          alignItems: \"center\",\r\n          justifyItems: \"center\",\r\n          marginTop: !!matches ? theme.spacing(3) : theme.spacing(1),\r\n        }}\r\n      >\r\n        <div>\r\n          <IconButton color=\"primary\" size=\"small\" onClick={() => {}}>\r\n            <Icon path={mdiLinkedin} size={\"48px\"} />\r\n          </IconButton>\r\n          <IconButton color=\"primary\" size=\"small\" onClick={() => {}}>\r\n            <Icon path={mdiGithub} size=\"48px\" />\r\n          </IconButton>\r\n          <IconButton color=\"primary\" size=\"small\" onClick={() => {}}>\r\n            <Icon path={mdiMapMarker} size=\"48px\" />\r\n          </IconButton>\r\n          <IconButton color=\"primary\" size=\"medium\" onClick={() => {}}>\r\n            <Icon path={mdiMail} size=\"48px\" />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Container, Fab, IconButton, Paper, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiChevronUp, mdiClose, mdiMenu } from \"@mdi/js\";\r\nimport Menu from \"./Pages/Menu\";\r\n\r\n\r\nexport const Layout = (props: any) => {\r\n    const { menuOpen, setMenuOpen } = props;\r\n    // const MenuOpenRef = React.useRef(menuOpen);\r\n\r\n    // React.useEffect(() => {\r\n    //     if (menuOpen !== MenuOpenRef.current) MenuOpenRef.current = menuOpen;\r\n    // }, [menuOpen])\r\n\r\n    const theme = useTheme(); \r\n    const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n    console.log(menuOpen)\r\n    const imgHeader = !menuOpen ? \"Want your coding job done in no time?\" : \"carmnk - web and app developer\";\r\n    return (\r\n      <div style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", overflowY: \"scroll\" }}>\r\n        <div style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\" }}>{props.children}</div>\r\n        <div style={{ position: \"absolute\", top: 0, left: 0, width: \"100%\", height: \"100%\", zIndex: 2000 }}>\r\n          {/* <Container maxWidth=\"md\" disableGutters> */}\r\n          <div\r\n            style={{\r\n              visibility: !menuOpen ? \"hidden\" : \"visible\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              width: \"100%\",\r\n              height: !!matches ? 544 : 448,\r\n              background: \"#333\",\r\n            }}\r\n          >\r\n            <Container maxWidth=\"md\" style={{ position: \"relative\", top: 0 }} disableGutters>\r\n              <Menu />\r\n            </Container>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            width: \"100%\",\r\n            height: 544,\r\n            zIndex: 15021987,\r\n            paddingTop: !menuOpen ? 100 : 0,\r\n            transition: `padding 0.1s ease, width 0.1s ease`,\r\n          }}\r\n          onClick={() => {\r\n            setMenuOpen(true);\r\n          }}\r\n        >\r\n          <Container maxWidth=\"md\" style={{ position: \"relative\", top: 0, boxSizing: \"border-box\" }} disableGutters>\r\n            <Paper\r\n              style={{\r\n                padding: \"10px 0\",\r\n                borderRadius: 100,\r\n                width: !menuOpen ? \"100%\" : \"calc(100% - 50px)\",\r\n\r\n                height: 30,\r\n                textAlign: \"center\",\r\n                transition: `padding 0.1s ease, width 0.1s ease`,\r\n              }}\r\n              onClick={() => {\r\n                setMenuOpen?.(true);\r\n                console.log(setMenuOpen);\r\n              }}\r\n            >\r\n              <Typography variant=\"h5\" color=\"primary\">\r\n                {imgHeader}\r\n              </Typography>\r\n            </Paper>\r\n            <div style={{ display: !menuOpen ? \"none\" : \"block\", position: \"absolute\", top: 0, right: 0, width: 48 }}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                style={{ padding: 0 }}\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setMenuOpen?.(false);\r\n                    \r\n                }}\r\n              >\r\n                <Icon path={mdiClose} size=\"48px\" />\r\n              </IconButton>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n\r\n        <Fab color=\"secondary\" aria-label=\"add\" style={{ position: \"fixed\", bottom: 20, right: 70 }}>\r\n          <Icon color=\"white\" path={mdiChevronUp} size=\"32px\" />\r\n        </Fab>\r\n        <Fab color=\"secondary\" aria-label=\"add\" style={{ position: \"fixed\", bottom: 20, right: 20 }}>\r\n          <Icon color=\"white\" path={mdiMenu} size=\"32px\" />\r\n        </Fab>\r\n      </div>\r\n    );\r\n};\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport CSwiper from \"../Components/CSwiper\";\r\nimport { createSkillChipSlide } from \"../ComponentFactory\";\r\nimport {\r\n  Chip,\r\n  Container,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Theme,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { mdiFire } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Layout from \"../Layout\";\r\n\r\nconst useSwiperStyles = makeStyles((theme: Theme) => ({\r\n  \"@global\": {\r\n    \".swiper-pagination-progressbar-fill\": {\r\n      background: theme.palette.primary.main + \" !important\",\r\n    },\r\n    \".swiper-pagination\": {\r\n      bottom: \"0px !important\",\r\n      top: \"45px !important\",\r\n      height: \"2px !important\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Home = (props: any) => {\r\n  const { menuOpen, setMenuOpen } = props;\r\n  const theme = useTheme();\r\n  const [Toggle, setToggle] = React.useState(true);\r\n  // const [ActiveLocation, setActiveLocation] = React.useState(0);\r\n  // const history = useHistory();\r\n  const matches = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  // const [IsSearching, setIsSearching] = React.useState(false);\r\n  useSwiperStyles();\r\n  const activeLocationStyle = { background: theme.palette.primary.main };\r\n  const imgHeader = !menuOpen ? \"Want your coding job done in no time?\" : \"carmnk - web and app developer\";\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button style={{ position: \"fixed\", top: 51, left: 50, zIndex: 15555555555 }} onClick={() => {history.push(\"/chart\")}}>\r\n        CLICK\r\n      </Button>\r\n      <Layout menuOpen={menuOpen} setMenuOpen={setMenuOpen}>\r\n        <div style={{ position: \"relative\", top: 0, background: \"#333\", paddingBottom: !!matches ? 32 : 64 }}>\r\n          <Container style={{ position: \"relative\", top: 0, boxSizing: \"border-box\" }} disableGutters maxWidth=\"md\">\r\n            <div\r\n              style={{\r\n                height: !!matches ? 512 : 384,\r\n                opacity: !menuOpen ? 1 : 0,\r\n                position: \"relative\",\r\n                top: 0,\r\n                backgroundSize: \"cover\",\r\n                boxSizing: \"border-box\",\r\n                backgroundImage: \"url(https://github.com/carmnk/resources/raw/main/images/IMG_20200806_115021.jpg)\",\r\n                backgroundPosition: \"bottom\",\r\n                borderRadius: 10,\r\n              }}\r\n            />\r\n          </Container>\r\n        </div>\r\n\r\n        <div style={{ textAlign: \"center\", margin: 20 }}>\r\n          <Typography color=\"secondary\" variant=\"h2\" component=\"h1\">\r\n            Hi I'm carmnk, web and app developer\r\n          </Typography>\r\n          <Typography color=\"textSecondary\" variant=\"h3\" component=\"h2\">\r\n            focussing on React projects\r\n          </Typography>\r\n        </div>\r\n        <Container maxWidth=\"md\" style={{ marginTop: 20, paddingBottom: 20 }}>\r\n          <CSwiper\r\n            spaceBetween={10}\r\n            slidesPerView={\"auto\"}\r\n            navigation={false}\r\n            pagination={{ type: \"progressbar\" }}\r\n            freeMode={true}\r\n            height={50}\r\n            slides={[\r\n              createSkillChipSlide(\"Fullstack\", activeLocationStyle),\r\n              createSkillChipSlide(\"Typescript\", activeLocationStyle),\r\n              createSkillChipSlide(\"React\", activeLocationStyle),\r\n              createSkillChipSlide(\"Node.js\", activeLocationStyle),\r\n              createSkillChipSlide(\"Mongo/NoSQL\", activeLocationStyle),\r\n              createSkillChipSlide(\"Vanilla JS\", {}),\r\n              createSkillChipSlide(\"CSS/JSS\"),\r\n              createSkillChipSlide(\"HTML\", {}),\r\n            ]}\r\n          />\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"32px auto max-content\",\r\n              marginTop: 20,\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <div>\r\n              <Icon path={mdiFire} color={theme.palette.primary.main} size={\"32px\"} />\r\n            </div>\r\n            <div>\r\n              <Typography component=\"span\">Trending</Typography>\r\n            </div>\r\n            <div>\r\n              <Typography component=\"span\" color=\"primary\">\r\n                view all\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setToggle(!Toggle);\r\n              }}\r\n            >\r\n              Toggle\r\n            </Button>\r\n          </div>\r\n          <Typography variant=\"h1\">Typo Header H1</Typography>\r\n          <Typography variant=\"h2\">Typo Header H2</Typography>\r\n          <Typography variant=\"h3\">Typo Header H3</Typography>\r\n          <Typography variant=\"h4\">Typo Header H3</Typography>\r\n          <Typography variant=\"h5\">Typo Header H3</Typography>\r\n          <Typography variant=\"h6\">Typo Header H3</Typography>\r\n          <Typography variant=\"body1\">Typo Header Body1</Typography>\r\n          <Typography variant=\"body2\">Typo Header Body2</Typography>\r\n        </Container>\r\n      </Layout>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Home;\r\n","/** Data types */\r\n\r\nimport {\r\n  CommonGestureState,\r\n  Coordinates,\r\n  DragState,\r\n  FullGestureState,\r\n  SharedGestureState,\r\n} from \"react-use-gesture/dist/types\";\r\nimport { ExcludeEmpty, ReducerActionTaskType, ReducerActionType } from \"../ChartState/CChartStateReducer\";\r\nimport { ChartPeriodType, DateStatType } from \"./CChartTimeTypes\";\r\nimport { ChartDataSeries, ChartDataset, DataSeries, IndicatorDataSeries, IndicatorDataset } from \"./CChartTypes\";\r\n\r\nexport type UseGestureStateType = {\r\n  drag: CommonGestureState & Coordinates & DragState & SharedGestureState;\r\n  move: Omit<FullGestureState<\"move\">, \"event\"> & {\r\n    event: React.PointerEvent<Element> | PointerEvent;\r\n  };\r\n  hover: Omit<FullGestureState<\"move\">, \"event\"> & {\r\n    event: React.PointerEvent<Element> | PointerEvent;\r\n  };\r\n  wheel: CommonGestureState & Coordinates;\r\n  dragEnd: CommonGestureState & Coordinates & DragState & SharedGestureState;\r\n};\r\n\r\n/** Interactive State */\r\nexport type InteractiveContainerSizeType = {\r\n  top: number;\r\n  left: number;\r\n  width: number;\r\n  height: number;\r\n  init: boolean;\r\n};\r\n\r\nexport type InteractivePointerType = {\r\n  isHovering: boolean;\r\n  move: { isMoving: boolean; xy: [number, number] };\r\n  drag: {\r\n    isDragging: boolean;\r\n    xy: [number, number];\r\n    initial: [number, number];\r\n    delta: [number, number];\r\n    first: boolean;\r\n    last: boolean;\r\n    movementInitial: [number, number];\r\n  };\r\n  dragPointerUp: {\r\n    isDragPointerUp: boolean;\r\n    xy: [number, number];\r\n    initial: [number, number];\r\n    first: boolean;\r\n    last: boolean;\r\n    movementInitial: [number, number];\r\n  };\r\n  wheel: { isWheeling: boolean; delta: [number, number] };\r\n  chartPointer: {\r\n    move: {\r\n      pixX: number;\r\n      pixXSnap: number;\r\n      pixY: number;\r\n      x: number|null;\r\n      xUnlimited : number;\r\n      xDateString: string;\r\n      subchartIdx: number;\r\n      snapDatasets: {\r\n        yaxisIdx: number;\r\n        graphIdx: number;\r\n        y: number;\r\n        ySnap: string | null;\r\n        pixYSnap: number | null;\r\n        data: ChartDataset | IndicatorDataset;\r\n        dateString: string;\r\n      }[];\r\n    };\r\n    click: {\r\n      clickedSubchartIdx: number | null;\r\n    };\r\n  };\r\n};\r\n\r\nexport type InteractiveXaxisCalcs = {\r\n  xStart: number;\r\n  pixXStart: number;\r\n  xEnd: number;\r\n  pixXEnd: number;\r\n  widthPerTick: number;\r\n  startNoDataPeriod: number;\r\n  endNoDataPeriod: number;\r\n  noDataPeriodPortion: number;\r\n  xAxisTicks: { x: number; dateString: string }[];\r\n  optPeriodRes: ChartPeriodType | null;\r\n};\r\n\r\nexport type InteractiveXaxisType = {\r\n  totalTranslatedX: number;\r\n  totalScaleX: number; //only int\r\n  scaledWidthPerTick: number;\r\n} & InteractiveXaxisCalcs;\r\n\r\nexport type InteractiveStateType = {\r\n  pointer: InteractivePointerType;\r\n  containerSize: InteractiveContainerSizeType;\r\n  xaxis: InteractiveXaxisType;\r\n};\r\n\r\n///////////////////////////////////////\r\n\r\nexport type ChartPreStateRefType = InteractiveStateType & {\r\n  lastUpdate: Date;\r\n  shallUpdate: (\"drag\" | \"pointerMove\" | \"wheel\" | \"dragEnd\" | \"containerResize\" | \"deps\")[];\r\n  tmp: {\r\n    scaleInitWidthPerTick: number | null;\r\n    scaleInitTranslatedX: number;\r\n    dragActionType:\r\n      | null\r\n      | { type: \"translate\" | \"scale\" }\r\n      | { type: \"resizeSubchart\"; res: number; initBottom: number }\r\n      | { type: \"editTool\"; res: [number, number, number, number][]; init: [number, number] }\r\n      | { type: \"drawTool\"; init: [number, number] };\r\n  };\r\n  userInteractedChartState: any;\r\n};\r\n\r\n/** SubCharts State */\r\nexport type GraphStateType<AdditionalGraphProps = {}> = {\r\n  data: DataSeries;\r\n  style: {\r\n    strokeColor: string[];\r\n  };\r\n  name: string;\r\n  type: \"chart\" | \"indicator\" | \"formula\";\r\n  decimals: number;\r\n  curData?: GraphStateType[\"data\"];\r\n  yMax: number;\r\n  yMaxExact: number;\r\n  yMin: number;\r\n  yMinExact: number;\r\n  // drawPixXy: [number, number][];\r\n  datasets: {\r\n    first: {\r\n      x: number;\r\n      pixX: number;\r\n      data: ChartDataset | IndicatorDataset;\r\n      dateString: string;\r\n    } | null;\r\n    last: {\r\n      x: number;\r\n      pixX: number;\r\n      data: ChartDataset | IndicatorDataset;\r\n      dateString: string;\r\n    } | null;\r\n  };\r\n} & AdditionalGraphProps;\r\n\r\nexport type AdditionalChartGraphStateType = {\r\n  data: ChartDataSeries;\r\n  dateStat: DateStatType;\r\n  meta: {\r\n    nData: number;\r\n    chartPeriod: ChartPeriodType | null;\r\n    dataPeriod: number;\r\n    periodGuessConfidence: number;\r\n    tradingDaysPerWeek: number;\r\n    tradingDaysPerWeekGuessConfidence: number;\r\n    type: \"candlechart\" | \"linechart\";\r\n  };\r\n  style: {\r\n    candleStrokeColor: string;\r\n    candleDownColor: string;\r\n    candleUpColor: string;\r\n  };\r\n};\r\n\r\nexport type AdditionalIndicatorGraphStateType = {\r\n  data: IndicatorDataSeries;\r\n  indicator: {\r\n    name: string;\r\n    params: { name: string; val: number }[];\r\n    type: \"line\" | \"bars\";\r\n    default: {\r\n      params: { name: string; val: number }[];\r\n      newSubchart: boolean;\r\n      fixedYScale?: [number, number]; //\r\n      decimals?: number; //\r\n    };\r\n    indicatorFn: (chartData: ChartDataset[], chartName: string, ...other: any[]) => IndicatorDataSeries;\r\n    \r\n  };\r\n};\r\n\r\nexport type ChartGraphStateType = GraphStateType<AdditionalChartGraphStateType>;\r\nexport type IndicatorGraphStateType = Omit<GraphStateType, \"data\" | \"style\"> &\r\n  AdditionalIndicatorGraphStateType & {\r\n    style: {\r\n      strokeColor: string[];\r\n    };\r\n  };\r\n\r\nexport const isIndicatorGraph = (graph: GraphStateType): graph is GraphStateType<AdditionalIndicatorGraphStateType> => {\r\n  if (graph.type === \"indicator\") return true;\r\n  return false;\r\n};\r\nexport const isChartGraph = (graph: GraphStateType): graph is GraphStateType<AdditionalChartGraphStateType> => {\r\n  if (graph.type === \"chart\") return true;\r\n  return false;\r\n};\r\nexport type DrawingTool = {\r\n  xy: [number, number][];\r\n  type: \"hline\" | \"vline\" | \"trendline\";\r\n  style: {\r\n    strokeColor: string;\r\n    anchorColor: string;\r\n  };\r\n  params?: { [key: string]: any };\r\n};\r\n\r\nexport type userInteractsSubchartStateType = {\r\n  yaxis: {\r\n    graphs: {\r\n      data?: DataSeries;\r\n      style: {\r\n        strokeColor: string[];\r\n      };\r\n      name: string;\r\n      type: \"chart\" | \"indicator\" | \"formula\";\r\n      decimals: number;\r\n    }[];\r\n    tools: Pick<DrawingTool, \"params\" | \"type\" | \"style\">[];\r\n    decimals: number;\r\n  }[];\r\n  // top: number;\r\n  // bottom: number;\r\n}[];\r\n\r\nexport type SubchartStateType = {\r\n  yaxis: YaxisStateType[];\r\n  top: number;\r\n  bottom: number;\r\n};\r\n\r\nexport type YaxisStateType<pure = \"false\"> = {\r\n  graphs: GraphStateType[];\r\n  tools: DrawingTool[];\r\n  decimals: number;\r\n\r\n  optIntervalY: number;\r\n  heightPerPt: number; // yaxis\r\n  translatedY: number; // yaxis\r\n  drawTicks: { pixY: number; label: string }[];\r\n};\r\n\r\n/** ChartState */\r\n\r\nexport type ChartStateType = {\r\n  xaxis: {\r\n    heightXAxis: number;\r\n    heightTickMarkLines: number;\r\n    style: {\r\n      fillColor: string;\r\n      strokeColor: string;\r\n      fontColor: string;\r\n      fontSize: number;\r\n      fontName: string;\r\n    };\r\n  };\r\n  yaxis: {\r\n    widthYAxis: number;\r\n    widthTickmarkLines: number;\r\n    style: {\r\n      fillColor: string;\r\n      strokeColor: string;\r\n      fontColor: string;\r\n      fontSize: number;\r\n      fontName: string;\r\n    };\r\n  };\r\n  grid: {\r\n    useGridX: boolean;\r\n    useGridY: boolean;\r\n    style: {\r\n      strokeColor: string;\r\n      strokeStyle: string;\r\n    };\r\n  };\r\n  backgroundColor: string;\r\n  fullscreen: boolean;\r\n  subCharts: SubchartStateType[];\r\n  draw: Partial<Omit<DrawingTool, \"xy\">> & { isDrawing: boolean; pixXy: [number, number][] };\r\n} & InteractiveStateType;\r\n\r\n/** CalculatedChartState and Hook */\r\n\r\nexport type CalculatedChartStateType = ChartStateType & {\r\n  methods: {\r\n    addSubchart: (\r\n      chartSeries: DataSeries,\r\n      chartName: string,\r\n      indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n    ) => void;\r\n    addGraph: (\r\n      chartSeries: ChartDataset[],\r\n      chartName: string,\r\n      subchartIdx: number,\r\n      indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n    ) => void;\r\n    getSubchart: (subchartIdx: number) => SubchartStateType;\r\n    getYaxis: (subchartIdx: number, yaxisIdx: number) => YaxisStateType;\r\n    getGraph: (subchartIdx: number, yaxisIdx: number, graphIdx: number) => GraphStateType;\r\n    xToPix: (x: number, translatedX?: number) => number;\r\n    pixToX: (pixX: number, translatedX?: number) => number;\r\n    yToPix: (y: number, subchartIdx: number, yaxisIdx: number, translatedY?: number) => number;\r\n    pixToY: (pixY: number, subchartIdx: number, yaxisIdx: number, translatedY?: number) => number;\r\n  };\r\n  // drawProps: { graphs: number[][]; yaxis: { y: number; label: string }[][] }[];\r\n};\r\nexport type TypedDispatcher<Action extends ReducerActionTaskType> = React.Dispatch<ReducerActionType<Action>>;\r\nexport type ChartStateHookType<Action extends ReducerActionTaskType = ReducerActionTaskType> = [\r\n  CalculatedChartStateType,\r\n  TypedDispatcher<Action>\r\n];\r\n","export const singleChartDataSchema = {\r\n  type: \"object\",\r\n  properties: {\r\n    data: {\r\n      type: \"array\",\r\n      nullable: false,\r\n      minItems: 2,\r\n      items: {\r\n        type: \"object\",\r\n        nullable: false,\r\n        properties: {\r\n          date: {\r\n            type: \"object\",\r\n            nullable: false,\r\n            // format: \"date-time\",\r\n          },\r\n          open: { type: \"number\", nullable: false },\r\n          high: { type: \"number\", nullable: false },\r\n          low: { type: \"number\", nullable: false },\r\n          close: { type: \"number\", nullable: false },\r\n        },\r\n        required: [\"date\", \"close\"],\r\n      },\r\n    },\r\n    name: { type: \"string\", nullable: false },\r\n  },\r\n  required: [\"data\", \"name\"],\r\n};\r\nexport const chartDataSchema = {\r\n  type: \"array\",\r\n  minItems: 1,\r\n  // additionalItems: true,\r\n  items: singleChartDataSchema,\r\n};\r\n","// /** Data types */\r\n// types for single datasets\r\nexport type LineChartDataset = {\r\n  date: Date;\r\n  close: number;\r\n  volume?: number;\r\n};\r\nexport type CandleChartDataset = LineChartDataset & {\r\n  open: number;\r\n  high: number;\r\n  low: number;\r\n};\r\nexport type ChartDataset = LineChartDataset | CandleChartDataset;\r\nexport type IndicatorDataset = {\r\n  prices: (number | null)[];\r\n  date: Date;\r\n  priceLabels?: string[];\r\n};\r\nexport type Dataset = ChartDataset | IndicatorDataset;\r\n\r\n// type for dataseries\r\nexport type ChartDataSeries = ChartDataset[];\r\nexport type IndicatorDataSeries = IndicatorDataset[];\r\nexport type DataSeries = (ChartDataset | IndicatorDataset)[];\r\n\r\n// type guard for candle chart\r\nexport const isCandleChartDataset = (dataset: Dataset): dataset is CandleChartDataset => {\r\n  if (\"open\" in dataset && \"high\" in dataset && \"low\" in dataset && \"close\" in dataset) return true;\r\n  return false;\r\n};\r\n// doesn't exclude datasets with close property (like CandleChartDataset -> e.g. a CandleChartDataset will also return true)\r\nexport const isLineChartDataset = (dataset: Dataset): dataset is LineChartDataset => {\r\n  // if (!dataset) return false; \r\n  if (\"close\" in dataset) return true;\r\n  return false;\r\n};\r\nexport const isVolumeDataset = (dataset: Dataset): dataset is ChartDataset & { volume: number } => {\r\n  if (\"volume\" in dataset) return true;\r\n  return false;\r\n};\r\n\r\nexport const isIndicatorDataset = (dataset: Dataset): dataset is IndicatorDataset => {\r\n  if (\"prices\" in dataset) return true;\r\n  return false;\r\n};\r\n\r\n/** CChart Prop types */\r\n// type for chartData prop\r\nexport type ChartDataProp = { data: ChartDataset[]; name: string }[];\r\n\r\n// todo -> chart styling props\r\nexport type StyleProp = \"TODO\"; \r\n\r\n// type of CChart props\r\nexport type CChartProps = {\r\n  chartData: ChartDataProp;\r\n  style: StyleProp;\r\n  width?: number;\r\n  height?: number;\r\n  viewMode?: \"static\" | \"responsive\" | \"fullscreen\"\r\n};\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport { mdiChartBellCurve, mdiChartLine } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { ChartDataset, Dataset, isCandleChartDataset, isIndicatorDataset } from \"./Types/CChartTypes\";\r\n\r\nexport const CChartLabel = (props: {\r\n  name: string;\r\n  dataset: Dataset;\r\n  decimals?: number;\r\n  onClick?: (name?: string) => any;\r\n  top: number;\r\n}) => {\r\n  const { dataset, name, decimals, onClick, top } = props;\r\n  if (!dataset) return null;\r\n\r\n  return (\r\n    <div style={{ position: \"absolute\", top: 10 + top, left: 10 }}>\r\n      <Button\r\n        style={{textTransform: \"none\"}}\r\n        onClick={() => {\r\n          onClick?.(name);\r\n        }}\r\n        startIcon={<Icon path={isIndicatorDataset(dataset) ? mdiChartBellCurve : mdiChartLine} size={1.0} color=\"#333\" />}\r\n      >\r\n      {isIndicatorDataset(dataset) ? (\r\n        <Typography>{`${name}:${dataset.prices.map((price) => price?.toFixed(decimals)).join(\", \") || \"\"}`}</Typography>\r\n      ) : (\r\n        <Typography variant=\"body1\">\r\n          {isCandleChartDataset(dataset)\r\n            ? `${name}\r\n                O:${dataset.open.toFixed(decimals)}\r\n                H:${dataset.high.toFixed(decimals)}\r\n                L:${dataset.low.toFixed(decimals)}\r\n                C:${dataset.close.toFixed(decimals)}`\r\n            : `${name}\r\n                C:${dataset.close.toFixed(decimals)}`}\r\n        </Typography>\r\n      )}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Line, Rect, Shape } from \"react-konva\";\r\nimport { chartStateReducer } from \"./ChartState/CChartStateReducer\";\r\nimport { isIndicatorGraph, CalculatedChartStateType } from \"./Types/CChartStateTypes\";\r\nimport { getDecimals } from \"./utils\";\r\n\r\nexport const CChartCrosshair = (props: { fullState: CalculatedChartStateType }) => {\r\n  const { fullState } = props;\r\n  const containerWidth = fullState.containerSize.width - 1;\r\n  const containerHeight = fullState.containerSize.height - 1;\r\n  const { widthYAxis } = fullState.yaxis;\r\n  const { heightXAxis, heightTickMarkLines } = fullState.xaxis;\r\n\r\n  let pixYSnap: number | null = null;\r\n  let ySnap: string | null = null;\r\n  if (!!fullState.pointer.move) {\r\n    pixYSnap = fullState.pointer.move.xy[1];\r\n  }\r\n  for (let i = 0; i < fullState.subCharts.length; i++) {\r\n    const subchart = fullState.subCharts[i];\r\n    for (let j = 0; j < subchart.yaxis[0].graphs.length; j++) {\r\n      const graph = subchart.yaxis[0].graphs[j];\r\n      if (!!fullState.pointer?.chartPointer?.move?.snapDatasets?.[0])\r\n        if (fullState.pointer.chartPointer.move?.snapDatasets[0].pixYSnap !== null) {\r\n          pixYSnap = fullState.pointer.chartPointer.move.snapDatasets[0].pixYSnap;\r\n          ySnap = fullState.pointer.chartPointer.move.snapDatasets[0].ySnap;\r\n        }\r\n    }\r\n  }\r\n  let subchartIdx = -1;\r\n  if (!!fullState.pointer.move) {\r\n    const xy = fullState.pointer.move.xy[1];\r\n    subchartIdx = fullState.subCharts.findIndex((val) => val.bottom >= xy && val.top <= xy);\r\n  }\r\n  if (!ySnap && subchartIdx !== -1)\r\n    ySnap = fullState.methods\r\n      .pixToY(fullState.pointer.move?.xy[1] as number, subchartIdx, 0)\r\n      .toFixed(fullState.subCharts[subchartIdx].yaxis[0].decimals);\r\n  if (!!ySnap && subchartIdx !== -1) {\r\n    const curgraph = fullState.subCharts[subchartIdx].yaxis[0].graphs[0];\r\n    if (isIndicatorGraph(curgraph)) {\r\n      if (!!curgraph.indicator.default.decimals)\r\n        ySnap = (\r\n          Math.round(parseFloat(ySnap) * Math.pow(10, curgraph.indicator.default.decimals)) /\r\n          Math.pow(10, curgraph.indicator.default.decimals)\r\n        ).toString();\r\n    }\r\n  }\r\n\r\n  // console.log(fullState.pointer?.chartPointer?.move?.xUnlimited, fullState.xaxis.xEnd, fullState.xaxis.xStart);\r\n  // console.log(fullState.pointer.move.xy[1], fullState.subCharts[fullState.subCharts.length - 1].bottom);\r\n\r\n  return !!fullState.pointer.move && !!pixYSnap ? (\r\n    <React.Fragment>\r\n      <Line // crosshair x\r\n        x={0}\r\n        y={0}\r\n        points={[\r\n          fullState.methods.xToPix(Math.round(fullState.methods.pixToX(fullState.pointer.move.xy[0]))),\r\n          0,\r\n          fullState.methods.xToPix(Math.round(fullState.methods.pixToX(fullState.pointer.move.xy[0]))),\r\n          containerHeight - heightXAxis + heightTickMarkLines,\r\n        ]}\r\n        stroke=\"black\"\r\n        strokeWidth={1}\r\n      />\r\n\r\n      {fullState.pointer.move.xy[1] <= fullState.subCharts[fullState.subCharts.length - 1].bottom ? (\r\n        <React.Fragment>\r\n          <Line // crosshair y\r\n            x={0}\r\n            y={0}\r\n            points={[0, pixYSnap, containerWidth - widthYAxis, pixYSnap]}\r\n            stroke=\"black\"\r\n            strokeWidth={1}\r\n          />\r\n          <Shape // yaxis marker\r\n            sceneFunc={(context, shape) => {\r\n              const ctx = context._context;\r\n              if (!fullState.pointer.move) return;\r\n              const yStart = pixYSnap as number;\r\n              ctx.moveTo(containerWidth - widthYAxis, yStart);\r\n              ctx.lineTo(containerWidth - widthYAxis + 10, yStart + 10);\r\n              ctx.lineTo(containerWidth, yStart + 10);\r\n              ctx.lineTo(containerWidth, yStart + 1);\r\n              ctx.lineTo(containerWidth, yStart - 10);\r\n              ctx.lineTo(containerWidth - widthYAxis + 10, yStart - 10);\r\n              ctx.lineTo(containerWidth - widthYAxis, yStart);\r\n              // (!) Konva specific method, it is very important\r\n              context.fillStrokeShape(shape);\r\n            }}\r\n            stroke=\"black\"\r\n            fill=\"rgba(199, 0, 57, 1)\"\r\n            strokeWidth={1}\r\n          />\r\n          <Shape // yaxis marker text\r\n            sceneFunc={(context, shape) => {\r\n              const ctx = context._context;\r\n              if (!fullState.pointer.move) return;\r\n              const yStart = pixYSnap as number;\r\n              ctx.font = fullState.yaxis.style.fontSize + \"px \" + fullState.yaxis.style.fontName;\r\n              ctx.fillStyle = fullState.yaxis.style.fontColor;\r\n              ctx.textAlign = \"left\";\r\n              ctx.textBaseline = \"middle\";\r\n              ctx.fillText(\r\n                ySnap as string,\r\n                containerWidth - widthYAxis + fullState.yaxis.widthTickmarkLines + 5,\r\n                yStart // additional 5px distance to end of tickmark\r\n              );\r\n              // (!) Konva specific method, it is very important\r\n              context.fillStrokeShape(shape);\r\n            }}\r\n            // stroke=\"black\"\r\n            // strokeWidth={1}\r\n          />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {fullState.pointer?.chartPointer?.move?.xUnlimited <= fullState.xaxis.xEnd &&\r\n      fullState.pointer?.chartPointer?.move?.xUnlimited >= fullState.xaxis.xStart ? (\r\n        <React.Fragment>\r\n          <Rect // xaxis marker rect\r\n            x={fullState.methods.xToPix(Math.round(fullState.methods.pixToX(fullState.pointer.move?.xy[0]))) - 25}\r\n            y={containerHeight - heightXAxis + heightTickMarkLines + 0.5}\r\n            width={50}\r\n            height={25}\r\n            fill=\"white\"\r\n            stroke=\"black\"\r\n            strokeWidth={1}\r\n          />\r\n          <Shape // xaxis marker text\r\n            sceneFunc={(context, shape) => {\r\n              const ctx = context._context;\r\n              if (!fullState.pointer.move) return;\r\n              ctx.font = fullState.xaxis.style.fontSize + \"px \" + fullState.xaxis.style.fontName;\r\n              ctx.fillStyle = fullState.xaxis.style.fontColor;\r\n              ctx.textAlign = \"center\";\r\n              ctx.textBaseline = \"top\";\r\n\r\n              ctx.fillText(\r\n                !!fullState.pointer?.chartPointer?.move?.snapDatasets?.[0]\r\n                  ? (fullState.pointer.chartPointer.move.snapDatasets[0].dateString as string)\r\n                  : Math.round(fullState.methods.pixToX(fullState.pointer.move.xy[0])).toString(),\r\n                fullState.methods.xToPix(Math.round(fullState.methods.pixToX(fullState.pointer.move.xy[0]))),\r\n                containerHeight - heightXAxis + heightTickMarkLines + 5 + 0.5 // additional 5px distance to end of tickmark\r\n              );\r\n              // (!) Konva specific method, it is very important\r\n              context.fillStrokeShape(shape);\r\n            }}\r\n            // stroke=\"black\"\r\n            // strokeWidth={1}\r\n          />\r\n        </React.Fragment>\r\n      ) : null}\r\n\r\n      {/* ) : null} */}\r\n    </React.Fragment>\r\n  ) : null;\r\n};\r\n","import React from \"react\";\r\nimport { Shape } from \"react-konva\";\r\nimport { CandleChartDataset } from \"../Types/CChartTypes\";\r\nimport { CalculatedChartStateType, isChartGraph } from \"../Types/CChartStateTypes\";\r\n\r\nexport type CCandleChartType = {\r\n  fullState: CalculatedChartStateType;\r\n};\r\n\r\nexport const CCandleChart = (props: CCandleChartType) => {\r\n  const { fullState } = props;\r\n  const yaxis = fullState.subCharts[0].yaxis[0];\r\n  const graph = fullState.subCharts[0].yaxis[0].graphs[0];\r\n  if (!isChartGraph(graph) || !graph || !graph.curData) return null;\r\n\r\n  let curData: (CandleChartDataset & {\r\n    idx: number;\r\n  })[] = [];\r\n  let dxHalfCandle = 0;\r\n  if (0 in fullState.subCharts)\r\n    if (0 in fullState.subCharts[0].yaxis)\r\n      if (0 in fullState.subCharts[0].yaxis[0].graphs) {\r\n        curData = graph.curData as unknown as (CandleChartDataset & {\r\n          idx: number;\r\n        })[];\r\n        curData.forEach((val, valIdx) => (val.idx = valIdx));\r\n        dxHalfCandle =\r\n          fullState.xaxis.widthPerTick <= 2 ? 0 : Math.floor(0.35 * (fullState.xaxis.widthPerTick - 1));\r\n      }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Shape // candle wicks\r\n        sceneFunc={(context, shape) => {\r\n          context.beginPath();\r\n          (graph.curData as CandleChartDataset[]).forEach((dataset, datasetIdx) => {\r\n            const xPix = fullState.methods.xToPix(datasetIdx, 0) + fullState.xaxis.pixXStart;\r\n            const yPixHigh = Math.round(\r\n              fullState.methods.yToPix(dataset.high, 0, 0)\r\n            );\r\n            const yPixLow = Math.round(\r\n              fullState.methods.yToPix(dataset.low, 0, 0)\r\n            );\r\n            const yPixClose = Math.round(\r\n              fullState.methods.yToPix(dataset.close, 0, 0)\r\n            );\r\n            context.moveTo(xPix + 0.5, yPixLow + 0.5);\r\n            context.lineTo(xPix + 0.5, yPixHigh + 0.5);\r\n            if (dataset.close === dataset.open) {\r\n              context.moveTo(xPix - 2, yPixClose);\r\n              context.lineTo(xPix + 2, yPixClose);\r\n            }\r\n          });\r\n          // (!) Konva specific method, it is very important\r\n          context.closePath();\r\n          context.fillStrokeShape(shape);\r\n        }}\r\n        stroke={graph.style.candleStrokeColor}\r\n        strokeWidth={1}\r\n      />\r\n      <Shape // candle bodys upward\r\n        sceneFunc={(context, shape) => {\r\n          context.beginPath();\r\n          curData\r\n            .filter((val) => val.close >= val.open)\r\n            .forEach((gainDataset, gainDatasetIdx) => {\r\n              const xPix =\r\n                fullState.methods.xToPix(gainDataset.idx, 0) + fullState.xaxis.pixXStart;\r\n              const yPixOpen = Math.round(\r\n                fullState.methods.yToPix(\r\n                  gainDataset.open,\r\n                  0,\r\n                  0,\r\n                )\r\n              );\r\n              const yPixClose = Math.round(\r\n                fullState.methods.yToPix(\r\n                  gainDataset.close,\r\n                  0,\r\n                  0,\r\n                )\r\n              );\r\n              if (gainDataset.close !== gainDataset.open) {\r\n                if (dxHalfCandle !== 0) {\r\n                  const maxWidth =\r\n                    xPix + dxHalfCandle > fullState.xaxis.pixXEnd\r\n                      ? fullState.xaxis.pixXEnd - xPix + dxHalfCandle\r\n                      : dxHalfCandle * 2;\r\n                  context.rect(xPix + 0.5 - dxHalfCandle, yPixOpen + 0.5, maxWidth, yPixClose - yPixOpen);\r\n                } else if (dxHalfCandle === 0) {\r\n                  context.moveTo(xPix + 0.5, yPixClose);\r\n                  context.lineTo(xPix + 0.5, yPixOpen);\r\n                }\r\n              }\r\n              context.closePath();\r\n              context.fillStrokeShape(shape);\r\n            });\r\n        }}\r\n        stroke={graph.style.candleStrokeColor}\r\n        fill={graph.style.candleUpColor}\r\n        strokeWidth={1}\r\n      />\r\n      <Shape // candle bodys downward\r\n        sceneFunc={(context, shape) => {\r\n          context.beginPath();\r\n          curData\r\n            .filter((val) => val.close < val.open)\r\n            .forEach((gainDataset, gainDatasetIdx) => {\r\n              const xPix =\r\n                fullState.methods.xToPix(gainDataset.idx, 0) + fullState.xaxis.pixXStart;\r\n              const yPixOpen = Math.round(\r\n                fullState.methods.yToPix(\r\n                  gainDataset.open,\r\n                  0,\r\n                  0,\r\n                )\r\n              );\r\n              const yPixClose = Math.round(\r\n                fullState.methods.yToPix(\r\n                  gainDataset.close,\r\n                  0,\r\n                  0,\r\n                )\r\n              );\r\n              if (gainDataset.close !== gainDataset.open) {\r\n                if (dxHalfCandle !== 0) {\r\n                  const maxWidth =\r\n                    xPix + dxHalfCandle > fullState.xaxis.pixXEnd\r\n                      ? fullState.xaxis.pixXEnd - xPix + dxHalfCandle\r\n                      : dxHalfCandle * 2;\r\n                  context.rect(xPix + 0.5 - dxHalfCandle, yPixOpen + 0.5, maxWidth, yPixClose - yPixOpen);\r\n                } else if (dxHalfCandle === 0) {\r\n                  context.moveTo(xPix + 0.5, yPixClose);\r\n                  context.lineTo(xPix + 0.5, yPixOpen);\r\n                }\r\n              }\r\n              context.closePath();\r\n              context.fillStrokeShape(shape);\r\n            });\r\n        }}\r\n        stroke={graph.style.candleStrokeColor}\r\n        fill={graph.style.candleDownColor}\r\n        strokeWidth={1}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { MutableRefObject, RefObject } from \"react\";\r\n\r\n/** Null/Undefined  */\r\nexport const isNullish = (val: any): val is undefined | null => {\r\n  if (val === undefined || val === null) return true;\r\n  if (typeof val === \"number\") if (isNaN(val)) return true;\r\n  return false;\r\n};\r\n\r\n/** Number utils */\r\nexport const getDecimals = (val: number) => {\r\n  if (Math.floor(val) === val) return 0;\r\n  return val.toString().split(\".\")[1].length || 0;\r\n};\r\n\r\n/** React */\r\n// export const isValidRef = (\r\n//   ref: MutableRefObject<any | null> | RefObject<any>\r\n// ): ref is MutableRefObject<any> | (RefObject<any> & { readonly current: any }) => {\r\n//   if (!ref || !ref.current) return false;\r\n//   return true;\r\n// };\r\n// export const isEmptyRef = (ref: MutableRefObject<any | null> |  RefObject<any>): ref is MutableRefObject<null> | RefObject<null> => {\r\n//   if (!ref || !ref.current) return true;\r\n//   return false;\r\n// };\r\n\r\n// export const isEmptyDOMRef = (\r\n//   ref: RefObject<any>\r\n// ): ref is {current: null} => {\r\n//   if (!ref || !ref.current) return true;\r\n//   return false;\r\n// };\r\n\r\n// Object / Array utils\r\n// export const editDeepProp = (srcObj: {[key: string]: any} | any[], path: (number | string)[], propName: number | string) => {\r\n\r\nexport const includesOne = (array: any[], ...params: any[]): boolean => {\r\n  let res = false;\r\n  params.forEach((param) => {\r\n    if (array.includes(param)) res = true;\r\n  });\r\n  return res;\r\n};\r\n\r\n//   let newObj = srcObj;\r\n//   path.forEach((addr, addrIdx) => {\r\n//     if (typeof newObj !== \"object\") return;\r\n//     if (Array.isArray(newObj) && typeof addr === \"number\") {\r\n//       newObj= newObj[addr]\r\n//     }\r\n//     else if (typeof  newObj === \"object\" && typeof addr === \"string\"){\r\n//       newObj = (newObj as { [key: string]: any })[addr];\r\n//     }\r\n//   })\r\n//   const editedSubcharts: ChartStateType[\"subCharts\"] = [\r\n//     ...srcObj.slice(0, toolsSubIdx),\r\n//     {\r\n//       ...srcObj[toolsSubIdx],\r\n//       yaxis: [\r\n//         ...srcObj[toolsSubIdx].yaxis.slice(0, toolsYaxisIdx),\r\n//         {\r\n//           ...srcObj[toolsSubIdx].yaxis[toolsYaxisIdx],\r\n//           tools: [\r\n//             ...srcObj[toolsSubIdx].yaxis[toolsYaxisIdx].tools.slice(0, toolIdx),\r\n//             {\r\n//               ...srcObj[toolsSubIdx].yaxis[toolsYaxisIdx].tools[toolIdx],\r\n//               xy: [\r\n//                 ...srcObj[toolsSubIdx].yaxis[toolsYaxisIdx].tools[toolIdx].xy.slice(0, anchorIdx),\r\n//                 [newX, newY],\r\n//                 ...srcObj[toolsSubIdx].yaxis[toolsYaxisIdx].tools[toolIdx].xy.slice(anchorIdx + 1),\r\n//               ],\r\n//             },\r\n//             ...srcObj[toolsSubIdx].yaxis[toolsYaxisIdx].tools.slice(toolIdx + 1),\r\n//           ],\r\n//         },\r\n//         ...srcObj[toolsSubIdx].yaxis.slice(toolsYaxisIdx + 1),\r\n//       ],\r\n//     },\r\n//     ...srcObj.slice(toolsSubIdx + 1),\r\n//   ];\r\n// }\r\n\r\nconst colorNames: {[key: string]: string} = {\r\n  aliceblue: \"#f0f8ff\",\r\n  antiquewhite: \"#faebd7\",\r\n  aqua: \"#00ffff\",\r\n  aquamarine: \"#7fffd4\",\r\n  azure: \"#f0ffff\",\r\n  beige: \"#f5f5dc\",\r\n  bisque: \"#ffe4c4\",\r\n  black: \"#000000\",\r\n  blanchedalmond: \"#ffebcd\",\r\n  blue: \"#0000ff\",\r\n  blueviolet: \"#8a2be2\",\r\n  brown: \"#a52a2a\",\r\n  burlywood: \"#deb887\",\r\n  cadetblue: \"#5f9ea0\",\r\n  chartreuse: \"#7fff00\",\r\n  chocolate: \"#d2691e\",\r\n  coral: \"#ff7f50\",\r\n  cornflowerblue: \"#6495ed\",\r\n  cornsilk: \"#fff8dc\",\r\n  crimson: \"#dc143c\",\r\n  cyan: \"#00ffff\",\r\n  darkblue: \"#00008b\",\r\n  darkcyan: \"#008b8b\",\r\n  darkgoldenrod: \"#b8860b\",\r\n  darkgray: \"#a9a9a9\",\r\n  darkgreen: \"#006400\",\r\n  darkkhaki: \"#bdb76b\",\r\n  darkmagenta: \"#8b008b\",\r\n  darkolivegreen: \"#556b2f\",\r\n  darkorange: \"#ff8c00\",\r\n  darkorchid: \"#9932cc\",\r\n  darkred: \"#8b0000\",\r\n  darksalmon: \"#e9967a\",\r\n  darkseagreen: \"#8fbc8f\",\r\n  darkslateblue: \"#483d8b\",\r\n  darkslategray: \"#2f4f4f\",\r\n  darkturquoise: \"#00ced1\",\r\n  darkviolet: \"#9400d3\",\r\n  deeppink: \"#ff1493\",\r\n  deepskyblue: \"#00bfff\",\r\n  dimgray: \"#696969\",\r\n  dodgerblue: \"#1e90ff\",\r\n  firebrick: \"#b22222\",\r\n  floralwhite: \"#fffaf0\",\r\n  forestgreen: \"#228b22\",\r\n  fuchsia: \"#ff00ff\",\r\n  gainsboro: \"#dcdcdc\",\r\n  ghostwhite: \"#f8f8ff\",\r\n  gold: \"#ffd700\",\r\n  goldenrod: \"#daa520\",\r\n  gray: \"#808080\",\r\n  green: \"#008000\",\r\n  greenyellow: \"#adff2f\",\r\n  honeydew: \"#f0fff0\",\r\n  hotpink: \"#ff69b4\",\r\n  \"indianred \": \"#cd5c5c\",\r\n  indigo: \"#4b0082\",\r\n  ivory: \"#fffff0\",\r\n  khaki: \"#f0e68c\",\r\n  lavender: \"#e6e6fa\",\r\n  lavenderblush: \"#fff0f5\",\r\n  lawngreen: \"#7cfc00\",\r\n  lemonchiffon: \"#fffacd\",\r\n  lightblue: \"#add8e6\",\r\n  lightcoral: \"#f08080\",\r\n  lightcyan: \"#e0ffff\",\r\n  lightgoldenrodyellow: \"#fafad2\",\r\n  lightgrey: \"#d3d3d3\",\r\n  lightgreen: \"#90ee90\",\r\n  lightpink: \"#ffb6c1\",\r\n  lightsalmon: \"#ffa07a\",\r\n  lightseagreen: \"#20b2aa\",\r\n  lightskyblue: \"#87cefa\",\r\n  lightslategray: \"#778899\",\r\n  lightsteelblue: \"#b0c4de\",\r\n  lightyellow: \"#ffffe0\",\r\n  lime: \"#00ff00\",\r\n  limegreen: \"#32cd32\",\r\n  linen: \"#faf0e6\",\r\n  magenta: \"#ff00ff\",\r\n  maroon: \"#800000\",\r\n  mediumaquamarine: \"#66cdaa\",\r\n  mediumblue: \"#0000cd\",\r\n  mediumorchid: \"#ba55d3\",\r\n  mediumpurple: \"#9370d8\",\r\n  mediumseagreen: \"#3cb371\",\r\n  mediumslateblue: \"#7b68ee\",\r\n  mediumspringgreen: \"#00fa9a\",\r\n  mediumturquoise: \"#48d1cc\",\r\n  mediumvioletred: \"#c71585\",\r\n  midnightblue: \"#191970\",\r\n  mintcream: \"#f5fffa\",\r\n  mistyrose: \"#ffe4e1\",\r\n  moccasin: \"#ffe4b5\",\r\n  navajowhite: \"#ffdead\",\r\n  navy: \"#000080\",\r\n  oldlace: \"#fdf5e6\",\r\n  olive: \"#808000\",\r\n  olivedrab: \"#6b8e23\",\r\n  orange: \"#ffa500\",\r\n  orangered: \"#ff4500\",\r\n  orchid: \"#da70d6\",\r\n  palegoldenrod: \"#eee8aa\",\r\n  palegreen: \"#98fb98\",\r\n  paleturquoise: \"#afeeee\",\r\n  palevioletred: \"#d87093\",\r\n  papayawhip: \"#ffefd5\",\r\n  peachpuff: \"#ffdab9\",\r\n  peru: \"#cd853f\",\r\n  pink: \"#ffc0cb\",\r\n  plum: \"#dda0dd\",\r\n  powderblue: \"#b0e0e6\",\r\n  purple: \"#800080\",\r\n  rebeccapurple: \"#663399\",\r\n  red: \"#ff0000\",\r\n  rosybrown: \"#bc8f8f\",\r\n  royalblue: \"#4169e1\",\r\n  saddlebrown: \"#8b4513\",\r\n  salmon: \"#fa8072\",\r\n  sandybrown: \"#f4a460\",\r\n  seagreen: \"#2e8b57\",\r\n  seashell: \"#fff5ee\",\r\n  sienna: \"#a0522d\",\r\n  silver: \"#c0c0c0\",\r\n  skyblue: \"#87ceeb\",\r\n  slateblue: \"#6a5acd\",\r\n  slategray: \"#708090\",\r\n  snow: \"#fffafa\",\r\n  springgreen: \"#00ff7f\",\r\n  steelblue: \"#4682b4\",\r\n  tan: \"#d2b48c\",\r\n  teal: \"#008080\",\r\n  thistle: \"#d8bfd8\",\r\n  tomato: \"#ff6347\",\r\n  turquoise: \"#40e0d0\",\r\n  violet: \"#ee82ee\",\r\n  wheat: \"#f5deb3\",\r\n  white: \"#ffffff\",\r\n  whitesmoke: \"#f5f5f5\",\r\n  yellow: \"#ffff00\",\r\n  yellowgreen: \"#9acd32\",\r\n};\r\n// colors\r\nexport const colorNameToHex = (name: string) => {\r\n  if (!(name in colorNames)) return null;\r\n  return colorNames[\"name\"];\r\n};\r\nexport const colorNameToRGB = (name: string) => {\r\n  if (!(name in colorNames)) return null;\r\n  return hexToRgb(colorNames[\"name\"]);\r\n};\r\n\r\nexport const hexToRgb = (hex: string) => {\r\n  if (!hex) return null;\r\n  // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    return r + r + g + g + b + b;\r\n  });\r\n\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result\r\n    ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16),\r\n      }\r\n    : null;\r\n};\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { isIndicatorDataset } from \"../Types/CChartTypes\";\r\nimport { CalculatedChartStateType, isIndicatorGraph } from \"../Types/CChartStateTypes\";\r\nimport { isNullish } from \"../utils\";\r\n\r\nexport type ClineChartType = {\r\n  fullState: CalculatedChartStateType;\r\n  subchartIdx: number;\r\n  yaxisIdx: number;\r\n  graphIdx: number;\r\n  indSeriesIdx?: number;\r\n};\r\nexport const CLineChart = (props: ClineChartType) => {\r\n  const { fullState, subchartIdx, yaxisIdx, graphIdx, indSeriesIdx: indSeriesIdxIn } = props;\r\n  const indSeriesIdx = isNullish(indSeriesIdxIn) ? 0 : indSeriesIdxIn;\r\n  const yaxis = fullState.subCharts[subchartIdx].yaxis[yaxisIdx];\r\n  const graph = fullState.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx];\r\n  const graphVals: (number | null)[] = [];\r\n  if (Array.isArray(graph.curData) && graph.curData.length > 1) {\r\n    graphVals.push(\r\n      ...(graph.curData\r\n        .map((val, idx) => {\r\n          let price;\r\n          if (isIndicatorDataset(val)) price = val.prices[indSeriesIdx];\r\n          else price = val.close;\r\n          if (price === null) return [null, null];\r\n          return [fullState.xaxis.widthPerTick * idx, fullState.methods.yToPix(price, subchartIdx, 0, 0)];\r\n        })\r\n        .flat()\r\n        .filter((val) => val !== null) as number[])\r\n    );\r\n  }\r\n  const graphValsNN = graphVals.filter((val) => val !== null) as number[];\r\n\r\n  return (\r\n    <Line\r\n      key={`sub${subchartIdx}_graph${graphIdx}`}\r\n      x={fullState.xaxis.pixXStart}\r\n      y={fullState.methods.yToPix(0, subchartIdx, 0) - fullState.subCharts[subchartIdx].bottom}\r\n      points={[...graphValsNN]}\r\n      stroke={isIndicatorGraph(graph) ? graph.style.strokeColor[indSeriesIdx] : graph.style.strokeColor[0]}\r\n      strokeWidth={1}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Shape } from \"react-konva\";\r\nimport { LineChartDataset } from \"../Types/CChartTypes\";\r\nimport { CalculatedChartStateType, isIndicatorGraph } from \"../Types/CChartStateTypes\";\r\n\r\nexport type CBarChartType = {\r\n  fullState: CalculatedChartStateType;\r\n  subchartIdx: number;\r\n  yaxisIdx: number;\r\n  graphIdx: number;\r\n  // stroke: string;\r\n  // strokeWidth: number;\r\n};\r\nexport const CBarChart = (props: CBarChartType) => {\r\n  const { fullState, subchartIdx, yaxisIdx, graphIdx } = props;\r\n  const strokeWidth = 1;\r\n  const graph = fullState.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx];\r\n  return (\r\n    <Shape\r\n      sceneFunc={(context, shape) => {\r\n        context.beginPath();\r\n        (fullState.subCharts[0].yaxis[0].graphs[0].curData as LineChartDataset[]).forEach((dataset, datasetIdx) => {\r\n          if (!dataset.volume) return;\r\n          const xPix = fullState.methods.xToPix(datasetIdx, 0) + fullState.xaxis.pixXStart;\r\n          const yPixVol = Math.round(fullState.methods.yToPix(dataset.volume, subchartIdx, yaxisIdx, 0));\r\n          const yPix0 = Math.round(fullState.methods.yToPix(0, subchartIdx, yaxisIdx, 0));\r\n\r\n          context.moveTo(xPix + 0.5, yPix0 + 0.5);\r\n          context.lineTo(xPix + 0.5, yPixVol + 0.5);\r\n        });\r\n        // (!) Konva specific method, it is very important\r\n        context.closePath();\r\n        context.fillStrokeShape(shape);\r\n      }}\r\n    \r\n      stroke={isIndicatorGraph(graph) ? graph.style.strokeColor[0] : graph.style.strokeColor[0]}\r\n      strokeWidth={strokeWidth}\r\n    />\r\n  );\r\n};\r\n","import { PeriodsConstType } from \"../Types/CChartTimeTypes\";\r\nimport { format, getDate, getHours, getISOWeek, getMinutes, getMonth, getYear } from \"date-fns\";\r\n\r\nexport const getDateString = (date: Date, period: keyof PeriodsConstType): string => {\r\n  switch (period) {\r\n    case \"minutes\":\r\n      return format(date, \"mm\");\r\n    case \"hours\":\r\n      return format(date, \"HH\");\r\n    case \"days\":\r\n      return format(date, \"dd\");\r\n    case \"weeks\":\r\n      return format(date, \"dd\");\r\n    case \"months\":\r\n      return format(date, \"MMM\");\r\n    case \"years\":\r\n      return format(date, \"yyyy\");\r\n    default:\r\n      return \"|\";\r\n  }\r\n}; \r\n\r\nexport const getDateSubValue = (date: Date, period: keyof PeriodsConstType): number => {\r\n  switch (period) {\r\n    case \"minutes\":\r\n      return getMinutes(date);\r\n    case \"hours\":\r\n      return getHours(date);\r\n    case \"days\":\r\n      return getDate(date);\r\n    case \"weeks\":\r\n      return getISOWeek(date);\r\n    case \"months\":\r\n      return getMonth(date);\r\n    case \"years\":\r\n      return getYear(date);\r\n    default:\r\n      return 0;\r\n  }\r\n};\r\nexport const getDateObject = (date: Date) => ({\r\n  minute: getDateSubValue(date, \"minutes\"),\r\n  hour: getDateSubValue(date, \"hours\"),\r\n  day: getDateSubValue(date, \"days\"),\r\n  week: getDateSubValue(date, \"weeks\"),\r\n  month: getDateSubValue(date, \"months\"),\r\n  year: getDateSubValue(date, \"years\"),\r\n});\r\n","import { getDateObject, getDateSubValue } from \"./CChartDateTime\";\r\nimport { ChartPeriodType, DateStatType, PeriodsConstType } from \"../Types/CChartTimeTypes\";\r\nimport { DataSeries } from \"../Types/CChartTypes\";\r\nimport { ChartGraphStateType } from \"../Types/CChartStateTypes\";\r\n\r\nexport const chartPeriods: PeriodsConstType = {\r\n  minutes: { period: 60000, scaleMultiplys: [2, 5, 15, 30], range: [60000, 60000] },\r\n  hours: { period: 3600000, scaleMultiplys: [2, 4, 12], range: [3600000, 3600000] },\r\n  days: { period: 86400000, scaleMultiplys: [2], range: [86400000, 86400000] }, // special threatment!\r\n  weeks: { period: 86400000 * 7, scaleMultiplys: [2], range: [259200000, 950400000] }, // only 1 and 2 wheras 2 means 1/2 month\r\n  months: { period: 86400000 * 31, scaleMultiplys: [2, 3, 6], range: [2419200000, 2678400000] }, // months have 28-31 day :/\r\n  years: { period: 86400000 * 365, scaleMultiplys: [], range: [31536000000, 31622400000] },\r\n};\r\n\r\n/** determines chartPeriod (restrictions apply, otherwise return null) based on dataPeriod (dataPeriod repres. period with most occurances) */\r\nexport const getChartPeriod = (dataPeriod: number): ChartPeriodType | null => {\r\n  const dataPeriodKeys = Object.keys(chartPeriods) as (keyof PeriodsConstType)[];\r\n  for (let i = 0; i < dataPeriodKeys.length; i++) {\r\n    const chartPeriodKey = dataPeriodKeys[i];\r\n    const chartPeriod = chartPeriods[chartPeriodKey].period;\r\n    const chartPeriodRange = chartPeriods[chartPeriodKey].range;\r\n    if (typeof chartPeriod === \"number\")\r\n      if (dataPeriod === chartPeriod || (dataPeriod >= chartPeriodRange[0] && dataPeriod <= chartPeriodRange[1]))\r\n        return { chartPeriodName: chartPeriodKey, periodsConstIdx: i, chartPeriod: chartPeriod, multiply: 1 };\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getOptimalPeriod = (\r\n  data: DataSeries,\r\n  xStart: number,\r\n  xEnd: number,\r\n  metaData: ChartGraphStateType[\"meta\"],\r\n  noDataPortion: number,\r\n  dateStat: DateStatType\r\n): ChartPeriodType | null => {\r\n  if (!metaData.chartPeriod) return null;\r\n  const { chartPeriod, periodsConstIdx, chartPeriodName } = metaData.chartPeriod;\r\n\r\n  // const dateStat = getDateStat(data, xStart, xEnd);\r\n  const nCurrent = xEnd - xStart + 1;\r\n\r\n  const curDateStat = Object.assign({}, dateStat); //{ ...dateStat };\r\n  const nInDateStat = curDateStat.accAmt[chartPeriodName];\r\n  Object.keys(curDateStat.accAmt).forEach((key, keyIdx) => {\r\n    curDateStat.accAmt[key as keyof DateStatType[\"accAmt\"]] =\r\n      (curDateStat.accAmt[key as keyof DateStatType[\"accAmt\"]] / nInDateStat) * nCurrent;\r\n  });\r\n  const targetIntervals = 10 * (1 - noDataPortion);\r\n  let opt = null;\r\n  let optPeriod = chartPeriodName;\r\n  let optMultiply = 1;\r\n  let optConstIdx = 0;\r\n  for (let i = periodsConstIdx; i < Object.keys(chartPeriods).length; i++) {\r\n    const key = Object.keys(chartPeriods)[i] as keyof PeriodsConstType;\r\n    // higherPeriods += key + \", \";\r\n    if (key in curDateStat.accAmt) {\r\n      for (let multiply of [1, ...chartPeriods[key].scaleMultiplys]) {\r\n        if (opt !== null) {\r\n          if (\r\n            Math.abs(curDateStat.accAmt[key] / multiply - targetIntervals) <\r\n            Math.abs(opt / optMultiply - targetIntervals)\r\n          ) {\r\n            opt = curDateStat.accAmt[key];\r\n            optMultiply = multiply;\r\n            optPeriod = key;\r\n          }\r\n        } else {\r\n          // opt is just once null multiply is in first iteration always 1\r\n          opt = curDateStat.accAmt[key];\r\n          optMultiply = multiply;\r\n          optPeriod = key;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    chartPeriodName: optPeriod,\r\n    multiply: optMultiply,\r\n    chartPeriod: chartPeriods[optPeriod].period,\r\n    periodsConstIdx: optConstIdx,\r\n  };\r\n};\r\n\r\nexport const isNewYear = (date: Date, curYearDateStat: DateStatType[\"years\"], periodMultiply: 1 = 1) => {\r\n  // , periodMultiply?: number to be added as parameter -> multiply currently not supported for years\r\n  if (curYearDateStat.length > 1) return false;\r\n  const { day, week, month, year } = getDateObject(date);\r\n  const thisMonthStat = curYearDateStat[0].months[0];\r\n  if (\r\n    thisMonthStat.weeks[0].days[0].day === day &&\r\n    thisMonthStat.weeks[0].week === week &&\r\n    thisMonthStat.month === month\r\n  )\r\n    return true;\r\n  return false;\r\n};\r\n\r\nconst isNewMonth = (\r\n  date: Date,\r\n  curYearDateStat: DateStatType[\"years\"],\r\n  curMonthIdx: number,\r\n  periodMultiply: 1 | 2 | 3 | 6 = 1\r\n) => {\r\n  if (curYearDateStat.length > 1) return false;\r\n  const { day, week, month, year } = getDateObject(date);\r\n  if ((curMonthIdx + 1) % periodMultiply !== 0) return false;\r\n  if (\r\n    curYearDateStat[0].months[curMonthIdx].weeks[0].days[0].day === day &&\r\n    curYearDateStat[0].months[curMonthIdx].weeks[0].week === week\r\n  )\r\n    return true;\r\n  return false;\r\n};\r\n\r\nconst isNewIsoWeek = (\r\n  date: Date,\r\n  curYearDateStat: DateStatType[\"years\"],\r\n  curMonthIdx: number,\r\n  curWeekIdx: number,\r\n  periodMultiply: 1 | 2 = 1\r\n) => {\r\n  if (curYearDateStat.length > 1) return false;\r\n  const { day, week, month, year } = getDateObject(date);\r\n  if (\r\n    curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days[0].day === day &&\r\n    curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].week === week\r\n  ) {\r\n    if (periodMultiply === 2) {\r\n      let daysInMonth = 0;\r\n      curYearDateStat[0].months[curMonthIdx].weeks.forEach((val) => (daysInMonth += val.days.length));\r\n      let curDays = 0;\r\n      let opt = 0;\r\n      let optWeekIdx = 0;\r\n      const optimalDaysTarget = Math.round(daysInMonth / 2);\r\n      for (let i = 0; i < curYearDateStat[0].months[curMonthIdx].weeks.length; i++) {\r\n        const weekInMonth = curYearDateStat[0].months[curMonthIdx].weeks[i];\r\n        if (Math.abs(curDays + weekInMonth.days.length - optimalDaysTarget) < Math.abs(opt - optimalDaysTarget)) {\r\n          opt = curDays + weekInMonth.days.length;\r\n          optWeekIdx = i + 1;\r\n        }\r\n        curDays += weekInMonth.days.length;\r\n      }\r\n      if (curWeekIdx === optWeekIdx) return true;\r\n      return false;\r\n    } else if (periodMultiply === 1) {\r\n      if (curWeekIdx === 1 && curYearDateStat[0].months[curMonthIdx].weeks[0].days.length < 3) return false;\r\n      if (\r\n        curWeekIdx === curYearDateStat[0].months[curMonthIdx].weeks.length - 1 &&\r\n        curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days.length < 3\r\n      )\r\n        return false;\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nconst isNewDay = (\r\n  date: Date,\r\n  curYearDateStat: DateStatType[\"years\"],\r\n  curMonthIdx: number,\r\n  curWeekIdx: number,\r\n  curDayIdx: number,\r\n  periodMultiply: 1 | 2 = 1\r\n) => {\r\n  const day = getDateSubValue(date, \"days\");\r\n  if (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days[curDayIdx].day === day && periodMultiply === 1)\r\n    return true;\r\n  if (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days[curDayIdx].day === day && periodMultiply === 2) {\r\n    if (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days.length <= 3) return false; // weeks with up to 3 days are not diveded\r\n    if (\r\n      (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days.length === 4 &&\r\n        (curDayIdx === 0 || curDayIdx === 2)) ||\r\n      (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days.length === 5 &&\r\n        (curDayIdx === 0 || curDayIdx === 2)) ||\r\n      (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days.length === 6 &&\r\n        (curDayIdx === 0 || curDayIdx === 2 || curDayIdx === 4)) ||\r\n      (curYearDateStat[0].months[curMonthIdx].weeks[curWeekIdx].days.length === 7 &&\r\n        (curDayIdx === 0 || curDayIdx === 2 || curDayIdx === 5))\r\n    )\r\n      return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const isNewPeriod = (\r\n  //   data: ChartData,\r\n  date: Date,\r\n  dateStat: DateStatType,\r\n  chartPeriod: ChartPeriodType,\r\n  optPeriod: ChartPeriodType\r\n  //   xStart: number,\r\n  //   xEnd: number\r\n) => {\r\n  if (!chartPeriod || !optPeriod || !dateStat) return null;\r\n  const { chartPeriodName: optPeriodName, multiply: optMultiply } = optPeriod;\r\n  const year = getDateSubValue(date, \"years\");\r\n  const month = getDateSubValue(date, \"months\");\r\n  const week = getDateSubValue(date, \"weeks\");\r\n  const day = getDateSubValue(date, \"days\");\r\n\r\n  const curYearStat = dateStat.years.filter((e) => e.year === year);\r\n  // console.log(month, curYearStat, dateStat);\r\n  const curMonthStat = curYearStat[0].months.filter((e) => e.month === month);\r\n  const curMonthStatIdx = curYearStat[0].months.indexOf(curMonthStat[0]);\r\n\r\n  const curWeekStat = curMonthStat[0].weeks.filter((e) => e.week === week);\r\n  const curWeekStatIdx = curYearStat[0].months[curMonthStatIdx].weeks.indexOf(curWeekStat[0]);\r\n  const curDayStat = curWeekStat[0].days.filter((e) => e.day === day);\r\n  const curDayStatIdx = curYearStat[0].months[curMonthStatIdx].weeks[curWeekStatIdx].days.indexOf(curDayStat[0]);\r\n\r\n  if (chartPeriod.chartPeriodName === optPeriodName && optMultiply === 1) return optPeriodName;\r\n  // if (chartPeriod.chartPeriodName === optPeriodName && optMultiply !== 1) return optPeriodName; //// TODO\r\n  if (optPeriodName === \"days\") {\r\n    if (isNewYear(date, curYearStat)) return \"years\";\r\n    if (isNewMonth(date, curYearStat, curMonthStatIdx, 1)) return \"months\";\r\n    if (isNewIsoWeek(date, curYearStat, curMonthStatIdx, curWeekStatIdx, optMultiply as 1 | 2)) return \"weeks\";\r\n    if (isNewDay(date, curYearStat, curMonthStatIdx, curWeekStatIdx, curDayStatIdx, optMultiply as 1 | 2))\r\n      return \"days\";\r\n    return null;\r\n  }\r\n  if (optPeriodName === \"weeks\") {\r\n    if (isNewYear(date, curYearStat)) return \"years\";\r\n    if (isNewMonth(date, curYearStat, curMonthStatIdx, 1)) return \"months\";\r\n    if (isNewIsoWeek(date, curYearStat, curMonthStatIdx, curWeekStatIdx, optMultiply as 1 | 2)) return optPeriodName;\r\n    return null;\r\n  }\r\n  if (optPeriodName === \"months\") {\r\n    if (curMonthStat[0].weeks[0].days[0].day === day) return optPeriodName;\r\n    else return null;\r\n  }\r\n  if (optPeriodName === \"years\") {\r\n    if (curYearStat[0].months[0].weeks[0].days[0].day === day) return optPeriodName;\r\n    return null;\r\n  }\r\n  return null;\r\n};\r\n","import { getISOWeek } from \"date-fns\";\r\nimport { getDateStat } from \"./Time/CChartDateStat\";\r\nimport { getDateSubValue } from \"./Time/CChartDateTime\";\r\nimport { getChartPeriod } from \"./Time/CChartPeriod\";\r\nimport { DataSeries, ChartDataset, IndicatorDataset, isCandleChartDataset, IndicatorDataSeries } from \"./Types/CChartTypes\";\r\nimport {\r\n  isIndicatorGraph,\r\n  SubchartStateType,\r\n  YaxisStateType,\r\n  AdditionalIndicatorGraphStateType,\r\n  IndicatorGraphStateType,\r\n  ChartGraphStateType,\r\n  GraphStateType,\r\n} from \"./Types/CChartStateTypes\";\r\nimport { getDecimals } from \"./utils\";\r\n// import { getDataDateStat } from \"./CChartDate\";\r\n// import { CandleChartDataset, CChartViewerInternalState, ChartDataset, GraphProps } from \"./CChartViewer\";\r\n\r\nexport const getGraphMetaData = (dataSeries: ChartDataset[]): ChartGraphStateType[\"meta\"] & { decimals: number } => {\r\n  // get nData\r\n  const nData = dataSeries.length;\r\n\r\n  // local function, ts seems not to accept Date types as number\r\n  const getDeltaT = (dataPoint1: ChartDataset, dataPoint0: ChartDataset) =>\r\n    (dataPoint1.date as unknown as number) - (dataPoint0.date as unknown as number);\r\n\r\n  // loop data -> guess period, tradingDaysPerWeek (and confidence level=occurences in percent) and get decimals\r\n  const dT1 = getDeltaT(dataSeries[1], dataSeries[0]);\r\n  let deltaPeriods = [{ dT: dT1, amt: 1 }];\r\n  let decimals = 0;\r\n  let curWeek = getDateSubValue(dataSeries[0].date, \"weeks\"); //  getISOWeek(dataSeries[0].date);\r\n  let curYear = getDateSubValue(dataSeries[0].date, \"years\"); //dataSeries[0].date.getFullYear();\r\n  let curWeekDays = 0;\r\n  let weekDays: { amtDays: number; occ: number }[] = [];\r\n  for (let i = 0; i < nData; i++) {\r\n    // heuristic guess of period using simple stat of delta Periods (N=n-1)\r\n    if (i >= 2) {\r\n      // start with 2, iteration i=1 is done outside for loop\r\n      const deltaPeriod = getDeltaT(dataSeries[i], dataSeries[i - 1]);\r\n      // loop thru deltaPeriods already determined in prev iterations\r\n      for (let j = 0; j < deltaPeriods.length; j++) {\r\n        const savedDeltaPeriod = deltaPeriods[j];\r\n        if (savedDeltaPeriod.dT === deltaPeriod) {\r\n          deltaPeriods[j].amt++;\r\n          break;\r\n        } else if (j === deltaPeriods.length - 1) deltaPeriods.push({ dT: deltaPeriod, amt: 1 });\r\n      }\r\n    }\r\n    // heuristic guess of tradingDaysPerWeek\r\n    const iDataWeek = getISOWeek(dataSeries[i].date);\r\n    const iyear = getDateSubValue(dataSeries[i].date, \"years\"); //.getFullYear(); ;\r\n    if (iDataWeek > curWeek || iyear > curYear || i === nData - 1) {\r\n      // eslint-disable-next-line no-loop-func\r\n      const weekDaysFiltered = weekDays.filter((e) => e.amtDays === curWeekDays);\r\n      if (weekDaysFiltered.length > 0) {\r\n        if (weekDaysFiltered.length > 1) console.log(\"warning - internal error determing GraphMetaData\");\r\n        const weekDayIdx = weekDays.indexOf(weekDaysFiltered[0]);\r\n        weekDays[weekDayIdx].occ++;\r\n      } else if (weekDaysFiltered.length === 0) {\r\n        weekDays.push({ amtDays: curWeekDays, occ: 1 });\r\n      }\r\n      curWeek = iDataWeek;\r\n      curWeekDays = 1;\r\n      curYear = iyear;\r\n    } else {\r\n      curWeekDays++;\r\n    }\r\n\r\n    // determine max amount of decimals found in data\r\n    const datasetDecimals = [getDecimals(dataSeries[i].close)];\r\n    const curDataset = dataSeries[i]; //ts seems not to cast\r\n    if (isCandleChartDataset(curDataset)) {\r\n      datasetDecimals.push(getDecimals(curDataset.open));\r\n      datasetDecimals.push(getDecimals(curDataset.high));\r\n      datasetDecimals.push(getDecimals(curDataset.low));\r\n    }\r\n    const maxDecimals = Math.max(...datasetDecimals);\r\n    if (maxDecimals > decimals) decimals = maxDecimals;\r\n  }\r\n\r\n  // extract desired period data from deltaPeriod stat\r\n  let deltaTs = deltaPeriods.map((item) => item.dT);\r\n  let amts = deltaPeriods.map((item) => item.amt);\r\n  let maxIdx = amts.reduce((maxIdx, val, i, arr) => (val > arr[maxIdx] ? i : maxIdx), 0); //\r\n  // extract desired tradingDaysPerWeek data from weekDays stat\r\n  const maxDaysPerWeekOccurences = weekDays.map((val) => val.occ);\r\n  let totalOcc = 0;\r\n  weekDays.forEach((val) => (totalOcc += val.occ));\r\n  const maxDaysPerWeekOccIdx = maxDaysPerWeekOccurences.reduce(\r\n    (maxIdx, val, i, arr) => (val > arr[maxIdx] ? i : maxIdx),\r\n    0\r\n  );\r\n  const maxDaysPerWeek = weekDays[maxDaysPerWeekOccIdx].amtDays;\r\n  const maxDaysPerWeekGuessConfidence = weekDays[maxDaysPerWeekOccIdx].occ / totalOcc;\r\n\r\n  // get chartperiod\r\n  const chartPeriod = getChartPeriod(deltaTs[maxIdx]);\r\n  return {\r\n    nData: nData,\r\n    dataPeriod: deltaTs[maxIdx],\r\n    chartPeriod: chartPeriod,\r\n    periodGuessConfidence: amts[maxIdx] / nData,\r\n    tradingDaysPerWeek: maxDaysPerWeek,\r\n    tradingDaysPerWeekGuessConfidence: maxDaysPerWeekGuessConfidence,\r\n    type: \"candlechart\",\r\n    decimals: decimals,\r\n  };\r\n};\r\n\r\nexport const createSubChartModel = (\r\n  top: number,\r\n  bottom: number,\r\n  chartData: ChartDataset[],\r\n  chartName: string,\r\n  style?: ChartGraphStateType[\"style\"] | IndicatorGraphStateType[\"style\"],\r\n  indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n): SubchartStateType => {\r\n  return {\r\n    yaxis: [createYaxisModel(chartData, chartName, style, indicator)],\r\n    top: top,\r\n    bottom: bottom,\r\n  };\r\n};\r\n\r\nexport const createYaxisModel = (\r\n  chartData: ChartDataset[],\r\n  chartName: string,\r\n  style?: ChartGraphStateType[\"style\"] | IndicatorGraphStateType[\"style\"],\r\n  indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n): YaxisStateType => {\r\n  const newGraph = !!indicator\r\n    ? createIndicatorGraphModel(chartData, chartName, indicator, style as IndicatorGraphStateType[\"style\"])\r\n    : createChartGraphModel(chartData, chartName, style as ChartGraphStateType[\"style\"]);\r\n  return {\r\n    graphs: [{ ...(newGraph as any) }],\r\n    decimals: newGraph.decimals,\r\n    tools: [],\r\n    translatedY: 0,\r\n    optIntervalY: 0,\r\n    heightPerPt: 0,\r\n    drawTicks: [],\r\n  };\r\n};\r\n\r\nexport const createChartGraphModel = (\r\n  chartData: ChartDataset[],\r\n  chartName: string,\r\n  style?: GraphStateType[\"style\"]\r\n): ChartGraphStateType => {\r\n  const { decimals, ...graphProps } = getGraphMetaData(chartData);\r\n  const dateStat = getDateStat(chartData, 0, chartData.length - 1);\r\n  return {\r\n    data: chartData,\r\n    meta: graphProps,\r\n    // dateStat: dateStat,\r\n    style: {\r\n      strokeColor: [\"#000\"],\r\n      candleStrokeColor: \"#666\",\r\n      candleDownColor: \"rgb(199, 0, 57)\",\r\n      candleUpColor: \"#009688\",\r\n      ...style,\r\n    },\r\n    yMax: 0,\r\n    yMaxExact: 0,\r\n    yMin: 0,\r\n    yMinExact: 0,\r\n    // drawPixXy: [],\r\n    datasets: { first: null, last: null },\r\n    dateStat: dateStat,\r\n    type: \"chart\",\r\n    name: chartName,\r\n    decimals: decimals,\r\n  };\r\n  \r\n};\r\nexport const createIndicatorGraphModel = (\r\n  chartData: ChartDataset[],\r\n  chartName: string,\r\n  indicator: AdditionalIndicatorGraphStateType[\"indicator\"],\r\n  style?: IndicatorGraphStateType[\"style\"]\r\n): IndicatorGraphStateType => {\r\n  const indicatorData: IndicatorDataSeries = indicator.indicatorFn?.(\r\n    chartData,\r\n    chartName,\r\n    ...indicator.params.map((val) => val.val)\r\n  );\r\n  const { decimals: decimalsData, ...graphProps } = getGraphMetaData(chartData); //only decimals necessary!\r\n  const decimals = !!indicator.default.decimals ? indicator.default.decimals : decimalsData;\r\n  // const dateStat = getDateStat(chartData, 0, chartData.length - 1);\r\n  return {\r\n    data: indicatorData,\r\n    type: \"indicator\",\r\n    name: indicator.name, //chartName,\r\n    decimals: decimals,\r\n    style: {\r\n      ...style,\r\n      strokeColor: style?.strokeColor || [\"#00ffff\"],\r\n    },\r\n    yMax: 0,\r\n    yMaxExact: 0,\r\n    yMin: 0,\r\n    yMinExact: 0,\r\n    // drawPixXy: [],\r\n    datasets: { first: null, last: null },\r\n    indicator,\r\n  };\r\n};\r\n","import { getDateSubValue } from \"./CChartDateTime\";\r\nimport {\r\n  DateStatType,\r\n  PeriodsConstType,\r\n  DateStatYearType,\r\n  DateStatMonthType,\r\n  DateStatWeekType,\r\n  DateStatDayType,\r\n} from \"../Types/CChartTimeTypes\";\r\nimport { DataSeries } from \"../Types/CChartTypes\";\r\n\r\nexport const getDateStat = (data: DataSeries, xStart: number, xEnd: number) => {\r\n  let stat: DateStatType = { years: [], accAmt: { years: 0, months: 0, weeks: 0, days: 0, hours: 0, minutes: 0 } };\r\n\r\n  const makeSingleDayStat = (day: number): DateStatDayType => ({ day: day, hours: [] });\r\n  const makeSingleWeekStat = (week: number, day: number): DateStatWeekType => ({\r\n    week: week,\r\n    days: [makeSingleDayStat(day)],\r\n  });\r\n  const makeSingleMonthStat = (month: number, week: number, day: number): DateStatMonthType => ({\r\n    month: month,\r\n    weeks: [makeSingleWeekStat(week, day)],\r\n  });\r\n  const makeSingleYearStat = (year: number, month: number, week: number, day: number): DateStatYearType => ({\r\n    year: year,\r\n    months: [makeSingleMonthStat(month, week, day)],\r\n  });\r\n  const incrementPeriodAccAmt = (period: keyof PeriodsConstType) => {\r\n    if (period === \"years\") stat.accAmt.years++;\r\n    if ([\"years\", \"months\"].includes(period)) stat.accAmt.months++;\r\n    if ([\"years\", \"months\", \"weeks\"].includes(period)) stat.accAmt.weeks++;\r\n    if ([\"years\", \"months\", \"weeks\", \"days\"].includes(period)) stat.accAmt.days++;\r\n  };\r\n\r\n  for (let i = xStart; i <= xEnd; i++) {\r\n    const year = getDateSubValue(data[i].date, \"years\");\r\n    const month = getDateSubValue(data[i].date, \"months\");\r\n    const week = getDateSubValue(data[i].date, \"weeks\");\r\n    const day = getDateSubValue(data[i].date, \"days\");\r\n\r\n    const addPeriod = (period: keyof PeriodsConstType, curStatIdx: number[]) => {\r\n      if (period === \"years\") stat.years.push(makeSingleYearStat(year, month, week, day));\r\n      if (period === \"months\") stat.years[curStatIdx[0]].months.push(makeSingleMonthStat(month, week, day));\r\n      if (period === \"weeks\") stat.years[curStatIdx[0]].months[curStatIdx[1]].weeks.push(makeSingleWeekStat(week, day));\r\n      if (period === \"days\")\r\n        stat.years[curStatIdx[0]].months[curStatIdx[1]].weeks[curStatIdx[2]].days.push(makeSingleDayStat(day));\r\n    };\r\n\r\n    const addOrIncrementPeriod = (\r\n      period: keyof PeriodsConstType,\r\n      periodStat: DateStatType,\r\n      curStatIdx: number[] = []\r\n    ): null | true => {\r\n      // search current Data's date in stat (resp it's sub-period-value)\r\n      let periodStatFilter: DateStatYearType[] | DateStatDayType[] | DateStatWeekType[] | DateStatMonthType[] | null =\r\n        null;\r\n      let filteredStatIdx = -1;\r\n      if (period === \"years\") {\r\n        periodStatFilter = (periodStat.years as DateStatYearType[]).filter((e) => e.year === year);\r\n        if (0 in periodStatFilter) filteredStatIdx = stat.years.indexOf(periodStatFilter[0]);\r\n      } else if (period === \"months\") {\r\n        if (curStatIdx.length < 1) return null;\r\n        const monthsStat = periodStat.years[curStatIdx[0]].months as DateStatMonthType[];\r\n        periodStatFilter = monthsStat.filter((e) => e.month === month);\r\n        if (0 in periodStatFilter) filteredStatIdx = stat.years[curStatIdx[0]].months.indexOf(periodStatFilter[0]);\r\n      } else if (period === \"weeks\") {\r\n        if (curStatIdx.length < 2) return null;\r\n        const weeksStat = periodStat.years[curStatIdx[0]].months[curStatIdx[1]].weeks as DateStatWeekType[];\r\n        periodStatFilter = weeksStat.filter((e) => e.week === week);\r\n        if (0 in periodStatFilter)\r\n          filteredStatIdx = stat.years[curStatIdx[0]].months[curStatIdx[1]].weeks.indexOf(periodStatFilter[0]);\r\n      } else if (period === \"days\") {\r\n        if (curStatIdx.length < 3) return null;\r\n        const daysStat = periodStat.years[curStatIdx[0]].months[curStatIdx[1]].weeks[curStatIdx[2]]\r\n          .days as DateStatDayType[];\r\n        periodStatFilter = daysStat.filter((e) => e.day === day);\r\n        if (0 in periodStatFilter)\r\n          filteredStatIdx = stat.years[curStatIdx[0]].months[curStatIdx[1]].weeks[curStatIdx[2]].days.indexOf(\r\n            periodStatFilter[0]\r\n          );\r\n      }\r\n      if (!periodStatFilter) return null; // will not occure if period is provided acc. to it's type\r\n\r\n      // period doesn't exist yet in stat\r\n      if (periodStatFilter.length === 0) {\r\n        incrementPeriodAccAmt(period);\r\n        const newPeriodStat =\r\n          period === \"years\"\r\n            ? makeSingleYearStat(year, month, week, day)\r\n            : period === \"months\"\r\n            ? makeSingleMonthStat(month, week, day)\r\n            : period === \"weeks\"\r\n            ? makeSingleWeekStat(week, day)\r\n            : period === \"days\"\r\n            ? makeSingleDayStat(day)\r\n            : null;\r\n        if (!newPeriodStat) return null; // will not occure if period is provided acc. to it's type\r\n        addPeriod(period, curStatIdx);\r\n        return true;\r\n      } else {\r\n        // period already exists in stat -> check next lower subperiod\r\n        const nextLowerPeriod =\r\n          period === \"years\" ? \"months\" : period === \"months\" ? \"weeks\" : period === \"weeks\" ? \"days\" : null;\r\n        if (!nextLowerPeriod) return null;\r\n        if (filteredStatIdx === -1) return null;\r\n        return addOrIncrementPeriod(nextLowerPeriod, periodStat, [...curStatIdx, filteredStatIdx]);\r\n      }\r\n    };\r\n    addOrIncrementPeriod(\"years\", stat);\r\n  }\r\n  return stat;\r\n};\r\n","import { createChartGraphModel, createIndicatorGraphModel, createSubChartModel } from \"../CChartModel\";\r\n// import { getGraphColors, graphColorsLight } from \"../Archiv/CChartVals\";\r\nimport { ChartDataSeries, ChartDataset, DataSeries } from \"../Types/CChartTypes\";\r\n\r\nimport {\r\n  AdditionalChartGraphStateType,\r\n  AdditionalIndicatorGraphStateType,\r\n  ChartGraphStateType,\r\n  ChartStateType,\r\n  GraphStateType,\r\n  IndicatorGraphStateType,\r\n  isChartGraph,\r\n  isIndicatorGraph,\r\n} from \"../Types/CChartStateTypes\";\r\nexport type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> & U[keyof U];\r\nexport type ExcludeEmpty<T> = T extends AtLeastOne<T> ? T : never;\r\n\r\nexport const graphColorsLight: string[] = [\"#666\", \"#0693E3\", \"#f50057\", \"#00D084\", \"#FF6900\", \"#bd10e0\", \"#bbb\"];\r\nexport const getGraphColors = (colorArr: string[], idx: number) => colorArr[idx % colorArr.length];\r\nexport const getLightGraphColors = (idx: number) => getGraphColors(graphColorsLight, idx);\r\n\r\nexport type ReducerActionTaskType =\r\n  | \"addSubchart\"\r\n  | \"addGraph\"\r\n  // | \"draw\"\r\n  | \"setBackgroundColor\"\r\n  | \"setAxisFillColor\"\r\n  | \"setAxisStrokeColor\"\r\n  | \"setAxisTextColor\"\r\n  | \"toggleXaxisGrid\"\r\n  | \"toggleYaxisGrid\"\r\n  | \"setGridStrokeColor\"\r\n  | \"setLineChartStrokeColor\"\r\n  | \"setCandleChartUpColor\"\r\n  | \"setCandleChartDownColor\"\r\n  | \"setCandleChartStrokeColor\"\r\n  | \"setIndicatorParam\"\r\n  | \"updateInteractionState\"\r\n  | \"setToolStrokeColor\"\r\n  | \"setToolchorColor\"\r\n  | \"setHlineYlevel\"\r\n  | \"toggleFullscreen\"\r\n  | \"removeSubchart\"\r\n  | \"removeGraph\"\r\n  | {};\r\n\r\nexport type ReducerActionType<T extends ReducerActionTaskType = {}> = {\r\n  task: T;\r\n  params: T extends \"addSubchart\"\r\n    ? {\r\n        chartSeries: DataSeries;\r\n        chartName: string;\r\n        indicator?: AdditionalIndicatorGraphStateType[\"indicator\"];\r\n        containerHeight: number; // should not be\r\n      }\r\n    : T extends \"removeSubchart\"\r\n    ? {\r\n        subchartIdx: number;\r\n      }\r\n    : T extends \"removeGraph\"\r\n    ? {\r\n        subchartIdx: number;\r\n        yaxisIdx: number;\r\n        graphIdx: number;\r\n      }\r\n    : T extends \"addGraph\"\r\n    ? {\r\n        chartSeries: DataSeries;\r\n        chartName: string;\r\n        subchartIdx: number;\r\n        indicator?: AdditionalIndicatorGraphStateType[\"indicator\"];\r\n      }\r\n    : T extends \"draw\"\r\n    ? {\r\n        type?: ChartStateType[\"draw\"][\"type\"];\r\n        xy?: [number, number];\r\n        subchartIdx: number;\r\n      }\r\n    : T extends\r\n        | \"setBackgroundColor\"\r\n        | \"setAxisFillColor\"\r\n        | \"setAxisStrokeColor\"\r\n        | \"setAxisTextColor\"\r\n        | \"setGridStrokeColor\"\r\n    ? { color: string }\r\n    : T extends \"toggleXaxisGrid\" | \"toggleYaxisGrid\" | \"toggleFullscreen\"\r\n    ? {}\r\n    : T extends\r\n        | \"setLineChartStrokeColor\"\r\n        | \"setCandleChartUpColor\"\r\n        | \"setCandleChartDownColor\"\r\n        | \"setCandleChartStrokeColor\"\r\n    ? { color: string; subchartIdx: number; yaxisIdx: number; graphIdx: number }\r\n    : T extends \"setToolStrokeColor\" | \"setToolAnchorColor\"\r\n    ? { color: string; subchartIdx: number; yaxisIdx: number; toolIdx: number }\r\n    : T extends \"setIndicatorParam\"\r\n    ? {\r\n        subchartIdx: number;\r\n        yaxisIdx: number;\r\n        graphIdx: number;\r\n        paramIdx: number;\r\n        val: any;\r\n      }\r\n    : T extends \"setHlineYlevel\"\r\n    ? { subchartIdx: number; yaxisIdx: number; toolIdx: number; val: number }\r\n    : T extends \"updateInteractionState\"\r\n    ? {\r\n        newState: ChartStateType;\r\n        // resizeSubchartObj?: {\r\n        //   subchartIdx: number;\r\n        //   newBottom: number;\r\n        // } | null;\r\n        // editToolObj?: {\r\n        //   resizeInitSubchartIdx: [number, number, number, number][];\r\n        //   newPosition: [number, number];\r\n        // } | null;\r\n      }\r\n    : {};\r\n};\r\n\r\nexport const isAddSubchartAction = (action: ReducerActionType): action is ReducerActionType<\"addSubchart\"> =>\r\n  action.task === \"addSubchart\";\r\nexport const isAddGraphAction = (action: ReducerActionType): action is ReducerActionType<\"addGraph\"> =>\r\n  action.task === \"addGraph\";\r\n// export const isDrawAction = (action: ReducerActionType): action is ReducerActionType<\"draw\"> => action.task === \"draw\";\r\nexport const isSetBackgroundColorAction = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setBackgroundColor\"> => action.task === \"setBackgroundColor\";\r\nexport const isSetAxisFillColorAction = (action: ReducerActionType): action is ReducerActionType<\"setAxisFillColor\"> =>\r\n  action.task === \"setAxisFillColor\";\r\nexport const isSetAxisStrokeColorAction = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setAxisStrokeColor\"> => action.task === \"setAxisStrokeColor\";\r\nexport const isSetAxisTextColorAction = (action: ReducerActionType): action is ReducerActionType<\"setAxisTextColor\"> =>\r\n  action.task === \"setAxisTextColor\";\r\nexport const isToggleXaxisGridAction = (action: ReducerActionType): action is ReducerActionType<\"toggleXaxisGrid\"> =>\r\n  action.task === \"toggleXaxisGrid\";\r\nexport const isToggleYaxisGridAction = (action: ReducerActionType): action is ReducerActionType<\"toggleYaxisGrid\"> =>\r\n  action.task === \"toggleYaxisGrid\";\r\nexport const isSetLineChartStrokeColor = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setLineChartStrokeColor\"> => action.task === \"setLineChartStrokeColor\";\r\nexport const isSetCandleChartUpColor = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setCandleChartUpColor\"> => action.task === \"setCandleChartUpColor\";\r\nexport const isSetCandleChartDownColor = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setCandleChartDownColor\"> => action.task === \"setCandleChartDownColor\";\r\nexport const isSetCandleChartStrokeColor = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setCandleChartStrokeColor\"> => action.task === \"setCandleChartStrokeColor\";\r\nexport const isSetIndicatorParam = (action: ReducerActionType): action is ReducerActionType<\"setIndicatorParam\"> =>\r\n  action.task === \"setIndicatorParam\";\r\nexport const isUpdateInteractionState = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"updateInteractionState\"> => action.task === \"updateInteractionState\";\r\nexport const isSetToolStrokeColorAction = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setToolStrokeColor\"> => action.task === \"setToolStrokeColor\";\r\nexport const isSetToolAnchorColor = (action: ReducerActionType): action is ReducerActionType<\"setToolAnchorColor\"> =>\r\n  action.task === \"setToolAnchorColor\";\r\nexport const isSetHlineYlevelAction = (action: ReducerActionType): action is ReducerActionType<\"setHlineYlevel\"> =>\r\n  action.task === \"setHlineYlevel\";\r\nexport const isDrawAction = (action: ReducerActionType): action is ReducerActionType<\"draw\"> => action.task === \"draw\";\r\nexport const isToggleFullscreenAction = (action: ReducerActionType): action is ReducerActionType<\"toggleFullscreen\"> =>\r\n  action.task === \"toggleFullscreen\";\r\nexport const isRemoveSubchartAction = (action: ReducerActionType): action is ReducerActionType<\"removeSubchart\"> =>\r\n  action.task === \"removeSubchart\";\r\nexport const isRemoveGraphAction = (action: ReducerActionType): action is ReducerActionType<\"removeGraph\"> =>\r\n  action.task === \"removeGraph\";\r\nexport const isSetGridStrokeColorAction = (\r\n  action: ReducerActionType\r\n): action is ReducerActionType<\"setGridStrokeColor\"> => action.task === \"setGridStrokeColor\";\r\n\r\nexport const chartStateReducer = <T>(current: ChartStateType, action: ReducerActionType<T>): ChartStateType => {\r\n  // addSubchart\r\n  if (isAddSubchartAction(action)) {\r\n    // currently all new subcharts are indicators!\r\n    const chartSeries = action.params.chartSeries;\r\n    const chartName = action.params.chartName;\r\n    const indicator = action.params.indicator;\r\n    const containerHeight = action.params.containerHeight;\r\n    const bottom = containerHeight - current.xaxis.heightXAxis;\r\n    const minMainHeight = 250;\r\n    const heightNewSubchart = Math.min(150, (bottom - minMainHeight) / (current.subCharts.length - 1 + 1));\r\n    const top = current.subCharts.length === 0 ? 0 : bottom - Math.round(heightNewSubchart);\r\n    const style = !!indicator\r\n      ? { strokeColor: [getGraphColors(graphColorsLight, 0)] }\r\n      : { strokeColor: getGraphColors(graphColorsLight, 0) };\r\n\r\n    if (current.subCharts.length === 0)\r\n      return {\r\n        ...current,\r\n        subCharts: [\r\n          createSubChartModel(\r\n            top,\r\n            bottom,\r\n            chartSeries as ChartDataset[],\r\n            chartName,\r\n            style as ChartGraphStateType[\"style\"] | IndicatorGraphStateType[\"style\"]\r\n          ),\r\n        ],\r\n      };\r\n    else {\r\n      const mainHeight = current.subCharts[0].bottom - current.subCharts[0].top;\r\n      const maxHeight =\r\n        mainHeight - heightNewSubchart < minMainHeight\r\n          ? (bottom - minMainHeight - heightNewSubchart) / (current.subCharts.length - 1)\r\n          : null;\r\n\r\n      const subchart = createSubChartModel(\r\n        top,\r\n        bottom,\r\n        chartSeries as ChartDataset[],\r\n        chartName,\r\n        style as ChartGraphStateType[\"style\"] | IndicatorGraphStateType[\"style\"],\r\n        indicator\r\n      );\r\n      const newGraph = subchart.yaxis[0].graphs[0];\r\n\r\n      if (isIndicatorGraph(newGraph) && newGraph.data[newGraph.data.length - 1].prices.length > 1)\r\n        (newGraph as unknown as IndicatorGraphStateType).style.strokeColor = newGraph.data[\r\n          newGraph.data.length - 1\r\n        ].prices.map((x, idx) => getGraphColors(graphColorsLight, idx));\r\n\r\n      return {\r\n        ...current,\r\n        subCharts: [\r\n          ...current.subCharts.map((subChart, subChartIdx) => {\r\n            if (subChartIdx === 0) {\r\n              subChart.bottom = Math.max(subChart.bottom - heightNewSubchart, minMainHeight);\r\n              subChart.top = 0;\r\n            } else if (subChartIdx === current.subCharts.length - 1) {\r\n              subChart.top = current.subCharts[subChartIdx - 1].bottom;\r\n              subChart.bottom = top;\r\n            } else {\r\n              subChart.top = current.subCharts[subChartIdx - 1].bottom;\r\n              subChart.bottom = !!maxHeight\r\n                ? Math.round(subChart.top + maxHeight)\r\n                : subChart.bottom - heightNewSubchart;\r\n            }\r\n            return subChart;\r\n          }),\r\n          subchart,\r\n        ],\r\n      };\r\n    }\r\n  } else if (isRemoveSubchartAction(action)) {\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const dHeight = current.subCharts[subchartIdx].bottom - current.subCharts[subchartIdx].top;\r\n    const dHeightEach = Math.floor(dHeight / (current.subCharts.length - 1));\r\n    const dHeightRest = dHeight % (current.subCharts.length - 1);\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.slice(0, subchartIdx).map((subchartSliced, subchartSlicedIdx) => ({\r\n          ...subchartSliced,\r\n          top: subchartSliced.top === 0 ? 0 : subchartSliced.top + dHeightRest + (subchartIdx - 2) * dHeightEach,\r\n          bottom:\r\n            subchartSlicedIdx === 0\r\n              ? subchartSliced.bottom + dHeightEach + dHeightRest\r\n              : subchartSliced.bottom + dHeightEach + dHeightRest + (subchartIdx - 1) * dHeightEach,\r\n        })),\r\n        ...current.subCharts.slice(subchartIdx + 1).map((subchartSliced, subchartSlicedIdx) => ({\r\n          ...subchartSliced,\r\n          top: subchartSliced.top - (subchartSlicedIdx + 1) * dHeightEach,\r\n          bottom:\r\n            subchartSlicedIdx === current.subCharts.slice(subchartIdx + 1).length - 1\r\n              ? subchartSliced.bottom\r\n              : subchartSliced.bottom - (subchartSlicedIdx + 1) * dHeightEach,\r\n        })),\r\n      ],\r\n    };\r\n  } else if (isRemoveGraphAction(action)) {\r\n    const { subchartIdx, yaxisIdx, graphIdx } = action.params;\r\n    if (graphIdx === 0 && current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.length === 1) {\r\n      // do same like removeSubchart\r\n      const dHeight = current.subCharts[subchartIdx].bottom - current.subCharts[subchartIdx].top;\r\n      const dHeightEach = Math.floor(dHeight / (current.subCharts.length - 1));\r\n      const dHeightRest = dHeight % (current.subCharts.length - 1);\r\n      return {\r\n        ...current,\r\n        subCharts: [\r\n          ...current.subCharts.slice(0, subchartIdx).map((subchartSliced, subchartSlicedIdx) => ({\r\n            ...subchartSliced,\r\n            top: subchartSliced.top === 0 ? 0 : subchartSliced.top + dHeightRest + (subchartIdx - 2) * dHeightEach,\r\n            bottom:\r\n              subchartSlicedIdx === 0\r\n                ? subchartSliced.bottom + dHeightEach + dHeightRest\r\n                : subchartSliced.bottom + dHeightEach + dHeightRest + (subchartIdx - 1) * dHeightEach,\r\n          })),\r\n          ...current.subCharts.slice(subchartIdx + 1).map((subchartSliced, subchartSlicedIdx) => ({\r\n            ...subchartSliced,\r\n            top: subchartSliced.top - (subchartSlicedIdx + 1) * dHeightEach,\r\n            bottom:\r\n              subchartSlicedIdx === current.subCharts.slice(subchartIdx + 1).length - 1\r\n                ? subchartSliced.bottom\r\n                : subchartSliced.bottom - (subchartSlicedIdx + 1) * dHeightEach,\r\n          })),\r\n        ],\r\n      };\r\n    } else {\r\n      return {\r\n        ...current,\r\n        subCharts: [\r\n          ...current.subCharts.slice(0, subchartIdx),\r\n          {\r\n            ...current.subCharts[subchartIdx],\r\n            yaxis: [\r\n              ...current.subCharts[subchartIdx].yaxis.slice(0, yaxisIdx),\r\n              {\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n                graphs: [\r\n                  ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(0, graphIdx),\r\n                  // { ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx] },\r\n                  ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(graphIdx + 1),\r\n                ],\r\n              },\r\n              ...current.subCharts[subchartIdx].yaxis.slice(yaxisIdx + 1),\r\n            ],\r\n          },\r\n          ...current.subCharts.slice(subchartIdx + 1),\r\n        ],\r\n      };\r\n    }\r\n  } else if (isAddGraphAction(action)) {\r\n    const chartSeries = action.params.chartSeries;\r\n    const chartName = action.params.chartName;\r\n    const indicator = !!action.params.indicator ? action.params.indicator : null;\r\n    const subchartIdx = action.params.subchartIdx;\r\n    // const style = {\r\n    //   strokeColor: getGraphColors(graphColorsLight, current.subCharts[subchartIdx].yaxis[0].graphs.length),\r\n    // };\r\n    const style = !!indicator\r\n      ? { strokeColor: [getGraphColors(graphColorsLight, current.subCharts[subchartIdx].yaxis[0].graphs.length)] }\r\n      : { strokeColor: getGraphColors(graphColorsLight, current.subCharts[subchartIdx].yaxis[0].graphs.length) };\r\n\r\n    const newGraph = !!indicator\r\n      ? createIndicatorGraphModel(\r\n          chartSeries as ChartDataSeries,\r\n          chartName,\r\n          indicator,\r\n          style as unknown as IndicatorGraphStateType[\"style\"]\r\n        )\r\n      : createChartGraphModel(chartSeries as ChartDataSeries, chartName, style as ChartGraphStateType[\"style\"]);\r\n    const graph = newGraph as GraphStateType;\r\n    if (isIndicatorGraph(graph) && graph.data[newGraph.data.length - 1].prices.length > 1)\r\n      (graph as unknown as IndicatorGraphStateType).style.strokeColor = graph.data[newGraph.data.length - 1].prices.map(\r\n        (x, idx) => getGraphColors(graphColorsLight, idx)\r\n      );\r\n\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.map((subChart, subChartIdx) => {\r\n          if (subChartIdx === subchartIdx)\r\n            return {\r\n              ...subChart,\r\n              yaxis: [{ ...subChart.yaxis[0], graphs: [...subChart.yaxis[0].graphs, { ...(newGraph as any) }] }],\r\n            };\r\n          else return subChart;\r\n        }),\r\n      ],\r\n    };\r\n  } else if (isDrawAction(action)) {\r\n    const xy = action.params.xy;\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const defaultDrawState: ChartStateType[\"draw\"] = { isDrawing: false, pixXy: [] };\r\n    const nPoints = !action.params.type\r\n      ? 0\r\n      : [\"hline\", \"vline\"].includes(action.params.type)\r\n      ? 1\r\n      : [\"trendline\"].includes(action.params.type)\r\n      ? 2\r\n      : 0;\r\n    // console.log(\"HI\", xy, subchartIdx, nPoints, action);\r\n\r\n    if (!nPoints || !action.params.type) {\r\n      return { ...current, draw: defaultDrawState };\r\n    }\r\n    // init draw command -> switch to draw mode\r\n    else if (!xy && !!action.params.type) {\r\n      return { ...current, draw: { isDrawing: true, pixXy: [], type: action.params.type } };\r\n    }\r\n    return current;\r\n  } else if (isSetBackgroundColorAction(action)) {\r\n    const color = action.params.color;\r\n    return { ...current, backgroundColor: color };\r\n  } else if (isSetGridStrokeColorAction(action)) {\r\n    const color = action.params.color;\r\n    return {\r\n      ...current,\r\n      grid: { ...current.grid, style: { ...current.grid.style, strokeColor: color } },\r\n    };\r\n  } else if (isSetAxisFillColorAction(action)) {\r\n    const color = action.params.color;\r\n    return {\r\n      ...current,\r\n      xaxis: {\r\n        ...current.xaxis,\r\n        style: { ...current.xaxis.style, fillColor: color },\r\n      },\r\n      yaxis: { ...current.yaxis, style: { ...current.yaxis.style, fillColor: color } },\r\n    };\r\n  } else if (isSetAxisStrokeColorAction(action)) {\r\n    const color = action.params.color;\r\n    return {\r\n      ...current,\r\n      xaxis: {\r\n        ...current.xaxis,\r\n        style: { ...current.xaxis.style, strokeColor: color },\r\n      },\r\n      yaxis: { ...current.yaxis, style: { ...current.yaxis.style, strokeColor: color } },\r\n    };\r\n  } else if (isSetAxisTextColorAction(action)) {\r\n    const color = action.params.color;\r\n    return {\r\n      ...current,\r\n      xaxis: {\r\n        ...current.xaxis,\r\n        style: { ...current.xaxis.style, fontColor: color },\r\n      },\r\n      yaxis: { ...current.yaxis, style: { ...current.yaxis.style, fontColor: color } },\r\n    };\r\n  } else if (isToggleXaxisGridAction(action)) {\r\n    return {\r\n      ...current,\r\n      grid: { ...current.grid, useGridX: !current.grid.useGridX },\r\n    };\r\n  } else if (isToggleYaxisGridAction(action)) {\r\n    return {\r\n      ...current,\r\n      grid: { ...current.grid, useGridY: !current.grid.useGridY },\r\n    };\r\n  } else if (isToggleFullscreenAction(action)) {\r\n    return { ...current, fullscreen: !current.fullscreen };\r\n  } else if (isSetLineChartStrokeColor(action)) {\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const yaxisIdx = action.params.yaxisIdx;\r\n    const graphIdx = action.params.graphIdx;\r\n    const color = action.params.color;\r\n    const graph = current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx];\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.slice(0, subchartIdx),\r\n        {\r\n          ...current.subCharts[subchartIdx],\r\n          yaxis: [\r\n            {\r\n              ...current.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n              graphs: [\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(0, graphIdx),\r\n                {\r\n                  ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx],\r\n                  style: {\r\n                    ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx].style,\r\n                    strokeColor: [color],\r\n                  },\r\n                },\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(graphIdx + 1),\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        ...current.subCharts.slice(subchartIdx + 1),\r\n      ],\r\n    };\r\n  } else if (\r\n    isSetCandleChartUpColor(action) ||\r\n    isSetCandleChartDownColor(action) ||\r\n    isSetCandleChartStrokeColor(action)\r\n  ) {\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const yaxisIdx = action.params.yaxisIdx;\r\n    const graphIdx = action.params.graphIdx;\r\n    const color = action.params.color;\r\n    const prop = isSetCandleChartUpColor(action)\r\n      ? \"candleUpColor\"\r\n      : isSetCandleChartDownColor(action)\r\n      ? \"candleDownColor\"\r\n      : isSetCandleChartStrokeColor(action)\r\n      ? \"candleStrokeColor\"\r\n      : null;\r\n    if (!prop) return current;\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.slice(0, subchartIdx),\r\n        {\r\n          ...current.subCharts[subchartIdx],\r\n          yaxis: [\r\n            {\r\n              ...current.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n              graphs: [\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(0, graphIdx),\r\n                {\r\n                  ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx],\r\n                  style: {\r\n                    ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx].style,\r\n                    [prop]: color,\r\n                  },\r\n                },\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(graphIdx + 1),\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        ...current.subCharts.slice(subchartIdx + 1),\r\n      ],\r\n    };\r\n  } else if (isSetToolStrokeColorAction(action) || isSetToolAnchorColor(action)) {\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const yaxisIdx = action.params.yaxisIdx;\r\n    const graphIdx = action.params.toolIdx;\r\n    const color = action.params.color;\r\n    const prop = isSetToolStrokeColorAction(action)\r\n      ? \"strokeColor\"\r\n      : isSetToolAnchorColor(action)\r\n      ? \"anchorColor\"\r\n      : null;\r\n    if (!prop) return current;\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.slice(0, subchartIdx),\r\n        {\r\n          ...current.subCharts[subchartIdx],\r\n          yaxis: [\r\n            {\r\n              ...current.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n              tools: [\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools.slice(0, graphIdx),\r\n                {\r\n                  ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools[graphIdx],\r\n                  style: {\r\n                    ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools[graphIdx].style,\r\n                    [prop]: color,\r\n                  },\r\n                },\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools.slice(graphIdx + 1),\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        ...current.subCharts.slice(subchartIdx + 1),\r\n      ],\r\n    };\r\n  } else if (isSetIndicatorParam(action)) {\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const yaxisIdx = action.params.yaxisIdx;\r\n    const graphIdx = action.params.graphIdx;\r\n    const paramIdx = action.params.paramIdx;\r\n    const val = action.params.val;\r\n\r\n    const indicatorGraph = current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx];\r\n\r\n    if (!isIndicatorGraph(indicatorGraph)) return current;\r\n    const fn = indicatorGraph.indicator.indicatorFn;\r\n    const srcData = current.subCharts[0].yaxis[0].graphs[0].data as ChartDataSeries;\r\n    let params = indicatorGraph.indicator.params.map((val) => val.val);\r\n    params[paramIdx] = val;\r\n    const indicatorData = fn(srcData, indicatorGraph.name, ...params);\r\n    console.log(\r\n      \"HI!! HII!\",\r\n      val,\r\n      subchartIdx,\r\n      yaxisIdx,\r\n      graphIdx,\r\n      paramIdx,\r\n      isIndicatorGraph(indicatorGraph),\r\n      params,\r\n      indicatorData,\r\n      {\r\n        ...indicatorGraph.indicator,\r\n        params: [\r\n          ...indicatorGraph.indicator.params.slice(0, paramIdx),\r\n          {\r\n            ...indicatorGraph.indicator.params[paramIdx],\r\n            val: val,\r\n          },\r\n          ...indicatorGraph.indicator.params.slice(paramIdx + 1),\r\n        ],\r\n      }\r\n    );\r\n    // const newIndicatorGraph = { ...indicatorGraph };\r\n    // newIndicatorGraph.data = indicatorData;\r\n    // newIndicatorGraph.indicator.params[paramIdx].val = val;\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.slice(0, subchartIdx),\r\n        {\r\n          ...current.subCharts[subchartIdx],\r\n          yaxis: [\r\n            {\r\n              ...current.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n              graphs: [\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(0, graphIdx),\r\n                {\r\n                  ...indicatorGraph,\r\n                  data: indicatorData,\r\n                  indicator: {\r\n                    ...indicatorGraph.indicator,\r\n                    params: [\r\n                      ...indicatorGraph.indicator.params.slice(0, paramIdx),\r\n                      {\r\n                        ...indicatorGraph.indicator.params[paramIdx],\r\n                        val: val,\r\n                      },\r\n                      ...indicatorGraph.indicator.params.slice(paramIdx + 1),\r\n                    ],\r\n                  },\r\n                } as any,\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].graphs.slice(graphIdx + 1),\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        ...current.subCharts.slice(subchartIdx + 1),\r\n      ],\r\n    };\r\n  } else if (isSetHlineYlevelAction(action)) {\r\n    const subchartIdx = action.params.subchartIdx;\r\n    const yaxisIdx = action.params.yaxisIdx;\r\n    const toolIdx = action.params.toolIdx;\r\n    const val = action.params.val as number;\r\n    const anchorX = current.subCharts[subchartIdx].yaxis[yaxisIdx].tools[toolIdx].xy[0][0];\r\n    const newAnchor: [number, number] = [anchorX, val];\r\n    return {\r\n      ...current,\r\n      subCharts: [\r\n        ...current.subCharts.slice(0, subchartIdx),\r\n        {\r\n          ...current.subCharts[subchartIdx],\r\n          yaxis: [\r\n            {\r\n              ...current.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n              tools: [\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools.slice(0, toolIdx),\r\n                { ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools[toolIdx], xy: [newAnchor] },\r\n                ...current.subCharts[subchartIdx].yaxis[yaxisIdx].tools.slice(toolIdx + 1),\r\n              ],\r\n            },\r\n          ],\r\n        },\r\n        ...current.subCharts.slice(subchartIdx + 1),\r\n      ],\r\n    };\r\n  } else if (isUpdateInteractionState(action)) {\r\n    // const nSubcharts = current.subCharts.length;\r\n    return {\r\n      ...current,\r\n      pointer: action.params.newState.pointer,\r\n      containerSize: action.params.newState.containerSize,\r\n      // xaxis: { ...current.xaxis, ...action.params.newState.xaxis },\r\n      subCharts: action.params.newState.subCharts,\r\n      draw: { ...current.draw, ...action.params.newState.draw },\r\n      xaxis: { ...current.xaxis, ...action.params.newState.xaxis },\r\n    };\r\n  }\r\n\r\n  return current;\r\n};\r\n","import { ReducerActionTaskType, ReducerActionType } from \"./CChartStateReducer\";\r\nimport { ChartDataSeries, DataSeries } from \"../Types/CChartTypes\";\r\n\r\nimport {\r\n  AdditionalIndicatorGraphStateType,\r\n  ChartStateType,\r\n  CalculatedChartStateType,\r\n  TypedDispatcher,\r\n} from \"../Types/CChartStateTypes\";\r\nconst addSubchart = (\r\n  chartSeries: DataSeries,\r\n  chartName: string,\r\n  containerHeight: number,\r\n  Dispatch: TypedDispatcher<\"addSubchart\">,\r\n  indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n) => {\r\n  const action: ReducerActionType<\"addSubchart\"> = {\r\n    task: \"addSubchart\",\r\n    params: { chartSeries, chartName, indicator, containerHeight },\r\n  };\r\n  Dispatch(action);\r\n};\r\n\r\nconst addGraph = (\r\n  chartSeries: DataSeries,\r\n  chartName: string,\r\n  subchartIdx: number,\r\n  Dispatch: TypedDispatcher<\"addGraph\">,\r\n  indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n) => {\r\n  const action: ReducerActionType<\"addGraph\"> = {\r\n    task: \"addGraph\",\r\n    params: { subchartIdx, chartSeries, indicator, chartName },\r\n  };\r\n  (Dispatch as React.Dispatch<ReducerActionType<\"addGraph\">>)(action);\r\n};\r\n\r\nexport const pixToX = (pixX: number, translated: number, widthPerTick: number) => {\r\n  return (pixX - translated) / widthPerTick;\r\n};\r\n\r\nexport const getChartMethods = (\r\n  ChartState: ChartStateType,\r\n  containerHeight: number,\r\n  Dispatch: TypedDispatcher<ReducerActionTaskType>\r\n): CalculatedChartStateType[\"methods\"] => ({\r\n  addGraph: (\r\n    chartSeries: ChartDataSeries,\r\n    chartName: string,\r\n    subchartIdx: number,\r\n    indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n  ) => addGraph(chartSeries, chartName, subchartIdx, Dispatch, indicator),\r\n  addSubchart: (\r\n    chartSeries: DataSeries,\r\n    chartName: string,\r\n    indicator?: AdditionalIndicatorGraphStateType[\"indicator\"]\r\n  ) => addSubchart(chartSeries, chartName, containerHeight, Dispatch, indicator),\r\n  getSubchart: (subchartIdx: number) => ChartState.subCharts[subchartIdx],\r\n  getYaxis: (subchartIdx: number, yaxisIdx: number) => ChartState.subCharts[subchartIdx].yaxis[yaxisIdx],\r\n  getGraph: (subchartIdx: number, yaxisIdx: number, graphIdx: number) =>\r\n    ChartState.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx],\r\n  xToPix: (x: number, translatedX?: number) => {\r\n    const { widthPerTick, totalTranslatedX } = ChartState.xaxis;\r\n    const translatedXint = translatedX !== undefined ? translatedX : totalTranslatedX;\r\n    return x * widthPerTick + translatedXint;\r\n  },\r\n  pixToX: (pixX: number, translatedX?: number) => {\r\n    const { widthPerTick, totalTranslatedX } = ChartState.xaxis;\r\n    const translatedXint = translatedX !== undefined ? translatedX : totalTranslatedX;\r\n    return (pixX - translatedXint) / widthPerTick;\r\n  },\r\n  yToPix: (y: number, subchartIdx: number, yaxisIdx: number, translatedY?: number) => {\r\n    const { heightPerPt, decimals, translatedY: stateTranslatedY } = ChartState.subCharts[subchartIdx].yaxis[yaxisIdx];\r\n    const translatedYint = translatedY !== undefined ? translatedY : stateTranslatedY;\r\n    return ChartState.subCharts[subchartIdx].bottom - y * Math.pow(10, decimals) * heightPerPt + translatedYint;\r\n  },\r\n  pixToY: (pixY: number, subchartIdx: number, yaxisIdx: number, translatedY?: number) => {\r\n    const { heightPerPt, decimals, translatedY: stateTranslatedY } = ChartState.subCharts[subchartIdx].yaxis[yaxisIdx];\r\n    const translatedYint = translatedY !== undefined ? translatedY : stateTranslatedY;\r\n    return ((ChartState.subCharts[subchartIdx].bottom + translatedYint - pixY) / heightPerPt) * Math.pow(10, -decimals);\r\n  },\r\n});\r\n","// import { pixToX } from \"../CChart\";\r\nimport { getDateString } from \"../Time/CChartDateTime\";\r\nimport { getOptimalPeriod, isNewPeriod } from \"../Time/CChartPeriod\";\r\nimport { InteractiveXaxisType, ChartGraphStateType, ChartStateType } from \"../Types/CChartStateTypes\";\r\nimport { ChartPeriodType } from \"../Types/CChartTimeTypes\";\r\n\r\nexport const pureXToPix = (x: number, translated: number, widthPerTick: number) => {\r\n  return x * widthPerTick + translated;\r\n};\r\nexport const purePixToX = (pixX: number, translated: number, widthPerTick: number) => {\r\n  return (pixX - translated) / widthPerTick;\r\n};\r\n\r\nexport const getInteractiveXaxisState = (\r\n  currentXaxis: InteractiveXaxisType & { scaleInitWidthPerTick: number | null; scaleInitTranslatedX: number },\r\n  onDrag: ChartStateType[\"pointer\"][\"drag\"],\r\n  wheel: ChartStateType[\"pointer\"][\"wheel\"],\r\n  onMove: ChartStateType[\"pointer\"][\"move\"],\r\n  initWidthTickX: number,\r\n  shallUpdateDrag: boolean,\r\n  clickedChart: boolean,\r\n  clickedXaxis: boolean,\r\n  canvasWidth: number,\r\n  nDatasets: number,\r\n): InteractiveXaxisType & { scaleInitWidthPerTick: number | null; scaleInitTranslatedX: number } => {\r\n  const isWheeling = !!wheel?.isWheeling;\r\n  const wheeldY = wheel?.delta[1];\r\n  const initWheelMousePos = onMove?.xy;\r\n\r\n  const scaleFn = (pixX: number) => {\r\n    const delta =\r\n      Math.round(\r\n        Math.min(\r\n          (Math.max(pixX + 640, 0) * (initWidthTickX - 0.5)) / 640 - (initWidthTickX - 0.5),\r\n          -initWidthTickX + canvasWidth / 3\r\n        ) / 0.5\r\n      ) * 0.5;\r\n    return delta;\r\n  };\r\n\r\n  console.log(currentXaxis.xEnd - currentXaxis.xStart, currentXaxis.xStart, currentXaxis.xEnd);\r\n  if (!!shallUpdateDrag) {\r\n    const init = onDrag?.initial;\r\n    if (!init) return currentXaxis;\r\n    if (clickedChart && !wheeldY) {\r\n      const totalTranslatedX = !!onDrag?.delta\r\n        ? Math.max(\r\n            Math.min(\r\n              onDrag.delta[0] + currentXaxis.totalTranslatedX,\r\n              canvasWidth - 2 * currentXaxis.scaledWidthPerTick\r\n            ),\r\n            -( (nDatasets - 3) * currentXaxis.scaledWidthPerTick)\r\n          )\r\n        : currentXaxis.totalTranslatedX;\r\n      return { ...currentXaxis, totalTranslatedX };\r\n    } else if (clickedXaxis && !wheeldY) {\r\n      let scaleInitWidthPerTick: number | null = !currentXaxis.scaleInitWidthPerTick\r\n        ? currentXaxis.scaledWidthPerTick\r\n        : currentXaxis.scaleInitWidthPerTick;\r\n      const scaleInitTranslatedX = !currentXaxis.scaleInitTranslatedX\r\n        ? currentXaxis.totalTranslatedX\r\n        : currentXaxis.scaleInitTranslatedX;\r\n      // shall not scale lower than tickWidth of 0.5\r\n      let totalScaleX = !!onDrag?.delta ? currentXaxis.totalScaleX + onDrag?.delta[0] : currentXaxis.totalScaleX;\r\n      totalScaleX = Math.min(\r\n        Math.max(totalScaleX, -640),\r\n        ((-initWidthTickX + canvasWidth / 3 + initWidthTickX - 0.5) * 640) / (initWidthTickX - 0.5) - 640\r\n      );\r\n      const scaledWidthPerTick = initWidthTickX + scaleFn(totalScaleX);\r\n      const translatedXonStart = scaleInitTranslatedX;\r\n      const initPixX = init[0];\r\n      const initXexact = (init[0] - translatedXonStart) / (scaleInitWidthPerTick as number);\r\n      const newPos = initXexact * scaledWidthPerTick + translatedXonStart;\r\n\r\n      const totalTranslatedX = scaleInitTranslatedX - newPos + initPixX;\r\n      if (!onDrag?.isDragging) {\r\n        scaleInitWidthPerTick = null;\r\n      }\r\n      return {\r\n        ...currentXaxis,\r\n        scaleInitWidthPerTick,\r\n        scaleInitTranslatedX,\r\n        totalScaleX,\r\n        scaledWidthPerTick,\r\n        totalTranslatedX,\r\n      };\r\n    }\r\n  } else if (!!isWheeling && !!wheeldY) {\r\n    let scaleInitWidthPerTick: number | null = currentXaxis.scaledWidthPerTick;\r\n    const scaleInitTranslatedX = currentXaxis.totalTranslatedX;\r\n\r\n    // shall not scale lower than tickWidth of 0.5\r\n    let totalScaleX = currentXaxis.totalScaleX + wheeldY / 10;\r\n    totalScaleX = Math.min(\r\n      Math.max(totalScaleX, -640),\r\n      ((-initWidthTickX + canvasWidth / 3 + initWidthTickX - 0.5) * 640) / (initWidthTickX - 0.5) - 640\r\n    );\r\n    const scaledWidthPerTick = initWidthTickX + scaleFn(totalScaleX);\r\n    const translatedXonStart = scaleInitTranslatedX;\r\n    const initPixX = !!initWheelMousePos ? initWheelMousePos[0] : 0;\r\n    const initXexact =\r\n      ((!!initWheelMousePos ? initWheelMousePos[0] : 0) - translatedXonStart) / (scaleInitWidthPerTick as number);\r\n    const newPos = Math.round(initXexact) * scaledWidthPerTick + currentXaxis.totalTranslatedX; //translatedXonStart;\r\n\r\n    const totalTranslatedX = (scaleInitTranslatedX as number) - newPos + initPixX;\r\n    if (!isWheeling) {\r\n      scaleInitWidthPerTick = null;\r\n    }\r\n    return {\r\n      ...currentXaxis,\r\n      scaleInitWidthPerTick,\r\n      scaleInitTranslatedX,\r\n      totalScaleX,\r\n      scaledWidthPerTick,\r\n      totalTranslatedX,\r\n    };\r\n  }\r\n  return currentXaxis;\r\n};\r\n\r\nexport const calculateCurrentXaxis = (\r\n  widthPerTick: number,\r\n  translatedPixX: number,\r\n  containerWidth: number,\r\n  widthYAxis: number,\r\n  mainGraph: ChartGraphStateType | null\r\n): Omit<\r\n  ChartStateType[\"xaxis\"],\r\n  | \"style\"\r\n  | \"heightXAxis\"\r\n  | \"heightTickMarkLines\"\r\n  | \"totalTranslatedX\"\r\n  | \"totalScaleX\"\r\n  | \"scaledWidthPerTick\"\r\n  | \"scaleInitWidthPerTick\"\r\n  | \"scaleInitTranslatedX\"\r\n> => {\r\n  const xAxisTicks: { x: number; dateString: string }[] = [];\r\n\r\n  const xStart = Math.max(Math.ceil(-translatedPixX / widthPerTick), 0);\r\n  const nMainData = mainGraph?.data.length;\r\n  const pixXStart = Math.max(Math.ceil(-translatedPixX / widthPerTick), 0) * widthPerTick + translatedPixX;\r\n  let pixXend = 0,\r\n    xEnd = 0;\r\n  const startNoDataPeriod = Math.abs(Math.min(Math.ceil(-translatedPixX / widthPerTick), 0));\r\n  let endNoDataPeriod = 0;\r\n  let noDataPeriodPortion = 0;\r\n  let optPeriodRes = null;\r\n  if (!!containerWidth && !!widthYAxis && !!nMainData) {\r\n    // pixXend = Math.min(containerWidth - widthYAxis, nMainData * widthPerTick + translatedPixX);\r\n    // xEnd = Math.min(Math.floor((pixXend - translatedPixX) / widthPerTick), nMainData - 1);\r\n    // endNoDataPeriod = Math.max(\r\n    //   Math.floor((containerWidth - widthYAxis - translatedPixX) / widthPerTick) - nMainData,\r\n    //   0\r\n    // );\r\n    pixXend = Math.min(containerWidth, nMainData * widthPerTick + translatedPixX);\r\n    xEnd = Math.min(Math.floor((pixXend - translatedPixX) / widthPerTick), nMainData - 1);\r\n    endNoDataPeriod = Math.max(Math.floor((containerWidth - translatedPixX) / widthPerTick) - nMainData, 0);\r\n\r\n    noDataPeriodPortion = (startNoDataPeriod + endNoDataPeriod) / (xEnd - xStart + startNoDataPeriod + endNoDataPeriod);\r\n    if (!!mainGraph) {\r\n      optPeriodRes = getOptimalPeriod(\r\n        mainGraph.data,\r\n        xStart,\r\n        xEnd,\r\n        mainGraph.meta,\r\n        noDataPeriodPortion,\r\n        Object.assign({}, mainGraph.dateStat)\r\n      );\r\n\r\n      if (!!optPeriodRes && !!mainGraph.meta.chartPeriod) {\r\n        let pixXi = pixXStart;\r\n        let xi = xStart;\r\n        while (pixXi < pixXend) {\r\n          const periodToDraw = isNewPeriod(mainGraph.data[xi].date, mainGraph.dateStat, mainGraph.meta.chartPeriod, {\r\n            ...(optPeriodRes as ChartPeriodType),\r\n          });\r\n          if (!periodToDraw) {\r\n            pixXi += widthPerTick;\r\n            xi++;\r\n            continue;\r\n          }\r\n          const dateString = getDateString(mainGraph.data[xi].date, periodToDraw);\r\n          xAxisTicks.push({ x: pixXi, dateString: dateString.toString() });\r\n          pixXi += widthPerTick;\r\n          xi++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    xStart: xStart,\r\n    pixXStart: pixXStart,\r\n    xEnd: xEnd,\r\n    pixXEnd: pixXend,\r\n    widthPerTick,\r\n    startNoDataPeriod,\r\n    endNoDataPeriod,\r\n    noDataPeriodPortion,\r\n    xAxisTicks,\r\n    optPeriodRes,\r\n  };\r\n};\r\n","import { CalculatedChartStateType, ChartStateType, isIndicatorGraph } from \"../Types/CChartStateTypes\";\r\nimport { DataSeries, Dataset, isCandleChartDataset, isIndicatorDataset } from \"../Types/CChartTypes\";\r\nimport { getDecimals, isNullish } from \"../utils\";\r\n\r\nexport const pureYToPix = (y: number, pixYBottom: number, decimals: number, translatedY: number, pixPerPt: number) => {\r\n  return pixYBottom - y * Math.pow(10, decimals) * pixPerPt + translatedY;\r\n};\r\nexport const purePixToY = (\r\n  pixY: number,\r\n  pixYBottom: number,\r\n  decimals: number,\r\n  translatedY: number,\r\n  pixPerPt: number\r\n) => {\r\n  return ((pixYBottom + translatedY - pixY) / pixPerPt) * Math.pow(10, -decimals);\r\n};\r\n\r\nexport const snapPixYToPrices = (\r\n  pixY: number,\r\n  dataset: Dataset,\r\n  subcharts: ChartStateType[\"subCharts\"] | null,\r\n  subchartIdx: number,\r\n  yaxisIdx: number,\r\n  snapTolerance?: number\r\n) => {\r\n  const snapTol = !!snapTolerance ? snapTolerance : 10;\r\n  if (isNullish(pixY) || isNullish(subcharts) || isNullish(subchartIdx) || isNullish(yaxisIdx) || isNullish(dataset))\r\n    return null;\r\n  const prices = [];\r\n  if (isIndicatorDataset(dataset)) {\r\n    if (!!dataset.prices[0]) prices.push(dataset.prices[0]);\r\n  } else {\r\n    if (isCandleChartDataset(dataset)) prices.push(dataset.open, dataset.high, dataset.low, dataset.close);\r\n    else prices.push(dataset.close);\r\n  }\r\n  if (prices.length === 0) return null;\r\n\r\n  let snapRes: { y: string; pixY: number }[] = [];\r\n  prices.forEach((price, priceIdx) => {\r\n    const yPixPrice = pureYToPix(\r\n      price,\r\n      subcharts[subchartIdx].bottom,\r\n      subcharts[subchartIdx].yaxis[yaxisIdx].decimals,\r\n      subcharts[subchartIdx].yaxis[yaxisIdx].translatedY,\r\n      subcharts[subchartIdx].yaxis[yaxisIdx].heightPerPt\r\n    );\r\n    if (yPixPrice >= pixY - snapTol && yPixPrice <= pixY + snapTol) {\r\n      snapRes.push({ y: price.toFixed(getDecimals(price)), pixY: yPixPrice });\r\n    }\r\n  });\r\n\r\n  if (!!snapRes)\r\n    return snapRes.sort((a, b) => {\r\n      if (Math.abs(a.pixY - pixY) < Math.abs(b.pixY - pixY)) return -1;\r\n      else if (Math.abs(a.pixY - pixY) > Math.abs(b.pixY - pixY)) return 1;\r\n      return 0;\r\n    });\r\n  return null;\r\n  // for (let i = 0; i < prices.length; i++) {\r\n  //   const price = prices[i];\r\n  //   const yPixPrice = pureYToPix(\r\n  //     price,\r\n  //     subcharts[subchartIdx].bottom,\r\n  //     subcharts[subchartIdx].yaxis[yaxisIdx].decimals,\r\n  //     subcharts[subchartIdx].yaxis[yaxisIdx].translatedY,\r\n  //     subcharts[subchartIdx].yaxis[yaxisIdx].heightPerPt\r\n  //   );\r\n  //   if (yPixPrice >= pixY - snapTol && yPixPrice <= pixY + snapTol) {\r\n  //     snapRes.push({ y: price.toFixed(getDecimals(price)), pixY: yPixPrice });\r\n  //   }\r\n  // }\r\n  // if (snapRes.length > 0) {\r\n  // }\r\n};\r\n\r\nexport function GetYOptInterval(max: number, min: number, dec: number, targetSteps: number) {\r\n  let initIntervalStep = 1 / Math.pow(10, dec);\r\n  let curIntervalStep = initIntervalStep;\r\n  let optIntervalStep = curIntervalStep;\r\n  const optimizationFunction = (steps: number) => Math.abs((max - min) / steps - targetSteps);\r\n  let optimizer = optimizationFunction(curIntervalStep); // - targetSteps);\r\n\r\n  let i = 0;\r\n  while (curIntervalStep < max - min) {\r\n    for (let j = 0; j <= 2; j++) {\r\n      const factor = j === 0 ? 1 : j === 1 ? 2.5 : 5.0;\r\n      let curOptimizerRes = optimizationFunction(curIntervalStep * factor);\r\n      if (curOptimizerRes < optimizer) {\r\n        optimizer = curOptimizerRes;\r\n        optIntervalStep = curIntervalStep * factor;\r\n      }\r\n    }\r\n    i++;\r\n    curIntervalStep = initIntervalStep * Math.pow(10, i);\r\n  }\r\n  return parseFloat(optIntervalStep.toFixed(dec));\r\n}\r\n\r\nexport const calculateCurrentGraphs = (\r\n  subcharts: ChartStateType[\"subCharts\"] | undefined,\r\n  widthPerTick: number,\r\n  xStart: number,\r\n  xEnd: number,\r\n  pixXstart: number,\r\n  pixXend: number\r\n): CalculatedChartStateType[\"subCharts\"] | null => {\r\n  if (!subcharts) return null;\r\n  if (subcharts.length === 0) return null;\r\n\r\n  const calculatedSubcharts = subcharts;\r\n\r\n  calculatedSubcharts.forEach((subchart, subchartIdx) => {\r\n    const mainYaxis: { pixY: number; label: string }[] = [];\r\n    subchart.yaxis.forEach((yaxis, yaxisIdx) => {\r\n      let yMinExactAllGraphs: number | null = null;\r\n      let yMaxExactAllGraphs: number | null = null;\r\n      let maxDecimals: number = 0;\r\n      yaxis.graphs.forEach((graphM, graphIdx) => {\r\n        const graph = calculatedSubcharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx];\r\n        const data = graph.data;\r\n        graph.datasets.last = {\r\n          data: data[xEnd],\r\n          x: xEnd,\r\n          pixX: pixXend,\r\n          dateString: \"\",\r\n        };\r\n        graph.datasets.first = {\r\n          data: data[xStart],\r\n          x: xStart,\r\n          pixX: pixXstart,\r\n          dateString: \"\",\r\n        };\r\n        const curData = graph.data.filter((val, idx) => idx >= xStart && idx <= xEnd) as DataSeries;\r\n        graph.curData = curData;\r\n        graph.yMaxExact =\r\n          isIndicatorGraph(graph) && !!graph?.indicator?.default?.fixedYScale\r\n            ? graph?.indicator?.default?.fixedYScale[1]\r\n            : Math.max(\r\n                ...curData.map((dataset) => {\r\n                  if (isIndicatorDataset(dataset)) {\r\n                    const max = Math.max(...(dataset.prices.filter((price) => price !== null) as number[]));\r\n                    if (!max && max !== 0) return 0;\r\n                    return max;\r\n                  }\r\n                  if (isCandleChartDataset(dataset)) return dataset.high;\r\n                  return dataset.close;\r\n                })\r\n              );\r\n        graph.yMinExact =\r\n          isIndicatorGraph(graph) && !!graph?.indicator?.default?.fixedYScale\r\n            ? graph?.indicator?.default?.fixedYScale[0]\r\n            : Math.min(\r\n                ...curData.map((dataset) => {\r\n                  if (isIndicatorDataset(dataset)) {\r\n                    const min = Math.min(...(dataset.prices.filter((price) => price !== null) as number[]));\r\n                    if (!min && min !== 0) return 0;\r\n                    return min;\r\n                  }\r\n                  if (isCandleChartDataset(dataset)) return dataset.low;\r\n                  return dataset.close;\r\n                })\r\n              );\r\n        if (yMinExactAllGraphs === null || graph.yMinExact < yMinExactAllGraphs) yMinExactAllGraphs = graph.yMinExact;\r\n        if (yMaxExactAllGraphs === null || graph.yMaxExact > yMaxExactAllGraphs) yMaxExactAllGraphs = graph.yMaxExact;\r\n        if (graph.decimals > maxDecimals) maxDecimals = graph.decimals;\r\n      });\r\n\r\n      // target scale interval should be 75px\r\n      const intervalsTarget = Math.max(Math.round((subchart.bottom - subchart.top) / 75), 3);\r\n      yMaxExactAllGraphs = yMaxExactAllGraphs || 0;\r\n      yMinExactAllGraphs = yMinExactAllGraphs || 0;\r\n      const decimals = maxDecimals;\r\n\r\n      const optIntervalY = GetYOptInterval(yMaxExactAllGraphs, yMinExactAllGraphs, decimals, intervalsTarget);\r\n      yaxis.optIntervalY = optIntervalY;\r\n\r\n      let yMaxAllGraphs: null | number = null;\r\n      let yMinAllGraphs: null | number = null;\r\n      yaxis.graphs.forEach((graph, graphIdx) => {\r\n        graph.yMax = Math.ceil(graph.yMaxExact / optIntervalY) * optIntervalY;\r\n        graph.yMin = Math.floor(graph.yMinExact / optIntervalY) * optIntervalY;\r\n        if (yMaxAllGraphs === null || graph.yMax > yMaxAllGraphs) yMaxAllGraphs = graph.yMax;\r\n        if (yMinAllGraphs === null || graph.yMin < yMinAllGraphs) yMinAllGraphs = graph.yMin;\r\n      });\r\n\r\n      const heightPerPt =\r\n        (subchart.bottom - subchart.top) / ((yMaxAllGraphs || 0) - (yMinAllGraphs || 0)) / Math.pow(10, decimals);\r\n      yaxis.heightPerPt = heightPerPt;\r\n      yaxis.translatedY = -pureYToPix(yMinAllGraphs || 0, subchart.bottom, decimals, 0, heightPerPt) + subchart.bottom;\r\n      let y_bottom = purePixToY(subchart.bottom, subchart.bottom, decimals, yaxis.translatedY, yaxis.heightPerPt);\r\n      let i = pureYToPix(\r\n        Math.ceil(y_bottom / optIntervalY) * optIntervalY,\r\n        subchart.bottom,\r\n        decimals,\r\n        yaxis.translatedY,\r\n        heightPerPt \r\n      );\r\n      const iStart = i; \r\n      while (i >= subchart.top) {\r\n        let yi = purePixToY(i, subchart.bottom, yaxis.decimals, yaxis.translatedY, yaxis.heightPerPt);\r\n        let yvalstr = (Math.round(yi * Math.pow(10, decimals)) / Math.pow(10, decimals)).toString();\r\n        if (i>subchart.top+10 && i <subchart.bottom-10)\r\n        mainYaxis.push({ pixY: i, label: yvalstr });\r\n        i -= (heightPerPt * optIntervalY) / Math.pow(10, -decimals);\r\n      }\r\n      yaxis.drawTicks = mainYaxis;\r\n    });\r\n  });\r\n  return calculatedSubcharts;\r\n};\r\n","import { Vector2 } from \"react-use-gesture/dist/types\";\r\nimport { getDateString } from \"../Time/CChartDateTime\";\r\nimport { getOptimalPeriod, isNewPeriod } from \"../Time/CChartPeriod\";\r\nimport {\r\n  CalculatedChartStateType,\r\n  ChartGraphStateType,\r\n  ChartStateType,\r\n  DrawingTool,\r\n  InteractivePointerType,\r\n  InteractiveXaxisType,\r\n  isChartGraph,\r\n  SubchartStateType,\r\n} from \"../Types/CChartStateTypes\";\r\nimport { ChartPeriodType } from \"../Types/CChartTimeTypes\";\r\nimport { purePixToX, pureXToPix } from \"./CChartStateXaxis\";\r\nimport { purePixToY, pureYToPix, snapPixYToPrices } from \"./CChartStateYaxis\";\r\n\r\nexport const getSubchartIdxByVector = (\r\n  pixXy: [number, number] | undefined,\r\n  subcharts: CalculatedChartStateType[\"subCharts\"]\r\n): number | null => {\r\n  if (!pixXy || !subcharts) return null;\r\n  for (let i = 0; i < subcharts.length; i++) {\r\n    const subchart = subcharts[i];\r\n    if (pixXy[1] >= subchart.top && pixXy[1] < subchart.bottom) return i;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const getSubchartIdxByBottom = (\r\n  pixXy: [number, number] | undefined,\r\n  subcharts: CalculatedChartStateType[\"subCharts\"]\r\n): number | null => {\r\n  if (!pixXy) return null;\r\n  for (let i = 0; i < subcharts.length; i++) {\r\n    const subchart = subcharts[i];\r\n    if (pixXy[1] >= subchart.bottom - 10 && pixXy[1] < subchart.bottom + 10) return i;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst getToolsByXy = (\r\n  pixXy: [number, number] | undefined,\r\n  subcharts: ChartStateType[\"subCharts\"],\r\n  xaxis: InteractiveXaxisType\r\n): [number, number, number, number][] => {\r\n  if (!pixXy || !subcharts || !xaxis) return [];\r\n  const subchartIdx = getSubchartIdxByVector(pixXy, subcharts);\r\n  if (subchartIdx === null) return [];\r\n\r\n  let toolsIdx: [number, number, number, number][] = [];\r\n  const translatedX = xaxis.totalTranslatedX;\r\n  const widthPerTick = xaxis.scaledWidthPerTick;\r\n  subcharts[subchartIdx].yaxis.forEach((singleYaxis, singleYaxisIdx) => {\r\n    const translatedY = singleYaxis.translatedY;\r\n    const heightPerPt = singleYaxis.heightPerPt;\r\n    singleYaxis.tools.forEach((tool, toolIdx) => {\r\n      tool.xy.forEach((anchorXy, anchorIdx) => {\r\n        if (\r\n          pixXy[0] >= pureXToPix(anchorXy[0], translatedX, widthPerTick) - 10 &&\r\n          pixXy[0] <= pureXToPix(anchorXy[0], translatedX, widthPerTick) + 10 &&\r\n          pixXy[1] >=\r\n            pureYToPix(\r\n              anchorXy[1],\r\n              subcharts[subchartIdx].bottom,\r\n              subcharts[subchartIdx].yaxis[singleYaxisIdx].decimals,\r\n              translatedY,\r\n              heightPerPt\r\n            ) -\r\n              10 &&\r\n          pixXy[1] <=\r\n            pureYToPix(\r\n              anchorXy[1],\r\n              subcharts[subchartIdx].bottom,\r\n              subcharts[subchartIdx].yaxis[singleYaxisIdx].decimals,\r\n              translatedY,\r\n              heightPerPt\r\n            ) +\r\n              10\r\n        ) {\r\n          toolsIdx.push([subchartIdx, singleYaxisIdx, toolIdx, anchorIdx]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  return toolsIdx;\r\n};\r\n\r\nexport const getDragActionType = (\r\n  dragInitXy: [number, number] | undefined,\r\n  subcharts: SubchartStateType[],\r\n  xaxis: InteractiveXaxisType,\r\n  isEditing: boolean,\r\n  isDrawing: boolean,\r\n  canvasWidth: number,\r\n  canvasHeight: number\r\n):\r\n  | null\r\n  | { type: \"translate\" | \"scale\" }\r\n  | { type: \"resizeSubchart\"; res: number; initBottom: number }\r\n  | { type: \"drawTool\"; init: [number, number] }\r\n  | { type: \"editTool\"; res: [number, number, number, number][]; init: [number, number] } => {\r\n  if (!dragInitXy) return null;\r\n  if (isEditing) return null;\r\n\r\n  if (isDrawing) {\r\n    // const editToolPath = getToolsByXy(dragInitXy, subcharts, xaxis); //only initially -> tool xy is changed by editing but dragInitXy isnt adjusted!\r\n    return {\r\n      type: \"drawTool\",\r\n      // res: editToolPath,\r\n      init: dragInitXy,\r\n    };\r\n  }\r\n\r\n  const editToolPath = getToolsByXy(dragInitXy, subcharts, xaxis); //only initially -> tool xy is changed by editing but dragInitXy isnt adjusted!\r\n  if (editToolPath.length > 0)\r\n    return {\r\n      type: \"editTool\",\r\n      res: editToolPath,\r\n      init: subcharts[editToolPath[0][0]].yaxis[editToolPath[0][1]].tools[editToolPath[0][2]].xy[editToolPath[0][3]],\r\n    };\r\n  const resizeSubchartIdx = getSubchartIdxByBottom(dragInitXy, subcharts); // same as above - only initially\r\n  if (resizeSubchartIdx !== null && resizeSubchartIdx !== subcharts.length-1)\r\n    return { type: \"resizeSubchart\", res: resizeSubchartIdx, initBottom: subcharts[resizeSubchartIdx].bottom };\r\n\r\n  const clickedChart =\r\n    dragInitXy[0] >= 0 && dragInitXy[0] < 0 + canvasWidth && dragInitXy[1] >= 0 && dragInitXy[1] < 0 + canvasHeight;\r\n  if (clickedChart) return { type: \"translate\" };\r\n  const clickedXaxis = dragInitXy[0] >= 0 && dragInitXy[0] < 0 + canvasWidth && dragInitXy[1] >= 0 + canvasHeight;\r\n  if (clickedXaxis) return { type: \"scale\" };\r\n  return null;\r\n};\r\n\r\nexport const editToolPosition = (\r\n  dragActionType: { type: \"editTool\"; res: [number, number, number, number][]; init: [number, number] },\r\n  subcharts: ChartStateType[\"subCharts\"],\r\n  xaxis: InteractiveXaxisType,\r\n  pointer: ChartStateType[\"pointer\"]\r\n): ChartStateType[\"subCharts\"] => {\r\n  if (dragActionType.type !== \"editTool\" || dragActionType.res.length === 0 || !dragActionType.init) return subcharts;\r\n  // if (drag.isDragging) {\r\n  const curPixX = !!pointer.chartPointer.move.pixXSnap ? pointer.chartPointer.move.pixXSnap : pointer.drag.xy[0];\r\n  const curPixY =\r\n    pointer.chartPointer.move.snapDatasets.length > 0 && !!pointer.chartPointer.move.snapDatasets[0].pixYSnap\r\n      ? pointer.chartPointer.move.snapDatasets[0].pixYSnap\r\n      : pointer.drag.xy[1];\r\n  const initX = pureXToPix(\r\n    Math.round(purePixToX(pointer.drag.initial[0], xaxis.totalTranslatedX, xaxis.scaledWidthPerTick)),\r\n    xaxis.totalTranslatedX,\r\n    xaxis.scaledWidthPerTick\r\n  );\r\n  const subIdx = dragActionType.res[0][0];\r\n  const yaxisIdx = dragActionType.res[0][1];\r\n\r\n  let datasets: {\r\n    y: number;\r\n    pixY: number;\r\n  }[] = [];\r\n  let yAdjusted = { y: dragActionType.init[1], pixY: pointer.drag.initial[1] };\r\n  subcharts[subIdx].yaxis[yaxisIdx].graphs.forEach((graph, graphIdx) => {\r\n    const localInitY = snapPixYToPrices(pointer.drag.initial[1], graph.data[initX], subcharts, subIdx, yaxisIdx);\r\n    if (!!localInitY && localInitY.length > 0) datasets.push({ ...localInitY[0], y: parseFloat(localInitY[0].y) });\r\n  });\r\n  if (datasets.length > 0) {\r\n    yAdjusted = { y: datasets[0].y, pixY: datasets[0].pixY };\r\n  }\r\n\r\n  const newPixX =\r\n    pureXToPix(dragActionType.init[0], xaxis.totalTranslatedX, xaxis.scaledWidthPerTick) + curPixX - initX;\r\n  const newPixY =\r\n    pureYToPix(\r\n      dragActionType.init[1],\r\n      subcharts[subIdx].bottom,\r\n      subcharts[subIdx].yaxis[yaxisIdx].decimals,\r\n      subcharts[subIdx].yaxis[yaxisIdx].translatedY,\r\n      subcharts[subIdx].yaxis[yaxisIdx].heightPerPt\r\n    ) +\r\n    curPixY -\r\n    yAdjusted.pixY;\r\n  const newX = purePixToX(newPixX, xaxis.totalTranslatedX, xaxis.scaledWidthPerTick);\r\n  const newY = purePixToY(\r\n    newPixY,\r\n    subcharts[subIdx].bottom,\r\n    subcharts[subIdx].yaxis[yaxisIdx].decimals,\r\n    subcharts[subIdx].yaxis[yaxisIdx].translatedY,\r\n    subcharts[subIdx].yaxis[yaxisIdx].heightPerPt\r\n  );\r\n  console.log(curPixX, curPixY, newPixX, newPixY, newX, newY);\r\n  console.log(\r\n    \"2nd:\",\r\n    pureXToPix(\r\n      Math.round(purePixToX(pointer.drag.initial[0], xaxis.totalTranslatedX, xaxis.scaledWidthPerTick)),\r\n      xaxis.totalTranslatedX,\r\n      xaxis.scaledWidthPerTick\r\n    ),\r\n    purePixToX(pointer.drag.initial[0], 0, 0),\r\n    pointer.drag.initial[0]\r\n  );\r\n  const [toolsSubIdx, toolsYaxisIdx, toolIdx, anchorIdx] = dragActionType.res[0];\r\n  const editedSubcharts: ChartStateType[\"subCharts\"] = [\r\n    ...subcharts.slice(0, toolsSubIdx),\r\n    {\r\n      ...subcharts[toolsSubIdx],\r\n      yaxis: [\r\n        ...subcharts[toolsSubIdx].yaxis.slice(0, toolsYaxisIdx),\r\n        {\r\n          ...subcharts[toolsSubIdx].yaxis[toolsYaxisIdx],\r\n          tools: [\r\n            ...subcharts[toolsSubIdx].yaxis[toolsYaxisIdx].tools.slice(0, toolIdx),\r\n            {\r\n              ...subcharts[toolsSubIdx].yaxis[toolsYaxisIdx].tools[toolIdx],\r\n              xy: [\r\n                ...subcharts[toolsSubIdx].yaxis[toolsYaxisIdx].tools[toolIdx].xy.slice(0, anchorIdx),\r\n                [newX, newY],\r\n                ...subcharts[toolsSubIdx].yaxis[toolsYaxisIdx].tools[toolIdx].xy.slice(anchorIdx + 1),\r\n              ],\r\n            },\r\n            ...subcharts[toolsSubIdx].yaxis[toolsYaxisIdx].tools.slice(toolIdx + 1),\r\n          ],\r\n        },\r\n        ...subcharts[toolsSubIdx].yaxis.slice(toolsYaxisIdx + 1),\r\n      ],\r\n    },\r\n    ...subcharts.slice(toolsSubIdx + 1),\r\n  ];\r\n  return editedSubcharts;\r\n  // }\r\n  // return subcharts;\r\n};\r\n\r\nexport const resizeSubchart = (\r\n  dragActionType: { type: \"resizeSubchart\"; res: number; initBottom: number },\r\n  subcharts: ChartStateType[\"subCharts\"],\r\n  drag: ChartStateType[\"pointer\"][\"drag\"]\r\n): ChartStateType[\"subCharts\"] => {\r\n  if (dragActionType.type !== \"resizeSubchart\" || dragActionType === null) return subcharts;\r\n  // if (drag.isDragging) {\r\n  const subchartIdx = dragActionType.res;\r\n  const newBottom = Math.min(\r\n    Math.max(dragActionType.initBottom + drag.xy[1] - drag.initial[1], subcharts[subchartIdx].top + 10),\r\n    subcharts[subchartIdx + 1].bottom - 10\r\n  );\r\n  // console.log(newBottom);\r\n  return [\r\n    ...subcharts.slice(0, subchartIdx),\r\n    { ...subcharts[subchartIdx], bottom: newBottom },\r\n    { ...subcharts[subchartIdx + 1], top: newBottom },\r\n    ...subcharts.slice(subchartIdx + 2),\r\n  ];\r\n  // }\r\n  // return subcharts;\r\n};\r\n\r\nexport const addToolAnchor = (\r\n  // dragActionType: { type: \"drawTool\"},\r\n  drawToolType: \"hline\" | \"vline\" | \"trendline\" | undefined,\r\n  // subcharts: ChartStateType[\"subCharts\"],\r\n  draw: ChartStateType[\"draw\"],\r\n  pointer: ChartStateType[\"pointer\"]\r\n): ChartStateType[\"draw\"] => {\r\n  const defaultDrawState: ChartStateType[\"draw\"] = { isDrawing: false, pixXy: [] };\r\n\r\n  const curPixX = !!pointer.chartPointer.move.pixXSnap ? pointer.chartPointer.move.pixXSnap : pointer.drag.xy[0];\r\n  const curPixY =\r\n    pointer.chartPointer.move.snapDatasets.length > 0 && !!pointer.chartPointer.move.snapDatasets[0].pixYSnap\r\n      ? pointer.chartPointer.move.snapDatasets[0].pixYSnap\r\n      : pointer.drag.xy[1];\r\n  const dragpixXy: [number, number] = [curPixX, curPixY];\r\n  if (!drawToolType || !draw || !dragpixXy) return defaultDrawState;\r\n  // add temporary anchor point\r\n  return { ...draw, pixXy: [...draw.pixXy, dragpixXy] };\r\n};\r\n\r\nexport const addTool = (\r\n  subcharts: ChartStateType[\"subCharts\"],\r\n  xaxis: InteractiveXaxisType,\r\n  draw: ChartStateType[\"draw\"],\r\n  drag: ChartStateType[\"pointer\"][\"drag\"]\r\n): ChartStateType[\"subCharts\"] => {\r\n  const subchartIdx = getSubchartIdxByVector(drag.initial, subcharts);\r\n  console.log(subchartIdx, xaxis, draw, draw.type);\r\n  if (subchartIdx === null || !xaxis || !draw || !drag || !draw.type) return subcharts;\r\n  const pixXyArr = draw.pixXy;\r\n  const xyArr = pixXyArr.map((pixXy, pixXyIdx) => [\r\n    purePixToX(pixXy[0], xaxis.totalTranslatedX, xaxis.scaledWidthPerTick),\r\n    purePixToY(\r\n      pixXy[1],\r\n      subcharts[subchartIdx].bottom,\r\n      subcharts[subchartIdx].yaxis[0].decimals,\r\n      subcharts[subchartIdx].yaxis[0].translatedY,\r\n      subcharts[subchartIdx].yaxis[0].heightPerPt\r\n    ),\r\n  ]);\r\n\r\n  return [\r\n    ...subcharts.slice(0, subchartIdx),\r\n    {\r\n      ...subcharts[subchartIdx],\r\n      yaxis: [\r\n        {\r\n          ...subcharts[subchartIdx].yaxis[0],\r\n          tools: [\r\n            ...subcharts[subchartIdx].yaxis[0].tools,\r\n            { xy: xyArr, type: draw.type, style: { strokeColor: \"blue\", anchorColor: \"#333\" } } as DrawingTool,\r\n          ],\r\n        },\r\n        ...subcharts[subchartIdx].yaxis.slice(1),\r\n      ],\r\n    },\r\n    ...subcharts.slice(subchartIdx + 1),\r\n  ];\r\n};\r\n\r\nexport const calculateXPointer = (\r\n  widthPerTick: number,\r\n  translatedPixX: number,\r\n  xaxis: InteractiveXaxisType,\r\n  mainGraph: ChartGraphStateType,\r\n  onMove?: ChartStateType[\"pointer\"][\"move\"]\r\n) => {\r\n  const defaultXpointer = null;\r\n\r\n  if (!mainGraph || !onMove) return defaultXpointer;\r\n  const xIdx = Math.round(purePixToX(onMove?.xy[0] as any, translatedPixX, widthPerTick));\r\n  if (xIdx < 0 || xIdx > mainGraph.data.length - 1) return { xPointerUnlimited: xIdx };\r\n  const xPointer = Math.abs(Math.round(xIdx));\r\n  let xPointerDateStr = \"\";\r\n  const optPeriodRes = getOptimalPeriod(\r\n    mainGraph.data,\r\n    xaxis.xStart,\r\n    xaxis.xEnd,\r\n    mainGraph.meta,\r\n    xaxis.noDataPeriodPortion,\r\n    Object.assign({}, mainGraph.dateStat)\r\n  );\r\n  // console.log(mainGraph, onMove, optPeriodRes, mainGraph.meta.chartPeriod);\r\n  if (!optPeriodRes || !mainGraph.meta.chartPeriod) return defaultXpointer;\r\n\r\n  const periodToDraw = isNewPeriod(mainGraph.data[xPointer].date, mainGraph.dateStat, mainGraph.meta.chartPeriod, {\r\n    ...(optPeriodRes as ChartPeriodType),\r\n  });\r\n  xPointerDateStr = getDateString(\r\n    mainGraph.data[xPointer].date,\r\n    !!periodToDraw ? periodToDraw : mainGraph.meta.chartPeriod.chartPeriodName\r\n  );\r\n  const pixXPointer = pureXToPix(xPointer, translatedPixX, widthPerTick);\r\n  return { xPointer, xPointerDateStr, pixXPointer, xPointerUnlimited: xIdx };\r\n};\r\n\r\nexport const calculateCurrentPointerDataset = (\r\n  subcharts: CalculatedChartStateType[\"subCharts\"] | null,\r\n  xpointer: number | null,\r\n  xpointerUnlimited: number,\r\n  xPointerDateString: string,\r\n  pixXPointer: number,\r\n  onMove: CalculatedChartStateType[\"pointer\"][\"move\"],\r\n  onDragEnd: CalculatedChartStateType[\"pointer\"][\"dragPointerUp\"]\r\n): InteractivePointerType[\"chartPointer\"] | undefined => {\r\n  const xy = onMove?.xy;\r\n  if (!onMove || !subcharts || !xy) return;\r\n\r\n  const getSubchartIdx = (xy: Vector2) => {\r\n    let subchartIdx: number = -1;\r\n    for (let i = 0; i < subcharts.length; i++) {\r\n      const subchart = subcharts[i];\r\n      if (xy[1] >= subchart.top && xy[1] < subchart.bottom) subchartIdx = i;\r\n    }\r\n    return subchartIdx;\r\n  };\r\n  const subchartIdx = getSubchartIdx(xy);\r\n  if (subchartIdx === -1) return;\r\n  const clickedSubchartIdx = !!onDragEnd && !!onDragEnd.xy ? getSubchartIdx(onDragEnd.xy) : null;\r\n\r\n  const snapDatasets: InteractivePointerType[\"chartPointer\"][\"move\"][\"snapDatasets\"] = [];\r\n\r\n  if (xpointer !== null)\r\n    subcharts[subchartIdx].yaxis.forEach((singleYaxis, singleYaxisIdx) => {\r\n      singleYaxis.graphs.forEach((graph, graphIdx) => {\r\n        let ySnap: string | null = null;\r\n        let pixYSnap: number | null = null;\r\n\r\n        const snapPriceRes = snapPixYToPrices(\r\n          onMove?.xy[1],\r\n          graph.data[xpointer],\r\n          subcharts,\r\n          subchartIdx,\r\n          singleYaxisIdx\r\n        );\r\n        if (!!snapPriceRes && snapPriceRes.length > 0) {\r\n          pixYSnap = snapPriceRes[0].pixY;\r\n          ySnap = snapPriceRes[0].y;\r\n        }\r\n\r\n        snapDatasets.push({\r\n          yaxisIdx: singleYaxisIdx,\r\n          graphIdx: graphIdx,\r\n          data: graph.data[xpointer],\r\n          y: purePixToY(\r\n            onMove?.xy[1],\r\n            subcharts[subchartIdx].bottom,\r\n            singleYaxis.decimals,\r\n            singleYaxis.translatedY,\r\n            singleYaxis.heightPerPt\r\n          ),\r\n          ySnap: ySnap,\r\n          pixYSnap: pixYSnap,\r\n          dateString: xPointerDateString,\r\n        });\r\n      });\r\n    });\r\n\r\n  const calcPointerDataset = {\r\n    move: {\r\n      pixX: onMove?.xy[0],\r\n      pixXSnap: pixXPointer,\r\n      pixY: onMove?.xy[1],\r\n      x: xpointer,\r\n      xUnlimited: xpointerUnlimited,\r\n      subchartIdx, //onMove\r\n      snapDatasets: snapDatasets,\r\n      xDateString: xPointerDateString,\r\n    },\r\n    click: {\r\n      clickedSubchartIdx: clickedSubchartIdx, //onDragEnd\r\n    },\r\n  };\r\n  return calcPointerDataset;\r\n};\r\n","import React, { DOMElement } from \"react\";\r\nimport { useGesture } from \"react-use-gesture\";\r\nimport { chartStateReducer, ReducerActionTaskType, ReducerActionType } from \"./CChartStateReducer\";\r\n\r\nimport { getChartMethods } from \"./CChartStateMethods\";\r\nimport { calculateCurrentXaxis, getInteractiveXaxisState } from \"./CChartStateXaxis\";\r\nimport { calculateCurrentGraphs, purePixToY, pureYToPix } from \"./CChartStateYaxis\";\r\nimport { calculateXPointer, calculateCurrentPointerDataset } from \"./CChartStateInteractions\";\r\nimport { purePixToX, pureXToPix } from \"./CChartStateXaxis\";\r\nimport {\r\n  CalculatedChartStateType,\r\n  ChartPreStateRefType,\r\n  ChartStateType,\r\n  InteractiveXaxisType,\r\n  isChartGraph,\r\n  InteractivePointerType,\r\n  userInteractsSubchartStateType,\r\n  UseGestureStateType,\r\n  isIndicatorGraph,\r\n} from \"../Types/CChartStateTypes\";\r\nimport { addTool, addToolAnchor, editToolPosition, getDragActionType, resizeSubchart } from \"./CChartStateInteractions\";\r\nimport { includesOne } from \"../utils\";\r\nvar dequal = require(\"fast-deep-equal\");\r\n\r\nexport const defaultState: ChartStateType = {\r\n  xaxis: {\r\n    heightXAxis: 50,\r\n    heightTickMarkLines: 20,\r\n    totalScaleX: 0,\r\n    totalTranslatedX: 0,\r\n    scaledWidthPerTick: 10,\r\n    xStart: 0,\r\n    xEnd: 0,\r\n    pixXStart: 0,\r\n    pixXEnd: 0,\r\n    startNoDataPeriod: 0,\r\n    endNoDataPeriod: 0,\r\n    noDataPeriodPortion: 0,\r\n    optPeriodRes: null,\r\n    widthPerTick: 20,\r\n    xAxisTicks: [],\r\n    style: {\r\n      fillColor: \"#fff\",\r\n      strokeColor: \"#000\",\r\n      fontColor: \"#000\",\r\n      fontSize: 16,\r\n      fontName: \"Arial\",\r\n    },\r\n  },\r\n  grid: { useGridX: true, useGridY: true, style: { strokeColor: \"rgba(51,51,51, 0.33)\", strokeStyle: \"\" } },\r\n  yaxis: {\r\n    widthYAxis: 80,\r\n    widthTickmarkLines: 20,\r\n    style: {\r\n      fillColor: \"#fff\",\r\n      strokeColor: \"#000\",\r\n      fontColor: \"#000\",\r\n      fontSize: 16,\r\n      fontName: \"Arial\",\r\n    },\r\n  },\r\n  backgroundColor: \"#fff\",\r\n  fullscreen: false,\r\n  subCharts: [],\r\n  draw: {\r\n    isDrawing: false,\r\n    pixXy: [],\r\n  },\r\n  containerSize: { top: 0, left: 0, width: 300, height: 300, init: false },\r\n  pointer: {\r\n    isHovering: false,\r\n    move: { isMoving: false, xy: [0, 0] },\r\n    wheel: { isWheeling: false, delta: [0, 0] },\r\n    dragPointerUp: {\r\n      isDragPointerUp: false,\r\n      xy: [0, 0],\r\n      first: false,\r\n      last: false,\r\n      initial: [0, 0],\r\n      movementInitial: [0, 0],\r\n    },\r\n    drag: {\r\n      isDragging: false,\r\n      xy: [0, 0],\r\n      first: false,\r\n      last: false,\r\n      initial: [0, 0],\r\n      movementInitial: [0, 0],\r\n      delta: [0, 0],\r\n    },\r\n    chartPointer: {\r\n      move: {\r\n        x: 0,\r\n        pixX: 0,\r\n        pixY: 0,\r\n        snapDatasets: [],\r\n        subchartIdx: 0,\r\n        xDateString: \"\",\r\n        pixXSnap: 0,\r\n        xUnlimited: 0,\r\n      },\r\n      click: { clickedSubchartIdx: null },\r\n    },\r\n  },\r\n};\r\n\r\nexport const useChartState = (\r\n  HtmlElementRef: React.RefObject<HTMLElement>,\r\n  settings: {\r\n    maxUpdatesPerSec?: number;\r\n    initWidthPerTick?: number;\r\n    width?: number;\r\n    height?: number;\r\n    viewMode?: \"static\" | \"responsive\" | \"fullscreen\";\r\n  }\r\n): [CalculatedChartStateType, React.Dispatch<ReducerActionType<ReducerActionTaskType>>] => {\r\n  const maxUpdatesPerSec = !!settings.maxUpdatesPerSec ? settings.maxUpdatesPerSec : 15;\r\n  const initWidthPerTick = !!settings.initWidthPerTick ? settings.initWidthPerTick : 10;\r\n  const viewModeInternal =\r\n    settings.viewMode === \"static\" && (!settings.height || !settings.width)\r\n      ? \"responsive\"\r\n      : !!settings.viewMode\r\n      ? settings.viewMode\r\n      : \"responsive\";\r\n  // const isResponsive = settings.width === undefined && settings.height === undefined ? true : false;\r\n  const [ChartState, Dispatch] = React.useReducer<\r\n    (prevState: ChartStateType, action: ReducerActionType<ReducerActionTaskType>) => ChartStateType\r\n  >(chartStateReducer, defaultState);\r\n\r\n  const PreStateRef = React.useRef<ChartPreStateRefType>({\r\n    containerSize: defaultState.containerSize,\r\n    pointer: defaultState.pointer,\r\n    xaxis: {\r\n      totalScaleX: 0,\r\n      totalTranslatedX: 0,\r\n      scaledWidthPerTick: 10,\r\n      xStart: 0,\r\n      xEnd: 0,\r\n      pixXStart: 0,\r\n      pixXEnd: 0,\r\n      startNoDataPeriod: 0,\r\n      endNoDataPeriod: 0,\r\n      noDataPeriodPortion: 0,\r\n      optPeriodRes: null,\r\n      widthPerTick: 20,\r\n      xAxisTicks: [],\r\n    },\r\n    tmp: { scaleInitWidthPerTick: null, scaleInitTranslatedX: 0, dragActionType: null },\r\n    lastUpdate: new Date(),\r\n    shallUpdate: [],\r\n    userInteractedChartState: null,\r\n  });\r\n\r\n  const containerHeight = ChartState.containerSize.height - 1;\r\n\r\n  /** Pointer Event Handler defined using react-use-gesture -> pointer state is stored in PreStateRef */\r\n  useGesture(\r\n    {\r\n      onDrag: (dragState: UseGestureStateType[\"drag\"]) => {\r\n        const deltaX =\r\n          !!PreStateRef.current.pointer.drag?.delta && !!PreStateRef.current.shallUpdate.includes(\"drag\")\r\n            ? PreStateRef.current.pointer.drag?.delta[0] + dragState.delta[0]\r\n            : dragState.delta[0];\r\n        const deltaY =\r\n          !!PreStateRef.current.pointer.drag?.delta && !!PreStateRef.current.shallUpdate.includes(\"drag\")\r\n            ? PreStateRef.current.pointer.drag?.delta[1] + dragState.delta[1]\r\n            : dragState.delta[1];\r\n\r\n        const { xy, initial, movement: movementInitial, first, last, active: isDragging } = dragState;\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          pointer: {\r\n            ...PreStateRef.current.pointer,\r\n            drag: { isDragging, xy, initial, movementInitial, last, first, delta: [deltaX, deltaY] },\r\n          },\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"drag\"],\r\n          lastUpdate: PreStateRef.current.lastUpdate,\r\n        };\r\n      },\r\n      onMove: (moveState: UseGestureStateType[\"move\"]) => {\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          pointer: {\r\n            ...PreStateRef.current.pointer,\r\n            move: { isMoving: moveState.active, xy: moveState.xy },\r\n          },\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"pointerMove\"],\r\n        };\r\n      },\r\n      onHover: (hoverState: UseGestureStateType[\"hover\"]) => {\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          pointer: {\r\n            ...PreStateRef.current.pointer,\r\n            isHovering: hoverState.active,\r\n          },\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"pointerMove\"],\r\n        };\r\n      },\r\n      onWheel: (wheelState: UseGestureStateType[\"wheel\"]) => {\r\n        const deltaX =\r\n          !!PreStateRef.current.pointer.wheel?.delta && !!PreStateRef.current.shallUpdate.includes(\"wheel\")\r\n            ? PreStateRef.current.pointer.wheel?.delta[0] + wheelState.delta[0]\r\n            : wheelState.delta[0];\r\n        const deltaY =\r\n          !!PreStateRef.current.pointer.wheel?.delta && !!PreStateRef.current.shallUpdate.includes(\"wheel\")\r\n            ? PreStateRef.current.pointer.wheel?.delta[1] + wheelState.delta[1]\r\n            : wheelState.delta[1];\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          pointer: {\r\n            ...PreStateRef.current.pointer,\r\n            wheel: { delta: [deltaX, deltaY], isWheeling: wheelState.active },\r\n          },\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"wheel\"],\r\n        };\r\n      },\r\n      onDragEnd: (dragState: UseGestureStateType[\"dragEnd\"]) => {\r\n        const { xy, initial, first, last, movement: movementInitial } = dragState;\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          pointer: {\r\n            ...PreStateRef.current.pointer,\r\n            dragPointerUp: { isDragPointerUp: true, xy, initial, movementInitial, last, first },\r\n          },\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"dragEnd\"],\r\n        };\r\n      },\r\n    },\r\n    {\r\n      domTarget: HtmlElementRef,\r\n      transform: ([x, y]) => [x - ChartState.containerSize.top, y - ChartState.containerSize.left],\r\n      // eventOptions: { capture: true,  },\r\n      drag: { useTouch: true, experimental_preventWindowScrollY: true },\r\n      move: {},\r\n    }\r\n  );\r\n\r\n  /** window resize event handler  */\r\n  React.useEffect(() => {\r\n    console.log(\"HI!\");\r\n    if (!HtmlElementRef || !HtmlElementRef.current) return;\r\n    console.log(\"noch da!\");\r\n    if (ChartState.fullscreen || viewModeInternal === \"fullscreen\") {\r\n      console.log(\"immrt noch!\");\r\n      HtmlElementRef.current.style.position = \"fixed\";\r\n      HtmlElementRef.current.style.width = \"100%\";\r\n      HtmlElementRef.current.style.height = \"100%\";\r\n      HtmlElementRef.current.style.top = \"0px\";\r\n      const { clientWidth: width, clientHeight: height } = HtmlElementRef.current;\r\n      PreStateRef.current = {\r\n        ...PreStateRef.current,\r\n        shallUpdate: [...PreStateRef.current.shallUpdate, \"containerResize\"],\r\n        containerSize: { top: 0, left: 0, width, height, init: true },\r\n      };\r\n      // return;\r\n    } else {\r\n      const { top, left } = HtmlElementRef.current.getBoundingClientRect();\r\n      const { clientWidth: width, clientHeight: height } = HtmlElementRef.current;\r\n      HtmlElementRef.current.style.position = \"relative\";\r\n      HtmlElementRef.current.style.width =\r\n        !!settings.width && viewModeInternal === \"static\" ? settings.width + \"px\" : \"100%\";\r\n      HtmlElementRef.current.style.height =\r\n        !!settings.height && viewModeInternal === \"static\" ? settings.height + \"px\" : \"100%\";\r\n      HtmlElementRef.current.style.top = \"0px\";\r\n      PreStateRef.current = {\r\n        ...PreStateRef.current,\r\n        shallUpdate: [...PreStateRef.current.shallUpdate, \"containerResize\"],\r\n        containerSize: { top, left, width, height, init: true },\r\n      };\r\n    }\r\n    // listen only when container shall be responsive -> neither width or height are set by CChart\r\n    if (!!settings.height && !!settings.width && viewModeInternal === \"static\") return;\r\n    const handleWindowResize = (e: Event) => {\r\n      if (!HtmlElementRef || !HtmlElementRef.current) return;\r\n      if (ChartState.fullscreen || viewModeInternal === \"fullscreen\") {\r\n        const { clientWidth: width, clientHeight: height } = HtmlElementRef.current;\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"containerResize\"],\r\n          containerSize: { top: 0, left: 0, width, height, init: true },\r\n        };\r\n        // return;\r\n      } else {\r\n        const { top, left } = HtmlElementRef.current.getBoundingClientRect();\r\n        const { clientWidth: width, clientHeight: height } = HtmlElementRef.current;\r\n        // HtmlElementRef.current.style.position = \"relative\";\r\n        // HtmlElementRef.current.style.width = width + \"px\";\r\n        // HtmlElementRef.current.style.height = height + \"px\";\r\n        // HtmlElementRef.current.style.top = \"0px\";\r\n        PreStateRef.current = {\r\n          ...PreStateRef.current,\r\n          shallUpdate: [...PreStateRef.current.shallUpdate, \"containerResize\"],\r\n          containerSize: { top, left, width, height, init: true },\r\n        };\r\n      }\r\n    };\r\n    console.log(\"updated! onResize E handler\");\r\n    if (!!HtmlElementRef.current.parentElement)\r\n      HtmlElementRef.current.parentElement.addEventListener(\"resize\", () => {\r\n        \"HI!!!!!\";\r\n      });\r\n    window.addEventListener(\"resize\", handleWindowResize);\r\n    window.addEventListener(\"orientationchange\", handleWindowResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleWindowResize);\r\n      window.removeEventListener(\"orientationchange\", handleWindowResize);\r\n    };\r\n  }, [\r\n    HtmlElementRef,\r\n    settings.width,\r\n    settings.height,\r\n    ChartState.fullscreen,\r\n    viewModeInternal,\r\n    HtmlElementRef?.current?.clientWidth,\r\n    HtmlElementRef?.current?.clientHeight,\r\n  ]);\r\n\r\n  const userInteractedSubcharts: userInteractsSubchartStateType = ChartState.subCharts.map((subchart) => ({\r\n    // top: subchart.top,\r\n    // bottom: subchart.bottom,\r\n    yaxis: subchart.yaxis.map((singleYaxis) => ({\r\n      decimals: singleYaxis.decimals,\r\n      graphs: singleYaxis.graphs.map((graph) => {\r\n        const addIndicatorDeps = isIndicatorGraph(graph) ? { ...graph.indicator } : {};\r\n\r\n        return {\r\n          // data: graph.data,\r\n          decimals: graph.decimals,\r\n          name: graph.name,\r\n          style: graph.style,\r\n          type: graph.type,\r\n          ...addIndicatorDeps,\r\n        };\r\n      }),\r\n      tools: singleYaxis.tools.map((tool) => ({ type: tool.type, params: tool.params, style: tool.style })),\r\n    })),\r\n  }));\r\n  const userInteractedXaxis = {\r\n    heightXAxis: ChartState.xaxis.heightXAxis,\r\n    heightTickMarkLines: ChartState.xaxis.heightTickMarkLines,\r\n    style: ChartState.xaxis.style,\r\n  };\r\n  const userInteractedChartState = {\r\n    xaxis: userInteractedXaxis,\r\n    subcharts: userInteractedSubcharts,\r\n  };\r\n\r\n  if (!dequal(PreStateRef.current.userInteractedChartState, userInteractedChartState)) {\r\n    PreStateRef.current.userInteractedChartState = userInteractedChartState;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    const onTimer = () => {\r\n      const PreState = PreStateRef.current;\r\n      const DragEndState = PreState.pointer.dragPointerUp;\r\n      const DragState = PreState.pointer.drag;\r\n      if (PreState.shallUpdate.length > 0) {\r\n        const widthYaxis = ChartState.yaxis.widthYAxis;\r\n        const widthChart = PreState.containerSize.width - 1;\r\n        const heightChart = PreState.containerSize.height - 1;\r\n        const heightXaxis = ChartState.xaxis.heightXAxis;\r\n        let calcSubcharts = ChartState.subCharts;\r\n        let calcXaxis: InteractiveXaxisType = PreState.xaxis;\r\n        let currentPointer: InteractivePointerType[\"chartPointer\"] | undefined;\r\n        let calcDraw = ChartState.draw;\r\n        let dragActionType;\r\n        if (!PreState.shallUpdate.includes(\"dragEnd\")) PreState.pointer.dragPointerUp.isDragPointerUp = false;\r\n        if (includesOne(PreState.shallUpdate, \"containerResize\") && ChartState.subCharts.length > 0) {\r\n          const dHeight =\r\n            PreState.containerSize.height -\r\n            1 -\r\n            ChartState.xaxis.heightXAxis -\r\n            ChartState.subCharts[ChartState.subCharts.length - 1].bottom;\r\n          const minMainHeight = 250;\r\n          const dHproportionalTmp = Math.floor(dHeight / ChartState.subCharts.length);\r\n          const newMainSizeTmp = ChartState.subCharts[0].bottom - ChartState.subCharts[0].top + dHproportionalTmp;\r\n          const restMainLimit = newMainSizeTmp < minMainHeight ? minMainHeight - newMainSizeTmp : 0;\r\n          const dHeightMain = dHproportionalTmp + restMainLimit;\r\n          const dHeightSingleSubchart =\r\n            ChartState.subCharts.length > 1\r\n              ? Math.floor((dHeight - dHeightMain) / (ChartState.subCharts.length - 1))\r\n              : 0;\r\n          const rest =\r\n            ChartState.subCharts.length > 1 ? (dHeight - dHeightMain) % (ChartState.subCharts.length - 1) : 0;\r\n          let currentRest = rest;\r\n          let lastBottom: number = 0;\r\n          let correctRest = 0;\r\n          calcSubcharts = calcSubcharts.map((subchart, subchartIdx) => {\r\n            if (subchartIdx === 0) {\r\n              lastBottom = subchart.bottom + 1 * dHeightMain;\r\n              return { ...subchart, bottom: subchart.bottom + 1 * dHeightMain };\r\n            } else {\r\n              const tempRest =\r\n                Math.sign(currentRest) > 0 && currentRest > 0 && currentRest !== 0\r\n                  ? -1\r\n                  : Math.sign(currentRest) < 0 && currentRest < 0 && currentRest !== 0\r\n                  ? +1\r\n                  : 0;\r\n              currentRest += tempRest;\r\n              correctRest += tempRest;\r\n              const newTop = lastBottom;\r\n              // why math.abs -> rest of Math.floor(x/n)\r\n              lastBottom = subchart.bottom + subchartIdx * dHeightSingleSubchart + dHeightMain + Math.abs(correctRest);\r\n\r\n              return {\r\n                ...subchart,\r\n                top: newTop,\r\n                bottom: subchart.bottom + subchartIdx * dHeightSingleSubchart + dHeightMain + Math.abs(correctRest),\r\n              };\r\n            }\r\n          });\r\n\r\n          console.log(dHeight, dHeightMain, dHeightSingleSubchart, rest, PreState.containerSize.height);\r\n          PreStateRef.current.userInteractedChartState = null;\r\n        }\r\n        if (\r\n          includesOne(PreState.shallUpdate, \"drag\", \"wheel\", \"containerResize\", \"deps\") ||\r\n          !!PreState.tmp.dragActionType\r\n        ) {\r\n          // drag actions\r\n\r\n          const dragInit = DragState?.initial;\r\n          // if (!PreState.shallUpdate.includes(\"drag\")) {\r\n          dragActionType = getDragActionType(\r\n            dragInit,\r\n            calcSubcharts,\r\n            calcXaxis,\r\n            !!PreState.tmp.dragActionType,\r\n            ChartState.draw.isDrawing,\r\n            widthChart - widthYaxis,\r\n            heightChart - heightXaxis\r\n          );\r\n          if (\r\n            !PreState.tmp.dragActionType &&\r\n            !!dragActionType &&\r\n            [\"resizeSubchart\"].includes(dragActionType.type) // \"editTool\", \"drawTool\"\r\n          ) {\r\n            PreState.tmp.dragActionType = dragActionType;\r\n          }\r\n          if (!!PreState.tmp.dragActionType) {\r\n            if (!!PreState.pointer.drag.isDragging) {\r\n              if (PreState.tmp.dragActionType?.type === \"resizeSubchart\") {\r\n                calcSubcharts = resizeSubchart(PreState.tmp.dragActionType, calcSubcharts, PreState.pointer.drag);\r\n              }\r\n            }\r\n\r\n            if (!PreState.pointer.drag.isDragging) {\r\n              if (![\"drawTool\", \"editTool\"].includes(PreState.tmp.dragActionType?.type)) {\r\n                if (PreState.tmp.dragActionType?.type === \"resizeSubchart\") {\r\n                  // resize with ChartState.subcharts[i].bottom (when resizing began!) for the last time\r\n\r\n                  calcSubcharts = resizeSubchart(PreState.tmp.dragActionType, calcSubcharts, PreState.pointer.drag);\r\n                  // and trigger update of ChartState.subCharts for the effect hook\r\n                  PreState.userInteractedChartState = null;\r\n                  PreState.tmp.dragActionType = null;\r\n                }\r\n              }\r\n            }\r\n            // }\r\n          }\r\n\r\n          if (\r\n            (!!dragActionType && [\"scale\", \"translate\"].includes(dragActionType.type)) ||\r\n            includesOne(PreState.shallUpdate, \"containerResize\", \"deps\")\r\n          ) {\r\n            const { scaleInitTranslatedX, scaleInitWidthPerTick } = PreState.tmp;\r\n            let mainGraph = !!calcSubcharts?.[0]?.yaxis?.[0]?.graphs?.[0]\r\n              ? calcSubcharts?.[0].yaxis[0].graphs[0]\r\n              : null;\r\n            if (!!mainGraph) if (!isChartGraph(mainGraph)) mainGraph = null;\r\n\r\n            PreState.xaxis = getInteractiveXaxisState(\r\n              { ...PreState.xaxis, scaleInitTranslatedX, scaleInitWidthPerTick }, // + temp vars in ref! therefore ref not state\r\n              PreState.pointer.drag,\r\n              PreState.pointer.wheel,\r\n              PreState.pointer.move,\r\n              initWidthPerTick,\r\n              PreState.shallUpdate.includes(\"drag\"),\r\n              dragActionType?.type === \"translate\",\r\n              dragActionType?.type === \"scale\",\r\n              widthChart, //- widthYaxis\r\n              mainGraph?.data.length ||0\r\n            );\r\n            // const { scaleInitTranslatedX, scaleInitWidthPerTick, ...xaxisInteractiveState } = PreState.xaxis;\r\n\r\n            \r\n            calcXaxis = {\r\n              ...calcXaxis,\r\n              ...PreState.xaxis,\r\n              ...calculateCurrentXaxis(\r\n                PreState.xaxis.scaledWidthPerTick,\r\n                PreState.xaxis.totalTranslatedX,\r\n                PreState.containerSize.width,\r\n                ChartState.yaxis.widthYAxis,\r\n                mainGraph\r\n              ),\r\n            };\r\n          }\r\n          if (\r\n            (!!dragActionType && [\"scale\", \"translate\", \"resizeSubchart\"].includes(dragActionType.type)) ||\r\n            !!PreState.tmp.dragActionType ||\r\n            includesOne(PreState.shallUpdate, \"containerResize\", \"deps\")\r\n          ) {\r\n            // graphs (and yaxis) - depends on drag actions (translate, scale, resizeSubchart)\r\n            const calcCurrentSubchart = calculateCurrentGraphs(\r\n              calcSubcharts,\r\n              PreState.xaxis.scaledWidthPerTick,\r\n              calcXaxis.xStart,\r\n              calcXaxis.xEnd,\r\n              calcXaxis.pixXStart,\r\n              calcXaxis.pixXEnd\r\n            );\r\n            if (!!calcCurrentSubchart) calcSubcharts = calcCurrentSubchart;\r\n          }\r\n        }\r\n        if (PreState.shallUpdate.includes(\"pointerMove\")) {\r\n          const xpointerRes = calculateXPointer(\r\n            calcXaxis.scaledWidthPerTick,\r\n            calcXaxis.totalTranslatedX,\r\n            calcXaxis,\r\n            calcSubcharts?.[0]?.yaxis?.[0]?.graphs?.[0] as any,\r\n            PreState.pointer.move\r\n          );\r\n\r\n          // if (!!xpointerRes) {\r\n            console.log(xpointerRes);\r\n            const xpointer = xpointerRes?.xPointer !== undefined? xpointerRes?.xPointer:  null;\r\n            const xPointerUnl = xpointerRes?.xPointerUnlimited !== undefined ? xpointerRes.xPointerUnlimited : -1;\r\n            const xPointerDateString = xpointerRes?.xPointerDateStr || \"\";\r\n            const pixXPointer = xpointerRes?.pixXPointer ||0;\r\n            currentPointer = calculateCurrentPointerDataset(\r\n              calcSubcharts,\r\n              xpointer,\r\n              xPointerUnl,\r\n              xPointerDateString,\r\n              pixXPointer,\r\n              PreState.pointer.move,\r\n              PreState.pointer.dragPointerUp\r\n            );\r\n          // }\r\n          // ensure xUnlimited is added to chartstate\r\n\r\n          // currentPointer = {move: {xUnlimited: Math.round(\r\n          //   purePixToX(\r\n          //     PreState.pointer.move?.xy[0] as any,\r\n          //     PreState.xaxis.totalTranslatedX,\r\n          //     PreState.xaxis.widthPerTick\r\n          //   )\r\n          // );}}\r\n        }\r\n        if (\r\n          PreState.shallUpdate.includes(\"drag\") ||\r\n          (!!PreState.tmp?.dragActionType && [\"editTool\", \"drawTool\"].includes(PreState.tmp.dragActionType.type))\r\n        ) {\r\n          if (\r\n            !PreState.tmp.dragActionType &&\r\n            !!dragActionType &&\r\n            [\"editTool\", \"drawTool\"].includes(dragActionType.type)\r\n          ) {\r\n            PreState.tmp.dragActionType = dragActionType;\r\n          }\r\n          if (!!PreState.tmp.dragActionType) {\r\n            if (!!PreState.pointer.drag.isDragging) {\r\n              if (PreState.tmp.dragActionType?.type === \"editTool\") {\r\n                calcSubcharts = editToolPosition(\r\n                  PreState.tmp.dragActionType,\r\n                  calcSubcharts,\r\n                  calcXaxis,\r\n                  PreState.pointer\r\n                );\r\n              }\r\n            }\r\n            if (!PreState.pointer.drag.isDragging) {\r\n              if (PreState.tmp.dragActionType?.type === \"editTool\") {\r\n                //   console.log(PreState.tmp.dragActionType, PreState.pointer.drag);\r\n                calcSubcharts = editToolPosition(\r\n                  PreState.tmp.dragActionType,\r\n                  calcSubcharts,\r\n                  calcXaxis,\r\n                  PreState.pointer\r\n                );\r\n                // and trigger update of ChartState.subCharts for the effect hook\r\n                PreState.userInteractedChartState = null;\r\n                PreState.tmp.dragActionType = null;\r\n              } else if (DragEndState.isDragPointerUp && PreState.tmp.dragActionType?.type === \"drawTool\") {\r\n                const nPoints = !ChartState.draw.type\r\n                  ? 0\r\n                  : [\"hline\", \"vline\"].includes(ChartState.draw.type)\r\n                  ? 1\r\n                  : [\"trendline\"].includes(ChartState.draw.type)\r\n                  ? 2\r\n                  : 0;\r\n                // console.log(nPoints, ChartState.draw, ChartState.draw.isDrawing);\r\n                if (!nPoints) calcDraw = { isDrawing: false, pixXy: [] };\r\n                else {\r\n                  if (calcDraw.pixXy.length < nPoints - 1) {\r\n                    calcDraw = addToolAnchor(calcDraw.type, calcDraw, PreState.pointer);\r\n                    // console.log(\"drawing 0\", ChartState.draw, DragEndState);\r\n                  } else {\r\n                    calcDraw = addToolAnchor(calcDraw.type, calcDraw, PreState.pointer);\r\n                    calcSubcharts = addTool(calcSubcharts, calcXaxis, calcDraw, PreState.pointer.drag);\r\n                    calcDraw = { isDrawing: false, pixXy: [] };\r\n                    PreState.tmp.dragActionType = null;\r\n                    // console.log(\"drawing 1\", DragEndState);\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        const { lastUpdate, shallUpdate, userInteractedChartState, xaxis, tmp, ...state } = PreState;\r\n        PreState.xaxis = { ...PreState.xaxis, ...calcXaxis };\r\n        if (!!currentPointer) PreState.pointer.chartPointer = currentPointer;\r\n        // PreState.subcharts = calcSubcharts;\r\n\r\n        Dispatch({\r\n          task: \"updateInteractionState\",\r\n          params: {\r\n            newState: {\r\n              ...state,\r\n              xaxis: calcXaxis as any,\r\n              subCharts: calcSubcharts,\r\n              draw: calcDraw,\r\n            },\r\n            // resizeSubchartObj,\r\n          },\r\n        } as ReducerActionType<\"updateInteractionState\">);\r\n\r\n        PreStateRef.current = {\r\n          ...PreState,\r\n          lastUpdate: new Date(),\r\n          shallUpdate: [],\r\n        };\r\n      }\r\n    };\r\n    // onTimer(); // exec immmediately\r\n    console.log(\"updated Timer\");\r\n    PreStateRef.current.shallUpdate.push(\"deps\");\r\n    onTimer();\r\n    const handleTimer = window.setInterval(onTimer, 1000 / maxUpdatesPerSec);\r\n    return () => {\r\n      window.clearInterval(handleTimer);\r\n    };\r\n  }, [\r\n    maxUpdatesPerSec,\r\n    initWidthPerTick,\r\n    ChartState.draw.isDrawing,\r\n    ChartState.draw.pixXy,\r\n    ChartState.yaxis.widthYAxis,\r\n    ChartState.xaxis.heightXAxis,\r\n    PreStateRef.current.userInteractedChartState,\r\n    ChartState.fullscreen,\r\n  ]);\r\n\r\n  return [\r\n    {\r\n      ...ChartState,\r\n      methods: getChartMethods(ChartState, containerHeight, Dispatch),\r\n    },\r\n    Dispatch,\r\n  ];\r\n};\r\n","import React from \"react\";\r\nimport { Circle, Line } from \"react-konva\";\r\nimport { DrawingTool } from \"../Types/CChartStateTypes\";\r\n\r\nexport type CTrendlineProps = {\r\n  style?: DrawingTool[\"style\"];\r\n  pixXy: [[number, number], [number, number]];\r\n  mode: \"line\" | \"trendline\" | \"infiniteLine\";\r\n  subchartTop: number;\r\n  subchartBottom: number;\r\n};\r\n\r\nexport const CTrendline = (props: CTrendlineProps) => {\r\n  const { style, pixXy, mode, subchartTop, subchartBottom } = props;\r\n  if (pixXy.length !== 2) return null;\r\n  const strokeColor = !!style?.strokeColor ? style.strokeColor : \"red\";\r\n  const anchorColor = !!style?.anchorColor ? style.anchorColor : \"#333\";\r\n  const modeInt = [\"line\", \"trendline\", \"infiniteLine\"].includes(mode) ? mode : \"trendline\";\r\n  const pixXyAdjusted: [number, number][] = [];\r\n\r\n  if (pixXy[0][0] > pixXy[1][0]) {\r\n    pixXyAdjusted.push([...pixXy[1]], [...pixXy[0]]);\r\n  } else pixXyAdjusted.push([...pixXy[0]], [...pixXy[1]]);\r\n\r\n  if (modeInt === \"trendline\" || mode === \"infiniteLine\") {\r\n    const dx = pixXyAdjusted[1][0] - pixXyAdjusted[0][0];\r\n    const dy = pixXyAdjusted[1][1] - pixXyAdjusted[0][1];\r\n    const slope = dy / dx;\r\n    const pixYTarget = dy < 0 ? subchartTop : subchartBottom;\r\n    const b = pixXyAdjusted[0][1] - slope * pixXyAdjusted[0][0];\r\n    const pixXTarget = (pixYTarget - b) / slope;\r\n    pixXyAdjusted[1][0] = pixXTarget;\r\n    pixXyAdjusted[1][1] = pixYTarget;\r\n    if (mode === \"infiniteLine\") {\r\n      const pixYSrc = dy < 0 ? subchartBottom : subchartTop;\r\n      const pixXSrc = (pixYSrc - b) / slope;\r\n      pixXyAdjusted[0][0] = pixXSrc;\r\n      pixXyAdjusted[0][1] = pixYSrc;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Line\r\n        x={0}\r\n        y={0}\r\n        points={[pixXyAdjusted[0][0], pixXyAdjusted[0][1], pixXyAdjusted[1][0], pixXyAdjusted[1][1]]}\r\n        stroke={strokeColor}\r\n        strokeWidth={1}\r\n      />\r\n      <Circle x={pixXy[0][0]} y={pixXy[0][1]} radius={5} fill={anchorColor} />\r\n      <Circle x={pixXy[1][0]} y={pixXy[1][1]} radius={5} fill={anchorColor} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Circle, Line } from \"react-konva\";\r\nimport { DrawingTool } from \"../Types/CChartStateTypes\";\r\n\r\nexport type CVlineProps = {\r\n  style?: DrawingTool[\"style\"];\r\n  pixXy: [[number, number]];\r\n  mode: \"extendUp\" | \"extendDown\" | \"extendUpDown\" | \"*extendToSecondPoint\";\r\n  subchartTop: number;\r\n  subchartBottom: number;\r\n};\r\n\r\nexport const CVline = (props: CVlineProps) => {\r\n  const { style, pixXy, subchartTop, subchartBottom } = props;\r\n  if (pixXy.length !== 1) return null;\r\n  const strokeColor = !!style?.strokeColor ? style.strokeColor : \"red\";\r\n  const anchorColor = !!style?.anchorColor ? style.anchorColor : \"#333\";\r\n  //  TODO\r\n  // const modeInt = [\"extendUp\", \"extendDown\", \"extendUpDown\", \"*extendToSecondPoint\"].includes(mode)\r\n  //   ? mode\r\n  //   : \"extendUpDown\";\r\n  const pixXyAdjusted: [number, number][] = [];\r\n  pixXyAdjusted.push([pixXy[0][0], subchartTop], [pixXy[0][0], subchartBottom]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Line\r\n        x={0}\r\n        y={0}\r\n        points={[pixXyAdjusted[0][0], pixXyAdjusted[0][1], pixXyAdjusted[1][0], pixXyAdjusted[1][1]]}\r\n        stroke={strokeColor}\r\n        strokeWidth={1}\r\n      />\r\n      <Circle x={pixXy[0][0]} y={pixXy[0][1]} radius={5} fill={anchorColor} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Line, Circle } from \"react-konva\";\r\nimport { DrawingTool } from \"../Types/CChartStateTypes\";\r\n\r\nexport type CHlineProps = {\r\n  style?: DrawingTool[\"style\"];\r\n  pixXy: [[number, number]];\r\n  mode: \"extendRight\" | \"extendLeft\" | \"extendLeftRight\" | \"*extendToSecondPoint\";\r\n  pixXstart: number;\r\n  pixXend: number;\r\n};\r\n\r\nexport const CHline = (props: CHlineProps) => {\r\n  const { style, pixXy, pixXstart, pixXend } = props;\r\n  if (pixXy.length !== 1) return null;\r\n  const strokeColor = !!style?.strokeColor ? style.strokeColor : \"red\";\r\n  const anchorColor = !!style?.anchorColor ? style.anchorColor : \"#333\";\r\n  // TODO\r\n  // const modeInt = [\"extendRight\", \"extendLeft\", \"extendLeftRight\", \"*extendToSecondPoint\"].includes(mode)\r\n  //   ? mode\r\n  //   : \"extendLeftRight\";\r\n  const pixXyAdjusted: [number, number][] = [];\r\n  pixXyAdjusted.push([pixXstart, pixXy[0][1]], [pixXend, pixXy[0][1]]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Line\r\n        x={0}\r\n        y={0}\r\n        points={[pixXyAdjusted[0][0], pixXyAdjusted[0][1], pixXyAdjusted[1][0], pixXyAdjusted[1][1]]}\r\n        stroke={strokeColor}\r\n        strokeWidth={1}\r\n      />\r\n      <Circle x={pixXy[0][0]} y={pixXy[0][1]} radius={5} fill={anchorColor} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\r\nexport const muiTheme = (() => {\r\n  let localTheme = createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#009688\",\r\n      },\r\n      secondary: {\r\n        main: \"#f50057\",\r\n      },\r\n      type: \"light\",\r\n    },\r\n  });\r\n\r\n  localTheme.typography.h1 = {\r\n    fontFamily: \"'Open Sans', sans-serif, Arial\",\r\n    fontWeight: 600,\r\n    fontSize: \"3rem\",\r\n    lineHeight: 1.167,\r\n  };\r\n  localTheme.typography.h2 = {\r\n    fontFamily: \"'Open Sans', sans-serif, Arial\",\r\n    fontWeight: 600,\r\n    fontSize: \"2.5rem\",\r\n    lineHeight: 1.167,\r\n  };\r\n  localTheme.typography.h3 = {\r\n    fontFamily: \"'Open Sans', sans-serif, Arial\",\r\n    fontWeight: 600,\r\n    fontSize: \"2rem\",\r\n    lineHeight: 1.167,\r\n  };\r\n  localTheme.typography.h4 = {\r\n    fontFamily: \"'Open Sans', sans-serif, Arial\",\r\n    fontWeight: 600,\r\n    fontSize: \"1.88rem\",\r\n    lineHeight: 1.167,\r\n  };\r\n  localTheme.typography.h5 = {\r\n    fontFamily: \"'Open Sans', sans-serif, Arial\",\r\n    fontWeight: 600,\r\n    fontSize: \"1.44rem\",\r\n    lineHeight: 1.167,\r\n  };\r\n  localTheme.typography.h6 = {\r\n    fontFamily: \"'Open Sans', sans-serif, Arial\",\r\n    fontWeight: 600,\r\n    fontSize: \"1.25rem\",\r\n    lineHeight: 1.167,\r\n  };\r\n  localTheme.typography.fontFamily = \"'Quattrocento Sans', sans-serif\";\r\n  localTheme = responsiveFontSizes(localTheme);\r\n  return localTheme;\r\n})();\r\n","import {\r\n  Button,\r\n  Grid,\r\n  ListItem,\r\n  List,\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { mdiChartLine, mdiChartBellCurve, mdiPencilRuler, mdiTune, mdiStarShooting } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { Stage, Layer, Rect, Line, Shape } from \"react-konva\";\r\nimport { CCandleChart } from \"../Charts/CCandleChart\";\r\nimport { CalculatedChartStateType } from \"../Types/CChartStateTypes\";\r\nimport { CChartMenuOpenType } from \"./ChartMenu\";\r\n\r\nexport const ChartMenuHome = (props: {\r\n  ChartState: CalculatedChartStateType;\r\n  onNavigate: (target: CChartMenuOpenType) => void;\r\n}) => {\r\n  const { ChartState, onNavigate } = props;\r\n\r\n  const isMinSm = useMediaQuery(\"(min-width:600px)\");\r\n  const previewSize = !isMinSm ? 248 : 320;\r\n  const { widthYAxis, widthTickmarkLines } = ChartState.yaxis;\r\n  const { heightXAxis, heightTickMarkLines } = ChartState.xaxis;\r\n  const containerWidth = ChartState.containerSize.width - 1;\r\n  const containerHeight = ChartState.containerSize.height - 1;\r\n  const xAxis = ChartState.xaxis.xAxisTicks;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Grid container>\r\n        <Grid item> */}\r\n      <List>\r\n        <ListItem button>\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n            }}\r\n          >\r\n            <Icon path={mdiChartLine} size={2} color={theme.palette.secondary.contrastText} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Chart (upcoming)\" primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }} />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            onNavigate?.(\"indicators\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n            }}\r\n          >\r\n            <Icon path={mdiChartBellCurve} size={2} color={theme.palette.secondary.contrastText} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Indicators\" primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }} />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            onNavigate?.(\"tools\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n            }}\r\n          >\r\n            <Icon path={mdiPencilRuler} size={2} color={theme.palette.secondary.contrastText} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Tools\" primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }} />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            onNavigate?.(\"settings\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n            }}\r\n          >\r\n            <Icon path={mdiTune} size={2} color={theme.palette.secondary.contrastText} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Settings\" primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }} />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            onNavigate?.(\"quickys\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n            }}\r\n          >\r\n            <Icon path={mdiStarShooting} size={2} color={theme.palette.secondary.contrastText} />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quick Tasks (upcoming)\" primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }} />\r\n        </ListItem>\r\n      </List>\r\n      {/* </Grid>\r\n      </Grid> */}\r\n    </React.Fragment>\r\n    // <Grid container alignItems=\"center\">\r\n    //   <Grid\r\n    //     container\r\n    //     item\r\n    //     spacing={2}\r\n    //     alignItems=\"center\"\r\n    //     justify=\"center\"\r\n    //     //   style={{justifyContent: \"flex-end\"}}\r\n    //     //   style={{ maxWidth: !isMinSm ? 400 : \"auto\" }}\r\n    //     //   wrap=\"nowrap\"\r\n    //     xs={12}\r\n    //     sm={4}\r\n    //     style={{ paddingBottom: 24 }}\r\n    //   >\r\n    //     <Grid item sm={12} xs={6}>\r\n    //       <div style={{ margin: !isMinSm ? \"0px 0px 0px auto\" : 0, width: 128 }}>\r\n    //         <Button\r\n    //           color=\"secondary\"\r\n    //           variant=\"contained\"\r\n    //           style={{ width: 96, height: 96, textTransform: \"none\", borderRadius: 5 }}\r\n    //         >\r\n    //           <div style={{ position: \"relative\", top: 0 }}>\r\n    //             <div>\r\n    //               <Icon path={mdiChartLine} size=\"75px\" />\r\n    //             </div>\r\n    //             <Typography\r\n    //               style={{ width: \"100%\", marginTop: -12, display: \"block\", color: \"#fff\", fontWeight: 600 }}\r\n    //               // color=\"secondary\"\r\n    //               variant=\"body1\"\r\n    //               component=\"div\"\r\n    //             >\r\n    //               <div style={{ margin: \"0px auto\", width: \"max-content\" }}>Chart</div>\r\n    //             </Typography>\r\n    //           </div>\r\n    //         </Button>\r\n    //       </div>\r\n    //     </Grid>\r\n    //     <Grid item sm={12} xs={6}>\r\n    //       <div style={{ width: \"max-content\" }}>\r\n    //         <Button\r\n    //           color=\"secondary\"\r\n    //           variant=\"contained\"\r\n    //           style={{ width: 96, height: 96, textTransform: \"none\", borderRadius: 5 }}\r\n    //           onClick={() => {\r\n    //             onNavigate?.(\"indicators\");\r\n    //           }}\r\n    //         >\r\n    //           <div style={{ position: \"relative\", top: 0 }}>\r\n    //             <div>\r\n    //               <Icon path={mdiChartBellCurve} size=\"72px\" />\r\n    //             </div>\r\n    //             <Typography\r\n    //               style={{ width: \"100%\", marginTop: -12, display: \"block\", color: \"#fff\", fontWeight: 600 }}\r\n    //               // color=\"secondary\"\r\n    //               variant=\"body1\"\r\n    //               component=\"div\"\r\n    //             >\r\n    //               <div style={{ margin: \"0px auto\", width: \"max-content\" }}>Indicators</div>\r\n    //             </Typography>\r\n    //           </div>\r\n    //         </Button>\r\n    //       </div>\r\n    //     </Grid>\r\n    //     <Grid item sm={12} xs={6}>\r\n    //       <div style={{ margin: !isMinSm ? \"0px 0px 0px auto\" : 0, width: 128 }}>\r\n    //         <Button\r\n    //           color=\"secondary\"\r\n    //           variant=\"contained\"\r\n    //           style={{ width: 96, height: 96, textTransform: \"none\", borderRadius: 5 }}\r\n    //           onClick={() => onNavigate?.(\"tools\")}\r\n    //         >\r\n    //           <div style={{ position: \"relative\", top: 0 }}>\r\n    //             <div>\r\n    //               <Icon path={mdiPencilRuler} size=\"72px\" />\r\n    //             </div>\r\n    //             <Typography\r\n    //               style={{ width: \"100%\", marginTop: -12, display: \"block\", color: \"#fff\", fontWeight: 600 }}\r\n    //               // color=\"secondary\"\r\n    //               variant=\"body1\"\r\n    //               component=\"div\"\r\n    //             >\r\n    //               <div style={{ margin: \"0px auto\", width: \"max-content\" }}>Tools</div>\r\n    //             </Typography>\r\n    //           </div>\r\n    //         </Button>\r\n    //       </div>\r\n    //     </Grid>\r\n    //     <Grid item sm={12} xs={6}>\r\n    //       {/* <div style={{ margin: \"0px auto\", width: \"max-content\" }}> */}\r\n    //       <Button\r\n    //         color=\"secondary\"\r\n    //         variant=\"contained\"\r\n    //         style={{ width: 96, height: 96, textTransform: \"none\", borderRadius: 5 }}\r\n    //         onClick={() => onNavigate?.(\"settings\")}\r\n    //       >\r\n    //         <div style={{ position: \"relative\", top: 0 }}>\r\n    //           <div>\r\n    //             <Icon path={mdiTune} size=\"72px\" />\r\n    //           </div>\r\n    //           <Typography\r\n    //             style={{ width: \"100%\", marginTop: -12, display: \"block\", color: \"#fff\", fontWeight: 600 }}\r\n    //             // color=\"secondary\"\r\n    //             variant=\"body1\"\r\n    //             component=\"div\"\r\n    //           >\r\n    //             <div style={{ margin: \"0px auto\", width: \"max-content\" }}>Settings</div>\r\n    //           </Typography>\r\n    //         </div>\r\n    //       </Button>\r\n    //       {/* </div> */}\r\n    //     </Grid>\r\n    //     <Grid item sm={12} xs={6}>\r\n    //       {/* <div style={{ margin: \"0px auto\", width: \"max-content\" }}> */}\r\n    //       <Button\r\n    //         color=\"secondary\"\r\n    //         variant=\"contained\"\r\n    //         style={{ width: 96, height: 96, textTransform: \"none\", borderRadius: 5 }}\r\n    //         onClick={() => onNavigate?.(\"settings\")}\r\n    //       >\r\n    //         <div style={{ position: \"relative\", top: 0 }}>\r\n    //           <div>\r\n    //             <Icon path={mdiStarShooting} size=\"72px\" />\r\n    //           </div>\r\n    //           <Typography\r\n    //             style={{ width: \"100%\", marginTop: -12, display: \"block\", color: \"#fff\", fontWeight: 600 }}\r\n    //             // color=\"secondary\"\r\n    //             variant=\"body1\"\r\n    //             component=\"div\"\r\n    //           >\r\n    //             <div style={{ margin: \"0px auto\", width: \"max-content\" }}>Shortcuts</div>\r\n    //           </Typography>\r\n    //         </div>\r\n    //       </Button>\r\n    //       {/* </div> */}\r\n    //     </Grid>\r\n    //   </Grid>\r\n    //   {!!null ? (\r\n    //     <Grid item xs={12} sm={6}>\r\n    //       <Paper style={{ width: previewSize, height: previewSize, margin: \"0 auto\", border: \"1px solid #666\" }}>\r\n    //         <Stage //konva container\r\n    //           width={previewSize}\r\n    //           height={previewSize}\r\n    //           listening={false}\r\n\r\n    //           // style={{ boxSizing: \"border-box\" }}\r\n    //         >\r\n    //           {/*  Canvas Layer 3 - chart and example */}\r\n\r\n    //           <Layer\r\n    //             scale={{\r\n    //               x: previewSize / ChartState.containerSize.width,\r\n    //               y: previewSize / ChartState.containerSize.height,\r\n    //             }}\r\n    //           >\r\n    //             {/* <Rect\r\n    //           x={20 + ChartState.pointer.totalTranslatedX}\r\n    //           y={50 + ChartState.pointer.totalTranslatedY}\r\n    //           width={100}\r\n    //           height={100}\r\n    //           fill=\"red\"\r\n    //           shadowBlur={10}\r\n    //         /> */}\r\n    //             {0 in ChartState.subCharts ? <CCandleChart fullState={ChartState} /> : null}\r\n    //           </Layer>\r\n    //           {/*  Canvas Layer 5 (before 0) - axis bg rects + future chartbgcolor? */}\r\n    //           <Layer\r\n    //             scale={{\r\n    //               x: previewSize / ChartState.containerSize.width,\r\n    //               y: previewSize / ChartState.containerSize.height,\r\n    //             }}\r\n    //           >\r\n    //             <Rect\r\n    //               x={0 + 0.5}\r\n    //               y={containerHeight - heightXAxis + 0.5}\r\n    //               width={containerWidth}\r\n    //               height={heightXAxis}\r\n    //               fill={ChartState.xaxis.style.fillColor}\r\n    //               stroke={ChartState.xaxis.style.strokeColor}\r\n    //               strokeWidth={1}\r\n    //             />\r\n    //             {ChartState.subCharts.map((subchart, subchartIdx) => (\r\n    //               <React.Fragment key={subchartIdx}>\r\n    //                 <Rect\r\n    //                   // key={`subchartPrimaryYaxis-${subchartIdx}`}\r\n    //                   x={containerWidth - widthYAxis + 0.5}\r\n    //                   y={subchart.top + 0.5}\r\n    //                   width={widthYAxis}\r\n    //                   height={subchart.bottom - subchart.top}\r\n    //                   // fill={ChartState.xaxis.style.fillColor}\r\n    //                   stroke={ChartState.xaxis.style.strokeColor}\r\n    //                   strokeWidth={1}\r\n    //                 />\r\n    //                 <Rect\r\n    //                   // key={`subchartBorder-${subchartIdx}`}\r\n    //                   x={0 + 0.5}\r\n    //                   y={subchart.top + 0.5}\r\n    //                   width={containerWidth - widthYAxis}\r\n    //                   height={subchart.bottom - subchart.top}\r\n    //                   stroke={ChartState.xaxis.style.strokeColor}\r\n    //                   strokeWidth={1}\r\n    //                 />\r\n    //               </React.Fragment>\r\n    //             ))}\r\n    //           </Layer>\r\n    //           {/*  Canvas Layer 6 before 1 - x axis */}\r\n    //           <Layer\r\n    //             scale={{\r\n    //               x: previewSize / ChartState.containerSize.width,\r\n    //               y: previewSize / ChartState.containerSize.height,\r\n    //             }}\r\n    //           >\r\n    //             {xAxis.map((xaxisTick, xaxisTickIdx) => {\r\n    //               return (\r\n    //                 <React.Fragment key={xaxisTickIdx}>\r\n    //                   <Line\r\n    //                     x={xaxisTick.x}\r\n    //                     y={ChartState.containerSize.height - 1 - heightXAxis + 0.5}\r\n    //                     points={[0, 0, 0, heightTickMarkLines]}\r\n    //                     stroke={ChartState.xaxis.style.strokeColor}\r\n    //                     strokeWidth={1}\r\n    //                   />\r\n    //                   {!!ChartState.grid.useGridX ? (\r\n    //                     <Line\r\n    //                       x={xaxisTick.x}\r\n    //                       y={0 + 0.5}\r\n    //                       points={[0, 0, 0, ChartState.containerSize.height - 1 - heightXAxis + 0.5]}\r\n    //                       stroke={ChartState.grid.style.strokeColor}\r\n    //                       strokeWidth={1}\r\n    //                     />\r\n    //                   ) : null}\r\n    //                   <Shape\r\n    //                     sceneFunc={(context, shape) => {\r\n    //                       // context.fillS\r\n    //                       const ctx = context._context;\r\n    //                       ctx.font = ChartState.xaxis.style.fontSize + \"px \" + ChartState.xaxis.style.fontName;\r\n    //                       ctx.fillStyle = ChartState.xaxis.style.fontColor;\r\n    //                       ctx.textAlign = \"center\";\r\n    //                       ctx.textBaseline = \"top\";\r\n    //                       ctx.fillText(\r\n    //                         xaxisTick.dateString,\r\n    //                         xaxisTick.x,\r\n    //                         ChartState.containerSize.height - 1 - heightXAxis + 0.5 + 20 + 5 // additional 5px distance to end of tickmark\r\n    //                       );\r\n    //                       // (!) Konva specific method, it is very important\r\n    //                       context.fillStrokeShape(shape);\r\n    //                     }}\r\n    //                     // fill=\"#333\"\r\n    //                     // stroke={ChartState.options.xAxis.style.fontColor}\r\n    //                     // strokeWidth={1}\r\n    //                   />\r\n    //                 </React.Fragment>\r\n    //               );\r\n    //             })}\r\n    //           </Layer>\r\n    //           {/*  Canvas Layer 7 before 2 - y axis */}\r\n    //           <Layer\r\n    //             scale={{\r\n    //               x: previewSize / ChartState.containerSize.width,\r\n    //               y: previewSize / ChartState.containerSize.height,\r\n    //             }}\r\n    //           >\r\n    //             {ChartState.subCharts.map((subchart, subchartIdx) => {\r\n    //               return subchart.yaxis.map((singleYaxis, singleYaxisIdx) => {\r\n    //                 const yAxisTicks = singleYaxis.drawTicks;\r\n\r\n    //                 // const yAxisTicks =\r\n    //                 //   subchartIdx === 0 ? subchart.yaxis[0] : subchart.yaxis[0].slice(0, subchart.yaxis[0].length - 1);\r\n    //                 return yAxisTicks.map((yaxisTick, yaxisTickIdx) => {\r\n    //                   return (\r\n    //                     <React.Fragment key={yaxisTick.label}>\r\n    //                       <Line\r\n    //                         x={ChartState.containerSize.width - 1 - widthYAxis + 0.5}\r\n    //                         y={yaxisTick.pixY + 0.5}\r\n    //                         points={[0, 0, widthTickmarkLines, 0]}\r\n    //                         stroke={ChartState.xaxis.style.strokeColor}\r\n    //                         strokeWidth={1}\r\n    //                       />\r\n    //                       {!!ChartState.grid.useGridY ? (\r\n    //                         <Line\r\n    //                           x={0 + 0.5}\r\n    //                           y={yaxisTick.pixY + 0.5}\r\n    //                           points={[0, 0, ChartState.containerSize.width - 1 + 0.5, 0]}\r\n    //                           stroke={ChartState.grid.style.strokeColor}\r\n    //                           strokeWidth={1}\r\n    //                         />\r\n    //                       ) : null}\r\n    //                       <Shape\r\n    //                         sceneFunc={(context, shape) => {\r\n    //                           // context.fillS\r\n    //                           const ctx = context._context;\r\n    //                           ctx.font = ChartState.yaxis.style.fontSize + \"px \" + ChartState.yaxis.style.fontName;\r\n    //                           ctx.fillStyle = ChartState.yaxis.style.fontColor;\r\n    //                           ctx.textAlign = \"left\";\r\n    //                           ctx.textBaseline = \"middle\";\r\n    //                           ctx.fillText(\r\n    //                             yaxisTick.label,\r\n    //                             ChartState.containerSize.width - 1 - widthYAxis + widthTickmarkLines + 5 + 0.5,\r\n    //                             yaxisTick.pixY // additional 5px distance to end of tickmark\r\n    //                           );\r\n    //                           // (!) Konva specific method, it is very important\r\n    //                           context.fillStrokeShape(shape);\r\n    //                         }}\r\n    //                       />\r\n    //                     </React.Fragment>\r\n    //                   );\r\n    //                 });\r\n    //               });\r\n    //             })}\r\n    //           </Layer>\r\n    //         </Stage>\r\n    //       </Paper>\r\n    //     </Grid>\r\n    //   ) : null}\r\n    // </Grid>\r\n  );\r\n};\r\n","import { createChartGraphModel } from \"./CChartModel\";\r\nimport {\r\n  DataSeries,\r\n  ChartDataset,\r\n  IndicatorDataset,\r\n  isCandleChartDataset,\r\n  isVolumeDataset,\r\n  IndicatorDataSeries,\r\n  ChartDataSeries,\r\n  isLineChartDataset,\r\n  isIndicatorDataset,\r\n} from \"./Types/CChartTypes\";\r\nimport { AdditionalIndicatorGraphStateType, isChartGraph } from \"./Types/CChartStateTypes\";\r\n\r\nexport const iSMACalc = (\r\n  srcChartData: DataSeries,\r\n  srcChartName: string,\r\n  period: number = 20,\r\n  applyOn: \"open\" | \"close\" | \"high\" | \"low\" = \"close\"\r\n): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataSeries =\r\n    srcChartData.map((srcDataset, srcDatasetIdx) => {\r\n      if (srcDatasetIdx < period - 1) return { prices: [null], date: srcDataset.date };\r\n      let singleSmaAcc = 0;\r\n      srcChartData.slice(srcDatasetIdx - period + 1, srcDatasetIdx + 1).forEach((selSrcDataset) => {\r\n        if (isLineChartDataset(selSrcDataset)) singleSmaAcc += selSrcDataset.close;\r\n        else if (isIndicatorDataset(selSrcDataset))\r\n          singleSmaAcc += !!selSrcDataset.prices[0] ? selSrcDataset.prices[0] : 0;\r\n      });\r\n      return { prices: [singleSmaAcc / period], date: srcDataset.date };\r\n    }) || [];\r\n  return indicatorData;\r\n  // const indicatorData: IndicatorDataset[] = [];\r\n  // for (let i = 0; i < srcChartData.length; i++) {\r\n  //   if (i < period - 1) {\r\n  //     indicatorData.push({ prices: [null], date: srcChartData[i].date });\r\n  //     continue;\r\n  //   }\r\n  //   let singleSmaAcc = 0;\r\n  //   for (let j = i - period + 1; j <= i; j++) {\r\n  //     singleSmaAcc += srcChartData[j].close;\r\n  //   }\r\n  //   indicatorData.push({ prices: [singleSmaAcc / period], date: srcChartData[i].date });\r\n  // }\r\n  // return indicatorData;\r\n};\r\n\r\nexport const iSMA: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  indicatorFn: iSMACalc,\r\n  name: \"SMA\",\r\n  params: [{ name: \"period\", val: 10 }],\r\n  default: { params: [{ name: \"period\", val: 10 }], newSubchart: false },\r\n  type: \"line\",\r\n};\r\n\r\nexport const iEMACalc = (\r\n  srcChartData: DataSeries,\r\n  srcChartName: string,\r\n  period: number = 20,\r\n  applyOn: \"open\" | \"close\" | \"high\" | \"low\" = \"close\"\r\n): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataSeries = [];\r\n  for (let i = 0; i < srcChartData.length; i++) {\r\n    if (i < period - 1) {\r\n      indicatorData.push({ prices: [null], date: srcChartData[i].date });\r\n      continue;\r\n    } else if (i === period - 1) {\r\n      let initSMA = 0;\r\n      for (let j = 0; j < period; j++) {\r\n        const dataset = srcChartData[j];\r\n        const price = isLineChartDataset(dataset)\r\n          ? dataset.close\r\n          : isIndicatorDataset(dataset)\r\n          ? dataset.prices[0] || 0\r\n          : 0;\r\n        initSMA += price;\r\n      }\r\n      initSMA /= period;\r\n      indicatorData.push({ prices: [initSMA], date: srcChartData[i].date });\r\n    } else {\r\n      const multiplier = 2 / (period + 1);\r\n      const dataset = srcChartData[i];\r\n      const price = isLineChartDataset(dataset)\r\n        ? dataset.close\r\n        : isIndicatorDataset(dataset)\r\n        ? dataset.prices[0] || 0\r\n        : 0;\r\n      const ema =\r\n        (price - (indicatorData[i - 1].prices[0] as number)) * multiplier + (indicatorData[i - 1].prices[0] as number);\r\n      indicatorData.push({ prices: [ema], date: srcChartData[i].date });\r\n    }\r\n  }\r\n  return indicatorData;\r\n};\r\nexport const iEMA: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  indicatorFn: iEMACalc,\r\n  name: \"EMA\",\r\n  params: [{ name: \"period\", val: 10 }],\r\n  default: { params: [{ name: \"period\", val: 10 }], newSubchart: false },\r\n  type: \"line\",\r\n};\r\n\r\nexport const iATRCalc = (\r\n  srcChartData: ChartDataset[],\r\n  srcChartName: string,\r\n  period: number = 20,\r\n  applyOn: \"open\" | \"close\" | \"high\" | \"low\" = \"close\"\r\n): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataset[] = [];\r\n  for (let i = 0; i < srcChartData.length; i++) {\r\n    if (i < period) {\r\n      indicatorData.push({ prices: [null], date: srcChartData[i].date });\r\n      continue;\r\n    }\r\n    let singleValAcc = 0;\r\n    for (let j = i - period + 1; j <= i; j++) {\r\n      const dataset = srcChartData[j];\r\n      const dataset1 = srcChartData[j - 1];\r\n      let singleAtr = 0;\r\n      if (isCandleChartDataset(dataset) && isCandleChartDataset(dataset1)) {\r\n        const hl = dataset.high - dataset.low;\r\n        const hc1 = Math.abs(dataset.high - dataset1.close);\r\n        const lc1 = Math.abs(dataset.low - dataset1.close);\r\n        singleAtr = Math.max(hl, hc1, lc1);\r\n      } else {\r\n        const dc = Math.abs(dataset.close - dataset1.close);\r\n      }\r\n      singleValAcc += singleAtr;\r\n    }\r\n    indicatorData.push({ prices: [singleValAcc / period], date: srcChartData[i].date });\r\n  }\r\n  return indicatorData;\r\n};\r\nexport const iATR: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  indicatorFn: iATRCalc,\r\n  name: \"ATR\",\r\n  params: [{ name: \"period\", val: 14 }],\r\n  default: { params: [{ name: \"period\", val: 14 }], newSubchart: true },\r\n  type: \"line\",\r\n};\r\n\r\nexport const iRSICalc = (\r\n  srcChartData: ChartDataset[],\r\n  srcChartName: string,\r\n  period: number = 20,\r\n  applyOn: \"open\" | \"close\" | \"high\" | \"low\" = \"close\"\r\n): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataset[] = [];\r\n  let calcData: { lastUpEma: number; lastDwnEma: number } | null = null;\r\n  for (let i = 0; i < srcChartData.length; i++) {\r\n    if (i < period) {\r\n      indicatorData.push({ prices: [null], date: srcChartData[i].date });\r\n      if (i === 0) continue;\r\n    }\r\n    const dataset = srcChartData[i];\r\n    const dataset1 = srcChartData[i - 1];\r\n    const dClose = dataset.close - dataset1.close;\r\n    const up = dClose > 0 ? dClose : 0;\r\n    const dwn = dClose < 0 ? -dClose : 0;\r\n    const w = 1 / period;\r\n    if (i === 1) {\r\n      calcData = { lastUpEma: up, lastDwnEma: dwn };\r\n    }\r\n    if (!calcData || i < period) {\r\n      continue;\r\n    }\r\n    const upSmoothed = up * w + (1 - w) * calcData.lastUpEma;\r\n    calcData.lastUpEma = upSmoothed;\r\n    const dwnSmoothed = dwn * w + (1 - w) * calcData.lastDwnEma;\r\n    calcData.lastDwnEma = dwnSmoothed;\r\n    const rsi = dwnSmoothed === 0 ? 100 : 100 - 100 / (1 + upSmoothed / dwnSmoothed);\r\n    if (i < period) indicatorData.push({ prices: [null], date: srcChartData[i].date });\r\n    else indicatorData.push({ prices: [rsi], date: srcChartData[i].date });\r\n  }\r\n  return indicatorData;\r\n};\r\nexport const iRSI: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  indicatorFn: iRSICalc,\r\n  name: \"RSI\",\r\n  params: [{ name: \"period\", val: 14 }],\r\n  default: { params: [{ name: \"period\", val: 14 }], newSubchart: true, decimals: 2, fixedYScale: [0, 100] },\r\n  type: \"line\",\r\n};\r\n\r\nexport const iOBVCalc = (srcChartData: ChartDataset[]): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataset[] = [];\r\n  for (let i = 0; i < srcChartData.length; i++) {\r\n    const dataset = srcChartData[i];\r\n    if (i === 0 && isVolumeDataset(dataset)) {\r\n      indicatorData.push({ prices: [dataset.volume], date: dataset.date });\r\n      continue;\r\n    }\r\n    const dataset1 = srcChartData[i - 1];\r\n    if (!isVolumeDataset(dataset) || !isVolumeDataset(dataset1)) {\r\n      indicatorData.push({ prices: [null], date: srcChartData[i].date });\r\n      continue;\r\n    }\r\n    const obv = dataset.volume + dataset1.volume;\r\n    indicatorData.push({ prices: [obv], date: srcChartData[i].date });\r\n  }\r\n  return indicatorData;\r\n};\r\nexport const iOBV: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  name: \"OBV\",\r\n  type: \"line\",\r\n  params: [],\r\n  default: { params: [], newSubchart: true, decimals: 0 },\r\n  indicatorFn: iOBVCalc,\r\n};\r\n\r\nexport const iVolumeCalc = (srcChartData: ChartDataset[]): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataset[] = [];\r\n  for (let i = 0; i < srcChartData.length; i++) {\r\n    const dataset = srcChartData[i];\r\n    if (isVolumeDataset(dataset)) {\r\n      indicatorData.push({ prices: [dataset.volume], date: dataset.date });\r\n    } else {\r\n      indicatorData.push({ prices: [0], date: dataset.date });\r\n    }\r\n  }\r\n  return indicatorData;\r\n};\r\nexport const iVolume: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  indicatorFn: iVolumeCalc,\r\n  name: \"Volume\",\r\n  params: [],\r\n  default: { params: [], newSubchart: true, decimals: 0 },\r\n  type: \"bars\",\r\n};\r\n\r\nexport const iMACDCalc = (\r\n  srcChartData: ChartDataset[],\r\n  srcChartName: string,\r\n  periodEmaShort: number = 12,\r\n  periodEmaLong: number = 26,\r\n  periodSignal: number = 9,\r\n  applyOn: \"open\" | \"close\" | \"high\" | \"low\" = \"close\"\r\n): IndicatorDataSeries => {\r\n  const indicatorData: IndicatorDataSeries = [];\r\n  const emaShort = iEMACalc(srcChartData, srcChartName, periodEmaShort);\r\n  const emaLong = iEMACalc(srcChartData, srcChartName, periodEmaLong);\r\n\r\n  const macd: IndicatorDataSeries = emaShort.map((val, valIdx) => {\r\n    const emaLongVal = emaLong[valIdx].prices[0];\r\n    const emaShortVal = val.prices[0];\r\n    const macd = emaShortVal === null || emaLongVal === null ? null : emaShortVal - emaLongVal;\r\n    return {\r\n      prices: [macd],\r\n      date: srcChartData[valIdx].date,\r\n      priceLabels: [\"EMA\"],\r\n    };\r\n  });\r\n  //   // const emaIn = ema.map((ema1, ema1Idx) => ({ close: ema1.prices[0], date: ema1.date }));\r\n  const signal = iEMACalc(macd, srcChartName, periodSignal);\r\n  const macdComplete = macd.map((macdVal, macdIdx) => {\r\n    const macdValPrice = macdVal.prices[0];\r\n    const signalVal = signal[macdIdx].prices[0];\r\n    const macdHistogramm = macdValPrice === null || signalVal === null ? null : macdValPrice-signalVal; \r\n    return { ...macdVal, prices: [macdValPrice, signalVal, macdHistogramm] };\r\n  });\r\n  return macdComplete;\r\n};\r\n\r\nexport const iMACD: AdditionalIndicatorGraphStateType[\"indicator\"] = {\r\n  indicatorFn: iMACDCalc,\r\n  name: \"MACD\",\r\n  params: [\r\n    { name: \"period short\", val: 12 },\r\n    { name: \"period long\", val: 26 },\r\n    { name: \"signal period\", val: 9 },\r\n  ],\r\n  default: {\r\n    params: [\r\n      { name: \"period short\", val: 12 },\r\n      { name: \"period long\", val: 26 },\r\n      { name: \"signal period\", val: 9 },\r\n    ],\r\n    newSubchart: true,\r\n    // decimals: 0,\r\n  },\r\n  type: \"line\",\r\n};\r\n","import { makeStyles, Theme, createStyles, Typography, TypographyProps } from \"@material-ui/core\";\r\nimport { Variant } from \"@material-ui/core/styles/createTypography\";\r\nimport { TreeItemProps, TreeItem } from \"@material-ui/lab\";\r\n\r\ndeclare module \"csstype\" {\r\n  interface Properties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\nconst useTreeItemStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: theme.palette.text.secondary,\r\n      \"&:hover > $content\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n      \"&:focus > $content, &$selected > $content\": {\r\n        backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n        color: \"var(--tree-view-color)\",\r\n      },\r\n      \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    content: {\r\n      color: theme.palette.text.secondary,\r\n      borderTopRightRadius: theme.spacing(2),\r\n      borderBottomRightRadius: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n      \"$expanded > &\": {\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n      },\r\n      width: \"auto\", \r\n    },\r\n    group: {\r\n      marginLeft: 0,\r\n      \"& $content\": {\r\n        paddingLeft: theme.spacing(2),\r\n      },\r\n    },\r\n    expanded: {},\r\n    selected: {},\r\n    label: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n    labelRoot: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: theme.spacing(1, 0),\r\n    },\r\n    labelRootBtn: {\r\n      // display: \"flex\",\r\n      // alignItems: \"left\",\r\n      // padding: theme.spacing(0.5, 0),\r\n      width: \"max-content\",\r\n    },\r\n    btnLabel: {\r\n      padding: 0,\r\n    },\r\n    labelIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    labelText: {\r\n      fontWeight: \"inherit\",\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\n\r\nexport type CTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon?: JSX.Element;\r\n  labelInfo?: JSX.Element | string;\r\n  labelText: string | JSX.Element;\r\n  onLabelClick?: TreeItemProps[\"onLabelClick\"];\r\n  onIconClick?: TreeItemProps[\"onIconClick\"];\r\n  labelTypographyVariant?: Variant;\r\n  infoTypographyVariant?: Variant;\r\n  labelTypographyColor?: TypographyProps[\"color\"];\r\n  infoTypographyColor?: TypographyProps[\"color\"];\r\n};\r\n\r\nexport const CTreeItem = (props: CTreeItemProps) => {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    onLabelClick,\r\n    onIconClick,\r\n    labelTypographyVariant,\r\n    infoTypographyVariant,\r\n    labelTypographyColor,\r\n    infoTypographyColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      onLabelClick={onLabelClick}\r\n      onIconClick={onIconClick}\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          {LabelIcon}\r\n          <Typography\r\n            variant={labelTypographyVariant ?? \"body1\"}\r\n            className={classes.labelText}\r\n            color={labelTypographyColor ?? \"initial\"}\r\n          >\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant={infoTypographyVariant ?? \"caption\"} color={infoTypographyColor ?? \"initial\"}>\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color as any,\r\n        \"--tree-view-bg-color\": bgColor,\r\n        // boxSizing: \"content-box\",\r\n      } as any}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n","import { Button, Grid, IconButton, OutlinedInput, Popover, Slider, TextField, Typography } from \"@material-ui/core\";\r\nimport { mdiCheck, mdiExclamation, mdiHook } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { colorNameToHex, colorNameToRGB, hexToRgb } from \"./utils\";\r\n\r\n// const colors = [\r\n//   \"#000\", //black to white\r\n//   \"#666\",\r\n//   \"#bbb\",\r\n//   \"#fff\",\r\n//   \"#9013fe\", //violets\r\n//   \"#bd10e0\",\r\n//   \"#3f51b5\", // blues\r\n//   \"#0693E3\",\r\n//   \"#8ED1FC\",\r\n//   \"#008080\", // greens\r\n//   \"#00D084\",\r\n//   \"#7BDCB5\",\r\n//   \"#b80000\", // reds\r\n//   \"#f50057\",\r\n//   \"#f78da7\",\r\n//   \"#795548\", // brown to yellow\r\n//   \"#FF6900\",\r\n//   \"#FCB900\",\r\n// ];\r\nconst rgbaColor = [\r\n  \"0, 0, 0\", //black to whites\r\n  \"102, 102, 102\",\r\n  \"187, 187, 187\",\r\n  \"255, 255, 255\",\r\n  \"144, 19, 254\", // violets\r\n  \"189, 16, 224\",\r\n  \"63, 81, 181\", //blues\r\n  \"6, 147, 227\",\r\n  \"142, 209, 252\",\r\n  \"0, 128, 128\", // greens\r\n  \"0, 208, 132\",\r\n  \"123, 220, 181\",\r\n  \"184, 0, 0\", // red\r\n  \"245, 0, 87\",\r\n  \"247, 141, 167\",\r\n  \"121, 85, 72\", // brown to yellow\r\n  \"255, 105, 0\",\r\n  \"252, 185, 0\",\r\n];\r\n\r\n// const useStyles = makeStyles((theme: Theme) =>\r\n//   createStyles({\r\n//     root: {\r\n//       \"& > *\": {\r\n//         margin: theme.spacing(1),\r\n//         width: \"25ch\",\r\n//       },\r\n//     },\r\n//   })\r\n// );\r\n\r\nexport const ColorRect = (props: {\r\n  color: React.CSSProperties[\"background\"];\r\n  width?: number;\r\n  height?: number;\r\n  container?: any;\r\n}) => {\r\n  const { color, width = 15, height = 15, container = {} } = props;\r\n  return (\r\n    <div style={{ width: 24, height: 24, boxSizing: \"border-box\", padding: 4, ...container }}>\r\n      <div\r\n        style={{\r\n          border: \"2px solid #000\",\r\n          width: width,\r\n          height: height,\r\n          borderRadius: 3,\r\n          boxSizing: \"border-box\",\r\n          background: color,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport type ColorpickerProps = {\r\n  color: React.CSSProperties[\"background\"];\r\n  onColorSelected: (color: string) => void;\r\n};\r\nexport const Colorpicker = (props: ColorpickerProps) => {\r\n  const { color, onColorSelected } = props;\r\n  const [Open, setOpen] = React.useState(false);\r\n  const [ColorHover, setColorHover] = React.useState<string | null>(null);\r\n\r\n  const InputRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  const isHex = /((^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$))/i.test(color as string);\r\n  const hexToRgbRes = !!isHex && typeof color === \"string\" ? hexToRgb(color) : null;\r\n  const isRgb =\r\n    typeof color === \"string\"\r\n      ? (color as string).match(\r\n          /^(rgb)(a?)[(]\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*,\\s*([\\d.]+\\s*%?)\\s*(?:,\\s*([\\d.]+)\\s*)?[)]$/\r\n        )\r\n      : null;\r\n  const isRgba = !!isRgb && 2 in isRgb && isRgb[2] === \"a\";\r\n  const rgbInternal =\r\n    !!isRgb && 3 in isRgb && 4 in isRgb && 5 in isRgb\r\n      ? [parseFloat(isRgb[3]), parseFloat(isRgb[4]), parseFloat(isRgb[5])]\r\n      : isHex && !!hexToRgbRes\r\n      ? [hexToRgbRes.r, hexToRgbRes.g, hexToRgbRes.b]\r\n      : [];\r\n  if (rgbInternal.length === 0) {\r\n    const colorNameRes = colorNameToRGB(color as string);\r\n    if (!!colorNameRes) rgbInternal.push(colorNameRes.r, colorNameRes.g, colorNameRes.b);\r\n  }\r\n\r\n  const alphaProp = !!isRgba && !!isRgb && 6 in isRgb ? parseFloat(isRgb[6]) * 100 : 100;\r\n  const [AlphaVal, setAlphaVal] = React.useState(alphaProp);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <IconButton\r\n        color=\"primary\"\r\n        style={{ padding: 0 }}\r\n        onClick={() => {\r\n          setOpen(true);\r\n        }}\r\n        ref={InputRef}\r\n      >\r\n        <ColorRect color={color} />\r\n      </IconButton>\r\n      <Popover\r\n        id={\"id\"}\r\n        open={Open}\r\n        anchorEl={InputRef.current}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n        style={{ width: 250 + 50 }}\r\n      >\r\n        <Grid\r\n          container\r\n          alignContent=\"center\"\r\n          alignItems=\"center\"\r\n          justify=\"space-evenly\"\r\n          spacing={1}\r\n          style={{ margin: \"10px 15px 10px 15px\", width: 250 }}\r\n        >\r\n          {rgbaColor.map((clr, clrIdx) => (\r\n            <Grid item xs={2} key={clrIdx}>\r\n              <IconButton\r\n                color=\"default\"\r\n                style={{ padding: 0 }}\r\n                onMouseOver={(e) => {\r\n                  setColorHover(`rgba(${rgbaColor[clrIdx]},${AlphaVal})`);\r\n                }}\r\n                onMouseLeave={() => {\r\n                  setColorHover(null);\r\n                }}\r\n                onClick={() => {\r\n                  onColorSelected(\"rgba(\" + rgbaColor[clrIdx] + \",\" + AlphaVal / 100 + \")\");\r\n                  // setOpen(false);\r\n                }}\r\n              >\r\n                <ColorRect\r\n                  color={\"rgba(\" + clr + \",1)\"}\r\n                  width={24}\r\n                  height={24}\r\n                  container={{ width: \"auto\", height: \"auto\" }}\r\n                />\r\n              </IconButton>\r\n            </Grid>\r\n          ))}\r\n          <Grid item xs={3}>\r\n            <Typography>Alpha</Typography>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ padding: \"0px 10px\" }}>\r\n            <Slider\r\n              value={AlphaVal}\r\n              onChange={(e, val) => {\r\n                setAlphaVal(Array.isArray(val) ? val[0] : val);\r\n                onColorSelected(\r\n                  `rgba(${rgbInternal[0]},${rgbInternal[1]},${rgbInternal[2]},${\r\n                    (Array.isArray(val) ? val[0] : val) / 100\r\n                  })`\r\n                );\r\n              }}\r\n            ></Slider>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <TextField\r\n              margin=\"none\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              inputProps={{ style: { padding: \"5px 5px 5px 10px\" } }}\r\n              value={AlphaVal}\r\n              onChange={(e) => {\r\n                let val = parseInt(e.target.value, 10);\r\n                if (isNaN(val)) val = 0;\r\n                if (val < 0 || val > 100) return;\r\n                setAlphaVal(val);\r\n                onColorSelected(`rgba(${rgbInternal[0]},${rgbInternal[1]},${rgbInternal[2]},${val / 100})`);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <div style={{ background: \"#bbb\", borderTop: \"1px solid #666\" }}>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n            justify=\"center\"\r\n            // spacing={.5}\r\n            style={{\r\n              paddingBottom: 5,\r\n\r\n              // width: \"100%\",\r\n              // padding: \"10px 10px 0px 15px\",\r\n              margin: \"10px 15px 0px 15px\",\r\n              width: 250,\r\n              // textAlign: \"center\",\r\n            }}\r\n            // style={{ margin: \"10px 10px 0px 15px\", width: 250 }}\r\n          >\r\n            <Grid item xs={2}>\r\n              <Typography component=\"div\" align=\"center\">\r\n                R\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n              <Typography component=\"div\" align=\"center\">\r\n                G\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n              <Typography component=\"div\" align=\"center\">\r\n                B\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Typography component=\"div\" align=\"center\">\r\n                A\r\n              </Typography>\r\n            </Grid>\r\n\r\n            {/* <Grid item xs={2} style={{ padding: \"5px 0 0 0\" }}>\r\n            <TextField\r\n              value={!!ColorHover ? ColorHover : color}\r\n              margin=\"none\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              inputProps={{ style: { padding: 5, background: \"#bbb\" } }}\r\n            />\r\n          </Grid> */}\r\n            <Grid item xs={2} />\r\n            <Grid item xs={2}>\r\n              <ColorRect\r\n                color={!!ColorHover ? ColorHover : color}\r\n                width={24}\r\n                height={24}\r\n                container={{ width: \"auto\", height: \"auto\" }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            container\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n            justify=\"center\"\r\n            // spacing={.5}\r\n            style={{\r\n              paddingBottom: 15,\r\n              // borderTop: \"1px solid #666\",\r\n\r\n              // width: \"100%\",\r\n              // padding: \"10px 10px 0px 15px\",\r\n              paddingLeft: \"15px\",\r\n              // paddingRight: \"0px\",\r\n              // width: \"min-content\",\r\n              // textAlign: \"center\",\r\n            }}\r\n            // style={{ margin: \"10px 10px 0px 15px\", width: 250 }}\r\n          >\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                value={!!rgbInternal ? rgbInternal[0] : color}\r\n                margin=\"none\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                inputProps={{\r\n                  style: { padding: 5, background: `rgba(184, 0, 0, ${AlphaVal / 100})` },\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                value={!!rgbInternal ? rgbInternal[1] : color}\r\n                margin=\"none\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                inputProps={{ style: { padding: 5, background: `rgba(0, 208, 132, ${AlphaVal / 100})` } }}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                value={!!rgbInternal ? rgbInternal[2] : color}\r\n                margin=\"none\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                inputProps={{ style: { padding: 5, background: `rgba(6, 147, 227, ${AlphaVal / 100})` } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                value={AlphaVal}\r\n                margin=\"none\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                inputProps={{ style: { padding: 5, background: `#bbb` } }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1} />\r\n            <Grid item xs={3}>\r\n              <div style={{ textAlign: \"center\", margin: \"0px auto\" }}>\r\n                {/* <IconButton color=\"primary\" size=\"medium\" style={{ border: \"1px solid #666\", borderRadius: \"50%\", background: \"limegreen\" }}>\r\n                  <Icon path={mdiCheck} size={1} />\r\n                </IconButton> */}\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  style={{ minWidth: 0 }}\r\n                  onClick={() => setOpen(false)}\r\n                >\r\n                  OK\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            {/* <Grid item xs={1} />  */}\r\n          </Grid>\r\n        </div>\r\n      </Popover>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Icon } from \"@mdi/react\";\r\nimport { ToggleButton, ToggleButtonGroup, TreeView } from \"@material-ui/lab\";\r\nimport {\r\n  mdiMenuDown,\r\n  mdiMenuRight,\r\n  mdiDiameterVariant,\r\n  mdiChartBellCurve,\r\n  mdiArrowExpandVertical,\r\n  mdiPoll,\r\n  mdiHome,\r\n  mdiFilter,\r\n  mdiMagnify,\r\n  mdiAlphabetical,\r\n  mdiSortAlphabeticalAscending,\r\n  mdiDivingScubaTank,\r\n  mdiBorderColor,\r\n  mdiClose,\r\n  mdiIframeVariableOutline,\r\n} from \"@mdi/js\";\r\nimport React from \"react\";\r\nimport { iSMA, iEMA, iRSI, iMACD, iATR, iVolume, iOBV } from \"../CIndicator\";\r\nimport {\r\n  AdditionalIndicatorGraphStateType,\r\n  CalculatedChartStateType,\r\n  ChartStateHookType,\r\n  isChartGraph,\r\n  isIndicatorGraph,\r\n} from \"../Types/CChartStateTypes\";\r\nimport { ChartDataSeries } from \"../Types/CChartTypes\";\r\nimport { Grid, IconButton, TextField, Typography, useTheme } from \"@material-ui/core\";\r\nimport { CTreeItem } from \"../CTreeItem\";\r\nimport { CChartMenuOpenType } from \"./ChartMenu\";\r\nimport { ReducerActionType } from \"../ChartState/CChartStateReducer\";\r\nimport { Colorpicker } from \"../Colorpicker\";\r\n\r\nconst onIndicatorLabelClick = (\r\n  indi: AdditionalIndicatorGraphStateType[\"indicator\"],\r\n  ChartState: CalculatedChartStateType\r\n) => {\r\n  if (indi.default.newSubchart)\r\n    return () => {\r\n      ChartState.methods.addSubchart(\r\n        ChartState.subCharts[0].yaxis[0].graphs[0].data as ChartDataSeries,\r\n        ChartState.subCharts[0].yaxis[0].graphs[0].name,\r\n        indi\r\n      );\r\n    };\r\n  else\r\n    return () => {\r\n      ChartState.methods.addGraph(\r\n        ChartState.subCharts[0].yaxis[0].graphs[0].data as ChartDataSeries,\r\n        ChartState.subCharts[0].yaxis[0].graphs[0].name,\r\n        0,\r\n        indi\r\n      );\r\n    };\r\n};\r\n\r\nexport const CIndicatorGraphTreeItem = (props: {\r\n  subchartIdx: number;\r\n  yaxisIdx: number;\r\n  graphIdx: number;\r\n  ChartState: CalculatedChartStateType;\r\n  ChartStateDispatch: ChartStateHookType[1];\r\n}) => {\r\n  const { subchartIdx, yaxisIdx, graphIdx, ChartState, ChartStateDispatch } = props;\r\n  const graphGeneric = ChartState.subCharts[subchartIdx].yaxis[yaxisIdx].graphs[graphIdx];\r\n  const graph = isIndicatorGraph(graphGeneric) ? graphGeneric : null;\r\n  const theme = useTheme();\r\n\r\n  if (!graph) return null;\r\n\r\n  return (\r\n    <CTreeItem\r\n      key={`graph-sub-${subchartIdx}-y-${yaxisIdx}-graph-${graphIdx}`}\r\n      nodeId={`graph-sub-${subchartIdx}-y-${yaxisIdx}-graph-${graphIdx}`}\r\n      labelText={graph.name}\r\n      bgColor=\"#eee\"\r\n      labelIcon={\r\n        <div\r\n          style={{\r\n            background: theme.palette.primary.main,\r\n            width: 32,\r\n            height: 32,\r\n            border: \"1px solid #666\",\r\n            borderRadius: 5,\r\n            marginRight: 10,\r\n          }}\r\n        >\r\n          <Icon path={mdiChartBellCurve} size={\"32px\"} color={theme.palette.secondary.contrastText} />\r\n        </div>\r\n      }\r\n      labelInfo={\r\n        subchartIdx !== 0 || graphIdx !== 0 ? (\r\n          <IconButton\r\n            size=\"small\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              const action: ReducerActionType<\"removeGraph\"> = {\r\n                task: \"removeGraph\",\r\n                params: { subchartIdx, yaxisIdx: 0, graphIdx },\r\n              };\r\n              (ChartStateDispatch as React.Dispatch<ReducerActionType<\"removeGraph\">>)(action);\r\n            }}\r\n          >\r\n            <Icon path={mdiClose} size={1} color=\"#333\" />\r\n          </IconButton>\r\n        ) : undefined\r\n      }\r\n    >\r\n      <CTreeItem\r\n        key={subchartIdx * 1000 + yaxisIdx * 100 + graphIdx}\r\n        nodeId={(subchartIdx * 1000 + yaxisIdx * 100 + graphIdx).toString()}\r\n        labelText=\"line stroke color\"\r\n        labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n        labelInfo={\r\n          <Colorpicker\r\n            color={ChartState.subCharts[subchartIdx].yaxis[0].graphs[graphIdx].style?.strokeColor?.[0]}\r\n            onColorSelected={(color) => {\r\n              const action: ReducerActionType<\"setLineChartStrokeColor\"> = {\r\n                task: \"setLineChartStrokeColor\",\r\n                params: { color: color, subchartIdx, yaxisIdx: 0, graphIdx },\r\n              };\r\n              (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setLineChartStrokeColor\">>)(action);\r\n            }}\r\n          />\r\n        }\r\n      />\r\n      {graph.indicator.params.map((param, paramIdx) => (\r\n        <CTreeItem\r\n          nodeId={`${2 + subchartIdx}00-${graphIdx}-${paramIdx}`}\r\n          labelText={param.name}\r\n          labelIcon={<Icon path={mdiIframeVariableOutline} size={1} color=\"#333\" />}\r\n          labelInfo={\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"none\"\r\n              size=\"small\"\r\n              inputProps={{ style: { padding: 5, width: 50 } }}\r\n              defaultValue={param.val}\r\n              onChange={(e) => {\r\n                const val = parseFloat(e.target.value);\r\n\r\n                if (isNaN(val)) return;\r\n                const action: ReducerActionType<\"setIndicatorParam\"> = {\r\n                  task: \"setIndicatorParam\",\r\n                  params: { val, subchartIdx, yaxisIdx: 0, graphIdx, paramIdx },\r\n                };\r\n                (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setIndicatorParam\">>)(action);\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      ))}\r\n    </CTreeItem>\r\n  );\r\n};\r\n\r\nexport type IndicatorCategoryType = \"Average\" | \"Oszillator\" | \"Volatility\" | \"Volume\";\r\n\r\nexport const ChartMenuIndicators = (props: {\r\n  ChartState: CalculatedChartStateType;\r\n  onNavigate: (target: CChartMenuOpenType) => void;\r\n  open: CChartMenuOpenType;\r\n  ChartStateDispatch: ChartStateHookType[1];\r\n}) => {\r\n  const { ChartState, onNavigate, open, ChartStateDispatch } = props;\r\n  const theme = useTheme();\r\n  const [FilterCat, setFilterCat] = React.useState(true);\r\n\r\n  const categorys: { name: IndicatorCategoryType; icon: string }[] = [\r\n    { name: \"Average\", icon: mdiDiameterVariant },\r\n    { name: \"Oszillator\", icon: mdiChartBellCurve },\r\n    { name: \"Volatility\", icon: mdiArrowExpandVertical },\r\n    { name: \"Volume\", icon: mdiPoll },\r\n  ];\r\n  const indicators: {\r\n    name: string;\r\n    indicator: AdditionalIndicatorGraphStateType[\"indicator\"];\r\n    category: IndicatorCategoryType;\r\n  }[] = [\r\n    { name: \"SMA\", indicator: iSMA, category: \"Average\" },\r\n    { name: \"EMA\", indicator: iEMA, category: \"Average\" },\r\n    { name: \"RSI\", indicator: iRSI, category: \"Oszillator\" },\r\n    { name: \"MACD\", indicator: iMACD, category: \"Oszillator\" },\r\n    { name: \"ATR\", indicator: iATR, category: \"Volatility\" },\r\n    { name: \"Volume\", indicator: iVolume, category: \"Volume\" },\r\n    { name: \"OBV\", indicator: iOBV, category: \"Volume\" },\r\n  ];\r\n\r\n  const amtIndicators = ChartState.subCharts\r\n    .map((subchart, subIdx) =>\r\n      subchart.yaxis.map((yaxis, yaxixsIdx) => yaxis.graphs.filter((fgraph) => fgraph.type === \"indicator\").length)\r\n    )\r\n    .flat()\r\n    .reduce((acc, cur) => acc + cur);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 24, //see padding title bar\r\n          zIndex: 2,\r\n\r\n          // padding\r\n        }}\r\n      >\r\n        {amtIndicators > 0 ? (\r\n          <div style={{ paddingBottom: 5 }}>\r\n            <ToggleButtonGroup value={\"web\"} exclusive style={{ borderRadius: 500 }} size=\"small\">\r\n              <ToggleButton\r\n                // value=\"web\"\r\n                style={{\r\n                  borderBottomLeftRadius: 50,\r\n                  textTransform: \"none\",\r\n                  borderTopLeftRadius: 50,\r\n                  background: open === \"indicators\" ? theme.palette.secondary.light : \"#fff\",\r\n                }}\r\n                onClick={() => {\r\n                  onNavigate?.(\"indicators\");\r\n                }}\r\n              >\r\n                <Typography> Add</Typography>\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                value=\"android\"\r\n                style={{\r\n                  borderBottomRightRadius: 50,\r\n                  borderTopRightRadius: 50,\r\n                  background: open === \"editIndicator\" ? theme.palette.secondary.light : \"#fff\",\r\n                }}\r\n                onClick={() => {\r\n                  onNavigate?.(\"editIndicator\");\r\n                }}\r\n              >\r\n                Edit\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </div>\r\n        ) : null}\r\n        <div\r\n          style={{\r\n            background: theme.palette.secondary.light,\r\n            border: \"1px solid #666\",\r\n            borderRadius: 50,\r\n            padding: 5,\r\n          }}\r\n        >\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{ border: \"1px solid #fff\", margin: \"0px 5px\" }}\r\n            onClick={() => alert(\"upcoming\")}\r\n          >\r\n            <Icon path={mdiMagnify} size={1} color={theme.palette.primary.contrastText} />\r\n          </IconButton>\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{ border: \"1px solid #fff\", margin: \"0px 5px 0px 0px\" }}\r\n            onClick={() => setFilterCat((current) => !current)}\r\n          >\r\n            <Icon\r\n              path={FilterCat ? mdiSortAlphabeticalAscending : mdiFilter}\r\n              size={1}\r\n              color={theme.palette.primary.contrastText}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <TreeView\r\n        //   className={classes.root}\r\n        //   defaultExpanded={[\"3\"]}\r\n        defaultCollapseIcon={<Icon path={mdiMenuDown} size={1} color=\"#333\" />}\r\n        defaultExpandIcon={<Icon path={mdiMenuRight} size={1} color=\"#333\" />}\r\n        defaultEndIcon={<div style={{ width: 24 }} />}\r\n        //   selected=\"1\"\r\n        //   onNodeSelect={() => {}}\r\n        disableSelection\r\n        // style={{height: 100, overflowY: \"scroll\"}}\r\n      >\r\n        {open === \"editIndicator\"\r\n          ? ChartState.subCharts.map((subchart, subchartIdx) =>\r\n              subchart.yaxis.map((yaxis, yaxisIdx) =>\r\n                yaxis.graphs.map((graph, graphIdx) =>\r\n                  isIndicatorGraph(graph) ? (\r\n                    <CIndicatorGraphTreeItem\r\n                      key={`editIndicator-sub-${subchartIdx}-yaxis-${yaxisIdx}-graph-${graphIdx}`}\r\n                      ChartState={ChartState}\r\n                      ChartStateDispatch={ChartStateDispatch}\r\n                      subchartIdx={subchartIdx}\r\n                      yaxisIdx={yaxisIdx}\r\n                      graphIdx={graphIdx}\r\n                    />\r\n                  ) : null\r\n                )\r\n              )\r\n            )\r\n          : !!FilterCat\r\n          ? categorys.map((cat, catIdx) => (\r\n              <CTreeItem\r\n                key={`cat-${catIdx}`}\r\n                nodeId={catIdx.toString()}\r\n                labelText={cat.name}\r\n                labelIcon={\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid #666\",\r\n                      borderRadius: 5,\r\n                      marginRight: 10,\r\n                      background: theme.palette.secondary.main,\r\n                      minWidth: 48,\r\n                      height: 48,\r\n                    }}\r\n                  >\r\n                    <Icon path={cat.icon} size={2} color={theme.palette.secondary.contrastText} />\r\n                  </div>\r\n                }\r\n                bgColor={theme.palette.primary.light}\r\n              >\r\n                {indicators\r\n                  .filter((indi) => indi.category === cat.name)\r\n                  .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n                  .map((indi, indiIdx) => (\r\n                    <CTreeItem\r\n                      key={`cat-${catIdx}-indi-${indiIdx}`}\r\n                      nodeId={((catIdx + 1) * 100 + (indiIdx + 1)).toString()}\r\n                      labelText={indi.name}\r\n                      //   labelIcon={<Icon path={mdiFileChartOutline} size={1} color=\"#333\" />}\r\n                      bgColor={theme.palette.primary.light}\r\n                      onLabelClick={onIndicatorLabelClick(indi.indicator, ChartState)}\r\n                    />\r\n                  ))}\r\n              </CTreeItem>\r\n            ))\r\n          : indicators\r\n              .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n              .map((indi, indiIdx) => (\r\n                <CTreeItem\r\n                  key={`cat-indi-${indiIdx}`}\r\n                  nodeId={(indiIdx + 1).toString()}\r\n                  labelText={indi.name}\r\n                  //   labelIcon={<Icon path={mdiFileChartOutline} size={1} color=\"#333\" />}\r\n                  bgColor={theme.palette.primary.light}\r\n                  onLabelClick={onIndicatorLabelClick(indi.indicator, ChartState)}\r\n                />\r\n              ))}\r\n      </TreeView>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Icon } from \"@mdi/react\";\r\nimport { ToggleButton, ToggleButtonGroup, TreeView } from \"@material-ui/lab\";\r\nimport {\r\n  mdiMenuDown,\r\n  mdiMenuRight,\r\n  mdiDiameterVariant,\r\n  mdiChartBellCurve,\r\n  mdiArrowExpandVertical,\r\n  mdiPoll,\r\n  mdiHome,\r\n  mdiFilter,\r\n  mdiMagnify,\r\n  mdiAlphabetical,\r\n  mdiSortAlphabeticalAscending,\r\n  mdiRuler,\r\n  mdiRulerSquareCompass,\r\n  mdiArrowSplitHorizontal,\r\n  mdiBorderColor,\r\n  mdiBullseye,\r\n  mdiHelp,\r\n  mdiMinus,\r\n} from \"@mdi/js\";\r\nimport React from \"react\";\r\n\r\nimport { CalculatedChartStateType, ChartStateHookType } from \"../Types/CChartStateTypes\";\r\nimport { ChartDataSeries } from \"../Types/CChartTypes\";\r\nimport { Grid, IconButton, TextField, Typography, useTheme } from \"@material-ui/core\";\r\nimport { CTreeItem } from \"../CTreeItem\";\r\nimport { ReducerActionType } from \"../ChartState/CChartStateReducer\";\r\nimport { Colorpicker } from \"../Colorpicker\";\r\nimport { CChartMenuOpenType } from \"./ChartMenu\";\r\n\r\nconst onToolLabelClick = (\r\n  ChartStateDispatch: ChartStateHookType[1],\r\n  type: NonNullable<CalculatedChartStateType[\"draw\"][\"type\"]>\r\n) => {\r\n  const subchartIdx = 0;\r\n  const action: ReducerActionType<\"draw\"> = { task: \"draw\", params: { type, subchartIdx } };\r\n  \r\n    (ChartStateDispatch as React.Dispatch<ReducerActionType<\"draw\">>)(action);\r\n  \r\n};\r\n\r\nexport const CToolTreeItem = (props: {\r\n  subchartIdx: number;\r\n  yaxisIdx: number;\r\n  toolIdx: number;\r\n  ChartState: CalculatedChartStateType;\r\n  ChartStateDispatch: ChartStateHookType[1];\r\n}) => {\r\n  const { subchartIdx, yaxisIdx, toolIdx, ChartState, ChartStateDispatch } = props;\r\n  const toolIn = ChartState.subCharts?.[subchartIdx]?.yaxis?.[yaxisIdx]?.tools?.[toolIdx];\r\n  const tool = !!toolIn ? toolIn : null;\r\n  if (!tool) return null;\r\n\r\n  return (\r\n    <CTreeItem\r\n      key={`tool-${toolIdx}`}\r\n      nodeId={`tool-${subchartIdx}-${toolIdx}`}\r\n      labelText={\r\n        tool.type === \"hline\"\r\n          ? \"horizontal line\"\r\n          : tool.type === \"vline\"\r\n          ? \"vertical line\"\r\n          : tool.type === \"trendline\"\r\n          ? \"Trendline\"\r\n          : \"Tool\"\r\n      }\r\n      labelIcon={\r\n        <Icon\r\n          path={tool.type === \"hline\" || tool.type === \"vline\" || tool.type === \"trendline\" ? mdiMinus : mdiHelp}\r\n          size={1}\r\n          color=\"#333\"\r\n          rotate={tool.type === \"trendline\" ? -45 : tool.type === \"vline\" ? 90 : 0}\r\n        />\r\n      }\r\n    >\r\n      {tool.type === \"hline\" ? (\r\n        <CTreeItem\r\n          key={`tool-${subchartIdx}-y0-${toolIdx}-hlinelevel`}\r\n          nodeId={`tool-${subchartIdx}-y0-${toolIdx}-hlinelevel`}\r\n          labelText={\"Y-Level\"}\r\n          labelIcon={<Icon path={mdiArrowSplitHorizontal} size={1} color=\"#333\" />}\r\n          labelInfo={\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"none\"\r\n              size=\"small\"\r\n              inputProps={{ style: { padding: 5, width: 50 } }}\r\n              defaultValue={tool.xy[0][1]}\r\n              onChange={(e) => {\r\n                const val = parseFloat(e.target.value);\r\n                if (isNaN(val)) return;\r\n                const action: ReducerActionType<\"setHlineYlevel\"> = {\r\n                  task: \"setHlineYlevel\",\r\n                  params: { val, subchartIdx, yaxisIdx: 0, toolIdx },\r\n                };\r\n                (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setHlineYlevel\">>)(action);\r\n              }}\r\n            />\r\n          }\r\n        />\r\n      ) : null}\r\n      <CTreeItem\r\n        key={`tool-${subchartIdx}-${toolIdx}-stroke`}\r\n        nodeId={`tool-${subchartIdx}-${toolIdx}-stroke`}\r\n        labelText={\"stroke color\"}\r\n        labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n        labelInfo={\r\n          <Colorpicker\r\n            color={tool.style.strokeColor}\r\n            onColorSelected={(color) => {\r\n              const action: ReducerActionType<\"setToolStrokeColor\"> = {\r\n                task: \"setToolStrokeColor\",\r\n                params: { color: color, subchartIdx, yaxisIdx: 0, toolIdx },\r\n              };\r\n              (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setToolStrokeColor\">>)(action);\r\n            }}\r\n          />\r\n        }\r\n      />\r\n      <CTreeItem\r\n        key={`tool-${subchartIdx}-${toolIdx}-anchorColor`}\r\n        nodeId={`tool-${subchartIdx}-${toolIdx}-anchorColor`}\r\n        labelText={\"anchor color\"}\r\n        labelIcon={<Icon path={mdiBullseye} size={1} color=\"#333\" />}\r\n        labelInfo={\r\n          <Colorpicker\r\n            color={tool.style.anchorColor}\r\n            onColorSelected={(color) => {\r\n              const action: ReducerActionType<\"setToolAnchorColor\"> = {\r\n                task: \"setToolAnchorColor\",\r\n                params: { color: color, subchartIdx, yaxisIdx: 0, toolIdx },\r\n              };\r\n              (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setToolAnchorColor\">>)(action);\r\n            }}\r\n          />\r\n        }\r\n      />\r\n    </CTreeItem>\r\n  );\r\n};\r\n\r\nexport type ToolCategoryType = \"Lines\" | \"Upcoming\";\r\n\r\nexport const ChartMenuTools = (props: {\r\n  ChartState: CalculatedChartStateType;\r\n  onNavigate: (target: CChartMenuOpenType) => void;\r\n  ChartStateDispatch: ChartStateHookType[1];\r\n  open: CChartMenuOpenType;\r\n}) => {\r\n  const { ChartState, onNavigate, ChartStateDispatch, open } = props;\r\n  const theme = useTheme();\r\n  const [FilterCat, setFilterCat] = React.useState(true);\r\n\r\n  const categorys: { name: ToolCategoryType; icon: string }[] = [\r\n    { name: \"Lines\", icon: mdiRuler },\r\n    { name: \"Upcoming\", icon: mdiRulerSquareCompass },\r\n  ];\r\n  const tools: {\r\n    name: string;\r\n    type: NonNullable<CalculatedChartStateType[\"draw\"][\"type\"]>;\r\n    category: ToolCategoryType;\r\n  }[] = [\r\n    { name: \"trendline\", type: \"trendline\", category: \"Lines\" },\r\n    { name: \"horizontal\", type: \"hline\", category: \"Lines\" },\r\n    { name: \"vertical\", type: \"vline\", category: \"Lines\" },\r\n  ];\r\n\r\n  const amtTools = ChartState.subCharts\r\n    .map((subchart) => subchart.yaxis.map((yaxis) => yaxis.tools.length))\r\n    .flat()\r\n    .reduce((acc, cur) => acc + cur);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 24, //see padding title bar\r\n          zIndex: 2,\r\n\r\n          // padding\r\n        }}\r\n      >\r\n        {amtTools > 0 ? (\r\n          <div style={{ paddingBottom: 5 }}>\r\n            <ToggleButtonGroup value={\"web\"} exclusive style={{ borderRadius: 500 }} size=\"small\">\r\n              <ToggleButton\r\n                style={{\r\n                  borderBottomLeftRadius: 50,\r\n                  textTransform: \"none\",\r\n                  borderTopLeftRadius: 50,\r\n                  background: open === \"tools\" ? theme.palette.secondary.light : \"#fff\",\r\n                }}\r\n                onClick={() => {\r\n                  onNavigate?.(\"tools\");\r\n                }}\r\n              >\r\n                <Typography> Add</Typography>\r\n              </ToggleButton>\r\n              <ToggleButton\r\n                value=\"android\"\r\n                style={{\r\n                  borderBottomRightRadius: 50,\r\n                  borderTopRightRadius: 50,\r\n                  background: open === \"editTool\" ? theme.palette.secondary.light : \"#fff\",\r\n                }}\r\n                onClick={() => {\r\n                  onNavigate?.(\"editTool\");\r\n                }}\r\n              >\r\n                Edit\r\n              </ToggleButton>\r\n            </ToggleButtonGroup>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div\r\n          style={{ background: theme.palette.secondary.light, border: \"1px solid #666\", borderRadius: 50, padding: 5 }}\r\n        >\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{ border: \"1px solid #fff\", margin: \"0px 5px\" }}\r\n            onClick={() => alert(\"upcoming\")}\r\n          >\r\n            <Icon path={mdiMagnify} size={1} color={theme.palette.primary.contrastText} />\r\n          </IconButton>\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{ border: \"1px solid #fff\", margin: \"0px 5px 0px 0px\" }}\r\n            onClick={() => setFilterCat((current) => !current)}\r\n          >\r\n            <Icon\r\n              path={FilterCat ? mdiSortAlphabeticalAscending : mdiFilter}\r\n              size={1}\r\n              color={theme.palette.primary.contrastText}\r\n            />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <TreeView\r\n        //   className={classes.root}\r\n        //   defaultExpanded={[\"3\"]}\r\n        defaultCollapseIcon={<Icon path={mdiMenuDown} size={1} color=\"#333\" />}\r\n        defaultExpandIcon={<Icon path={mdiMenuRight} size={1} color=\"#333\" />}\r\n        defaultEndIcon={<div style={{ width: 24 }} />}\r\n        //   selected=\"1\"\r\n        //   onNodeSelect={() => {}}\r\n        disableSelection\r\n        // style={{height: 100, overflowY: \"scroll\"}}\r\n      >\r\n        {open === \"editTool\"\r\n          ? ChartState.subCharts.map((subchart, subchartIdx) =>\r\n              subchart.yaxis.map((yaxis, yaxisIdx) =>\r\n                yaxis.tools.map((tool, toolIdx) => (\r\n                  <CToolTreeItem\r\n                    key={`editIndicator-sub-${subchartIdx}-yaxis-${yaxisIdx}-graph-${toolIdx}`}\r\n                    ChartState={ChartState}\r\n                    ChartStateDispatch={ChartStateDispatch}\r\n                    subchartIdx={subchartIdx}\r\n                    yaxisIdx={yaxisIdx}\r\n                    toolIdx={toolIdx}\r\n                  />\r\n                ))\r\n              )\r\n            )\r\n          : !!FilterCat\r\n          ? categorys.map((cat, catIdx) => (\r\n              <CTreeItem\r\n                key={`cat-${catIdx}`}\r\n                nodeId={catIdx.toString()}\r\n                labelText={cat.name}\r\n                labelIcon={\r\n                  <div\r\n                    style={{\r\n                      border: \"1px solid #666\",\r\n                      borderRadius: 5,\r\n                      marginRight: 10,\r\n                      background: theme.palette.secondary.main,\r\n                      minWidth: 48,\r\n                      height: 48,\r\n                    }}\r\n                  >\r\n                    <Icon path={cat.icon} size={2} color={theme.palette.secondary.contrastText} />\r\n                  </div>\r\n                }\r\n                bgColor={theme.palette.primary.light}\r\n              >\r\n                {tools\r\n                  .filter((tool) => tool.category === cat.name)\r\n                  .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n                  .map((tool, toolIdx) => (\r\n                    <CTreeItem\r\n                      key={`cat-${catIdx}-tool-${toolIdx}`}\r\n                      nodeId={((catIdx + 1) * 100 + (toolIdx + 1)).toString()}\r\n                      labelText={tool.name}\r\n                      //   labelIcon={<Icon path={mdiFileChartOutline} size={1} color=\"#333\" />}\r\n                      bgColor={theme.palette.primary.light}\r\n                      onLabelClick={() => {\r\n                        onToolLabelClick(ChartStateDispatch, tool.type);\r\n                        onNavigate?.(null);\r\n                      }}\r\n                    />\r\n                  ))}\r\n              </CTreeItem>\r\n            ))\r\n          : tools\r\n              .sort((a, b) => (a.name > b.name ? 1 : -1))\r\n              .map((tool, toolIdx) => (\r\n                <CTreeItem\r\n                  key={`cat-tool-${toolIdx}`}\r\n                  nodeId={(toolIdx + 1).toString()}\r\n                  labelText={tool.name}\r\n                  //   labelIcon={<Icon path={mdiFileChartOutline} size={1} color=\"#333\" />}\r\n                  bgColor={theme.palette.primary.light}\r\n                  onLabelClick={() => {\r\n                    onToolLabelClick(ChartStateDispatch, tool.type);\r\n                    onNavigate?.(null);\r\n                  }}\r\n                />\r\n              ))}\r\n      </TreeView>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import { Icon } from \"@mdi/react\";\r\nimport { ToggleButton, ToggleButtonGroup, TreeView } from \"@material-ui/lab\";\r\nimport {\r\n  mdiMenuDown,\r\n  mdiMenuRight,\r\n  mdiDiameterVariant,\r\n  mdiChartBellCurve,\r\n  mdiArrowExpandVertical,\r\n  mdiPoll,\r\n  mdiHome,\r\n  mdiFilter,\r\n  mdiMagnify,\r\n  mdiAlphabetical,\r\n  mdiSortAlphabeticalAscending,\r\n  mdiRuler,\r\n  mdiRulerSquareCompass,\r\n  mdiFileChartOutline,\r\n  mdiWater,\r\n  mdiArrowSplitHorizontal,\r\n  mdiBorderColor,\r\n  mdiBullseye,\r\n  mdiChartAreaspline,\r\n  mdiChartLine,\r\n  mdiClose,\r\n  mdiFormatText,\r\n  mdiGrid,\r\n  mdiHelp,\r\n  mdiIframeVariableOutline,\r\n  mdiMinus,\r\n  mdiPencilRuler,\r\n} from \"@mdi/js\";\r\nimport React from \"react\";\r\n\r\nimport {\r\n  CalculatedChartStateType,\r\n  ChartStateHookType,\r\n  isChartGraph,\r\n  isIndicatorGraph,\r\n} from \"../Types/CChartStateTypes\";\r\nimport { ChartDataSeries } from \"../Types/CChartTypes\";\r\nimport { Button, Checkbox, Grid, IconButton, Menu, MenuItem, TextField, Typography, useTheme } from \"@material-ui/core\";\r\nimport { CTreeItem } from \"../CTreeItem\";\r\nimport { ReducerActionType } from \"../ChartState/CChartStateReducer\";\r\nimport { Colorpicker } from \"../Colorpicker\";\r\nimport { CChartMenuOpenType } from \"./ChartMenu\";\r\nimport { CIndicatorGraphTreeItem } from \"./ChartMenuIndicators\";\r\nimport { CToolTreeItem } from \"./ChartMenuTools\";\r\n\r\nconst onToolLabelClick = (\r\n  ChartStateDispatch: ChartStateHookType[1],\r\n  type: NonNullable<CalculatedChartStateType[\"draw\"][\"type\"]>\r\n) => {\r\n  const subchartIdx = 0;\r\n  const action: ReducerActionType<\"draw\"> = { task: \"draw\", params: { type, subchartIdx } };\r\n  return () => {\r\n    (ChartStateDispatch as React.Dispatch<ReducerActionType<\"draw\">>)(action);\r\n  };\r\n};\r\n\r\nexport type ToolCategoryType = \"Lines\" | \"Upcoming\";\r\n\r\nexport const ChartMenuSettings = (props: {\r\n  ChartState: CalculatedChartStateType;\r\n  onNavigate: (target: CChartMenuOpenType) => void;\r\n  ChartStateDispatch: ChartStateHookType[1];\r\n}) => {\r\n  const { ChartState, onNavigate, ChartStateDispatch } = props;\r\n  const theme = useTheme();\r\n  const [FilterCat, setFilterCat] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (target?: CChartMenuOpenType) => {\r\n    setAnchorEl(null);\r\n    if (!!target) onNavigate?.(target);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          right: 24, //see padding title bar\r\n          zIndex: 2,\r\n\r\n          // padding\r\n        }}\r\n      >\r\n        {/* <div\r\n          style={{\r\n            background: theme.palette.secondary.light,\r\n            border: \"1px solid #666\",\r\n            borderRadius: 50,\r\n            padding: 5,\r\n          }}\r\n        >\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{ border: \"1px solid #fff\", margin: \"0px 5px\" }}\r\n            // onClick={() => onNavigate(\"menu\")}\r\n          >\r\n            <Icon path={mdiMagnify} size={1} color={theme.palette.primary.contrastText} />\r\n          </IconButton>\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{ border: \"1px solid #fff\", margin: \"0px 5px 0px 0px\" }}\r\n            onClick={() => setFilterCat((current) => !current)}\r\n          >\r\n            <Icon\r\n              path={FilterCat ? mdiSortAlphabeticalAscending : mdiFilter}\r\n              size={1}\r\n              color={theme.palette.primary.contrastText}\r\n            />\r\n          </IconButton>\r\n        </div> */}\r\n        <div style={{ paddingBottom: 5 }}>\r\n          <Button\r\n            // value=\"web\"\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 50,\r\n              padding: 5,\r\n              // marginTop: 5,\r\n              textTransform: \"none\",\r\n              background: theme.palette.secondary.light,\r\n              width: \"100%\",\r\n              color: theme.palette.secondary.contrastText,\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            <Typography> Add...</Typography>\r\n          </Button>\r\n          <Menu\r\n            id=\"quick-add\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={() => handleClose(undefined)}\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <MenuItem onClick={() => handleClose(\"indicators\")}>Indicator</MenuItem>\r\n            <MenuItem onClick={() => handleClose(\"tools\")}>Tool</MenuItem>\r\n            {/* <MenuItem onClick={handleClose}></MenuItem> */}\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n\r\n      <TreeView\r\n        //   className={classes.root}\r\n        //   defaultExpanded={[\"3\"]}\r\n        defaultCollapseIcon={<Icon path={mdiMenuDown} size={1} color=\"#333\" />}\r\n        defaultExpandIcon={<Icon path={mdiMenuRight} size={1} color=\"#333\" />}\r\n        defaultEndIcon={<div style={{ width: 24 }} />}\r\n        //   selected=\"1\"\r\n        //   onNodeSelect={() => {}}\r\n        disableSelection\r\n        // style={{height: 100, overflowY: \"scroll\"}}\r\n      >\r\n        <CTreeItem\r\n          nodeId=\"1\"\r\n          labelText=\"General\"\r\n          labelIcon={\r\n            <div\r\n              style={{\r\n                background: theme.palette.secondary.main,\r\n                width: 48,\r\n                height: 48,\r\n                border: \"1px solid #666\",\r\n                borderRadius: 5,\r\n                marginRight: 10,\r\n              }}\r\n            >\r\n              <Icon path={mdiFileChartOutline} size={2} color={theme.palette.secondary.contrastText} />\r\n            </div>\r\n          }\r\n          bgColor={theme.palette.primary.light}\r\n          labelTypographyVariant=\"h6\"\r\n        >\r\n          <CTreeItem\r\n            nodeId=\"11\"\r\n            labelText=\"background color\"\r\n            labelIcon={<Icon path={mdiWater} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Colorpicker\r\n                color={ChartState.backgroundColor}\r\n                onColorSelected={(color) => {\r\n                  // const action: ReducerActionType<\"setBackgroundColor\"> = {\r\n                  //   task: \"setBackgroundColor\",\r\n                  //   params: { color: color },\r\n                  // };\r\n                  ChartStateDispatch({\r\n                    task: \"setBackgroundColor\",\r\n                    params: { color },\r\n                  } as ReducerActionType<\"setBackgroundColor\">);\r\n                }}\r\n              />\r\n            }\r\n            //   color=\"#fff\"\r\n            bgColor=\"#eee\"\r\n          />\r\n          <CTreeItem\r\n            nodeId=\"12\"\r\n            labelText=\"axis fill color\"\r\n            labelIcon={<Icon path={mdiWater} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Colorpicker\r\n                color={ChartState.xaxis.style.fillColor}\r\n                onColorSelected={(color) => {\r\n                  const action: ReducerActionType<\"setAxisFillColor\"> = {\r\n                    task: \"setAxisFillColor\",\r\n                    params: { color: color },\r\n                  };\r\n                  (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setAxisFillColor\">>)(action);\r\n                }}\r\n              />\r\n            }\r\n            //   color=\"#e3742f\"\r\n            bgColor=\"#eee\"\r\n          />\r\n          <CTreeItem\r\n            nodeId=\"13\"\r\n            labelText=\"axis stroke color\"\r\n            labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Colorpicker\r\n                color={ChartState.xaxis.style.strokeColor}\r\n                onColorSelected={(color) => {\r\n                  const action: ReducerActionType<\"setAxisStrokeColor\"> = {\r\n                    task: \"setAxisStrokeColor\",\r\n                    params: { color: color },\r\n                  };\r\n                  (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setAxisStrokeColor\">>)(action);\r\n                }}\r\n              />\r\n            }\r\n            //   color=\"#a250f5\"\r\n            bgColor=\"#eee\"\r\n          />\r\n          <CTreeItem\r\n            nodeId=\"14\"\r\n            labelText=\"axis text color\"\r\n            labelIcon={<Icon path={mdiFormatText} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Colorpicker\r\n                color={ChartState.xaxis.style.fontColor}\r\n                onColorSelected={(color) => {\r\n                  const action: ReducerActionType<\"setAxisTextColor\"> = {\r\n                    task: \"setAxisTextColor\",\r\n                    params: { color: color },\r\n                  };\r\n                  (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setAxisTextColor\">>)(action);\r\n                }}\r\n              />\r\n            }\r\n            color=\"#3c8039\"\r\n            bgColor=\"#eee\"\r\n          />\r\n          <CTreeItem\r\n            nodeId=\"15\"\r\n            labelText=\"use x-axis grid\"\r\n            labelIcon={<Icon path={mdiGrid} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Checkbox\r\n                checked={ChartState.grid.useGridX}\r\n                size=\"small\"\r\n                style={{ padding: 0, width: 24, height: 24 }}\r\n                onChange={() => {\r\n                  const action: ReducerActionType<\"toggleXaxisGrid\"> = {\r\n                    task: \"toggleXaxisGrid\",\r\n                    params: {},\r\n                  };\r\n                  (ChartStateDispatch as React.Dispatch<ReducerActionType<\"toggleXaxisGrid\">>)(action);\r\n                }}\r\n              />\r\n            }\r\n            color=\"#3c8039\"\r\n            bgColor=\"#eee\"\r\n          />\r\n          <CTreeItem\r\n            nodeId=\"16\"\r\n            labelText=\"use y-axis grid\"\r\n            labelIcon={<Icon path={mdiGrid} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Checkbox\r\n                checked={ChartState.grid.useGridY}\r\n                size=\"small\"\r\n                style={{ padding: 0, width: 24, height: 24 }}\r\n                onChange={() => {\r\n                  const action: ReducerActionType<\"toggleYaxisGrid\"> = {\r\n                    task: \"toggleYaxisGrid\",\r\n                    params: {},\r\n                  };\r\n                  (ChartStateDispatch as React.Dispatch<ReducerActionType<\"toggleYaxisGrid\">>)(action);\r\n                }}\r\n              />\r\n            }\r\n            color=\"#3c8039\"\r\n            bgColor=\"#eee\"\r\n          />\r\n          <CTreeItem\r\n            nodeId=\"17\"\r\n            labelText=\"grid stroke color\"\r\n            labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n            labelInfo={\r\n              <Colorpicker\r\n                color={ChartState.grid.style.strokeColor}\r\n                onColorSelected={(color) => {\r\n                  const action: ReducerActionType<\"setGridStrokeColor\"> = {\r\n                    task: \"setGridStrokeColor\",\r\n                    params: { color: color },\r\n                  };\r\n                  (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setGridStrokeColor\">>)(action);\r\n                }}\r\n              />\r\n            }\r\n            color=\"#3c8039\"\r\n            bgColor=\"#eee\"\r\n          />\r\n        </CTreeItem>\r\n\r\n        {ChartState.subCharts.map((subchart, subchartIdx) => (\r\n          <CTreeItem\r\n            labelTypographyVariant=\"h6\"\r\n            key={`sub-${subchartIdx}`}\r\n            nodeId={`sub-${2 + subchartIdx}`}\r\n            labelText={subchartIdx === 0 ? \"Mainchart\" : `Subchart ${subchartIdx}`}\r\n            bgColor={theme.palette.primary.light}\r\n            labelIcon={\r\n              <div\r\n                style={{\r\n                  background: theme.palette.secondary.main,\r\n                  width: 48,\r\n                  height: 48,\r\n                  border: \"1px solid #666\",\r\n                  borderRadius: 5,\r\n                  marginRight: 10,\r\n                }}\r\n              >\r\n                <Icon path={mdiChartAreaspline} size={2} color={theme.palette.secondary.contrastText} />\r\n              </div>\r\n            }\r\n            labelInfo={\r\n              subchartIdx !== 0 ? (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    const action: ReducerActionType<\"removeSubchart\"> = {\r\n                      task: \"removeSubchart\",\r\n                      params: { subchartIdx },\r\n                    };\r\n                    (ChartStateDispatch as React.Dispatch<ReducerActionType<\"removeSubchart\">>)(action);\r\n                  }}\r\n                >\r\n                  <Icon path={mdiClose} size={1} color=\"#333\" />\r\n                </IconButton>\r\n              ) : undefined\r\n            }\r\n          >\r\n            {subchart.yaxis[0].graphs.map((graph, graphIdx) =>\r\n              isIndicatorGraph(graph) ? (\r\n                <CIndicatorGraphTreeItem\r\n                  key={`editIndicator-sub-${subchartIdx}-yaxis-${0}-graph-${graphIdx}`}\r\n                  ChartState={ChartState}\r\n                  ChartStateDispatch={ChartStateDispatch}\r\n                  subchartIdx={subchartIdx}\r\n                  yaxisIdx={0}\r\n                  graphIdx={graphIdx}\r\n                />\r\n              ) : isChartGraph(graph) ? (\r\n                <React.Fragment>\r\n                  <CTreeItem\r\n                    key={`graph-sub-${subchartIdx}-yaxis-${0}-graph-${graphIdx}`}\r\n                    nodeId={`graph-sub-${subchartIdx}-yaxis-${0}-graph-${graphIdx}`}\r\n                    labelText={graph.name}\r\n                    bgColor=\"#eee\"\r\n                    labelIcon={\r\n                      <div\r\n                        style={{\r\n                          background: theme.palette.primary.main,\r\n                          width: 32,\r\n                          height: 32,\r\n                          border: \"1px solid #666\",\r\n                          borderRadius: 5,\r\n                          marginRight: 10,\r\n                        }}\r\n                      >\r\n                        <Icon path={mdiChartLine} size={\"32px\"} color={theme.palette.secondary.contrastText} />\r\n                      </div>\r\n                    }\r\n                    labelInfo={\r\n                      subchartIdx !== 0 || graphIdx !== 0 ? (\r\n                        <IconButton\r\n                          size=\"small\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            const action: ReducerActionType<\"removeGraph\"> = {\r\n                              task: \"removeGraph\",\r\n                              params: { subchartIdx, yaxisIdx: 0, graphIdx },\r\n                            };\r\n                            (ChartStateDispatch as React.Dispatch<ReducerActionType<\"removeGraph\">>)(action);\r\n                          }}\r\n                        >\r\n                          <Icon path={mdiClose} size={1} color=\"#333\" />\r\n                        </IconButton>\r\n                      ) : undefined\r\n                    }\r\n                  >\r\n                    {graph.meta.type === \"linechart\" ? (\r\n                      <CTreeItem\r\n                        nodeId={`${2 + subchartIdx}00-${graphIdx}`}\r\n                        labelText=\"line stroke color\"\r\n                        labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n                        labelInfo={\r\n                          <Colorpicker\r\n                            color={ChartState.subCharts[subchartIdx].yaxis[0].graphs[graphIdx].style?.strokeColor?.[0]}\r\n                            onColorSelected={(color) => {\r\n                              const action: ReducerActionType<\"setLineChartStrokeColor\"> = {\r\n                                task: \"setLineChartStrokeColor\",\r\n                                params: { color: color, subchartIdx, yaxisIdx: 0, graphIdx },\r\n                              };\r\n                              (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setLineChartStrokeColor\">>)(\r\n                                action\r\n                              );\r\n                            }}\r\n                          />\r\n                        }\r\n                      />\r\n                    ) : graph.meta.type === \"candlechart\" ? (\r\n                      <React.Fragment>\r\n                        <CTreeItem\r\n                          nodeId={`${2 + subchartIdx}00-${graphIdx}`}\r\n                          labelText=\"candle up color\"\r\n                          labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n                          labelInfo={\r\n                            <Colorpicker\r\n                              color={graph.style.candleUpColor}\r\n                              onColorSelected={(color) => {\r\n                                const action: ReducerActionType<\"setCandleChartUpColor\"> = {\r\n                                  task: \"setCandleChartUpColor\",\r\n                                  params: { color: color, subchartIdx, yaxisIdx: 0, graphIdx },\r\n                                };\r\n                                (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setCandleChartUpColor\">>)(\r\n                                  action\r\n                                );\r\n                              }}\r\n                            />\r\n                          }\r\n                        />\r\n                        <CTreeItem\r\n                          nodeId={`${2 + subchartIdx}00-${graphIdx}`}\r\n                          labelText=\"candle down color\"\r\n                          labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n                          labelInfo={\r\n                            <Colorpicker\r\n                              color={graph.style.candleDownColor}\r\n                              onColorSelected={(color) => {\r\n                                const action: ReducerActionType<\"setCandleChartDownColor\"> = {\r\n                                  task: \"setCandleChartDownColor\",\r\n                                  params: { color: color, subchartIdx, yaxisIdx: 0, graphIdx },\r\n                                };\r\n                                (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setCandleChartDownColor\">>)(\r\n                                  action\r\n                                );\r\n                              }}\r\n                            />\r\n                          }\r\n                        />\r\n                        <CTreeItem\r\n                          nodeId={`${2 + subchartIdx}00-${graphIdx}`}\r\n                          labelText=\"candle stroke color\"\r\n                          labelIcon={<Icon path={mdiBorderColor} size={1} color=\"#333\" />}\r\n                          labelInfo={\r\n                            <Colorpicker\r\n                              color={graph.style.candleStrokeColor}\r\n                              onColorSelected={(color) => {\r\n                                const action: ReducerActionType<\"setCandleChartStrokeColor\"> = {\r\n                                  task: \"setCandleChartStrokeColor\",\r\n                                  params: { color: color, subchartIdx, yaxisIdx: 0, graphIdx },\r\n                                };\r\n                                (ChartStateDispatch as React.Dispatch<ReducerActionType<\"setCandleChartStrokeColor\">>)(\r\n                                  action\r\n                                );\r\n                              }}\r\n                            />\r\n                          }\r\n                        />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                  </CTreeItem>\r\n                </React.Fragment>\r\n              ) : null\r\n            )}\r\n\r\n            {subchart.yaxis[0].tools.length > 0 ? (\r\n              <CTreeItem\r\n                key={`tools-${subchartIdx}-y0`}\r\n                nodeId={`tools-${subchartIdx}-y0`}\r\n                labelIcon={\r\n                  <div\r\n                    style={{\r\n                      background: theme.palette.primary.main,\r\n                      width: 32,\r\n                      height: 32,\r\n                      border: \"1px solid #666\",\r\n                      borderRadius: 5,\r\n                      marginRight: 10,\r\n                    }}\r\n                  >\r\n                    <Icon path={mdiPencilRuler} size={\"32px\"} color={theme.palette.secondary.contrastText} />\r\n                  </div>\r\n                }\r\n                labelText=\"Tools\"\r\n                bgColor=\"#eee\"\r\n              >\r\n                {subchart.yaxis[0].tools.map((tool, toolIdx) => (\r\n                  <CToolTreeItem\r\n                    key={`editIndicator-sub-${subchartIdx}-yaxis-${0}-tool-${toolIdx}`}\r\n                    ChartState={ChartState}\r\n                    ChartStateDispatch={ChartStateDispatch}\r\n                    subchartIdx={subchartIdx}\r\n                    yaxisIdx={0}\r\n                    toolIdx={toolIdx}\r\n                  />\r\n                ))}\r\n              </CTreeItem>\r\n            ) : null}\r\n          </CTreeItem>\r\n        ))}\r\n      </TreeView>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Grid,\r\n  ListItem,\r\n  List,\r\n  Paper,\r\n  Typography,\r\n  useMediaQuery,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { mdiChartLine, mdiChartBellCurve, mdiPencilRuler, mdiTune, mdiStarShooting, mdiBroom } from \"@mdi/js\";\r\nimport Icon, { Stack } from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport { CalculatedChartStateType } from \"../Types/CChartStateTypes\";\r\nimport { CChartMenuOpenType } from \"./ChartMenu\";\r\n\r\nexport const ChartMenuQuickys = (props: {\r\n  ChartState: CalculatedChartStateType;\r\n  onNavigate: (target: CChartMenuOpenType) => void;\r\n}) => {\r\n  const { ChartState, onNavigate } = props;\r\n\r\n  const isMinSm = useMediaQuery(\"(min-width:600px)\");\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Grid container>\r\n        <Grid item> */}\r\n      <List>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            // onNavigate?.(\"indicators\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n              position: \"relative\",\r\n              top: 0,\r\n            }}\r\n          >\r\n            <Icon\r\n              path={mdiBroom}\r\n              size={2}\r\n              color={theme.palette.secondary.contrastText}\r\n              style={{ position: \"absolute\", top: 0, left: 0 }}\r\n              rotate={5}\r\n            />\r\n            <Icon\r\n              path={mdiChartBellCurve}\r\n              size={0.8}\r\n              color={\"#fff\"}\r\n              style={{ position: \"absolute\", bottom: 0, right: 0 }}\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Clear All Indicators\"\r\n            primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }}\r\n          />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            // onNavigate?.(\"tools\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              minWidth: 48,\r\n              height: 48,\r\n              position: \"relative\",\r\n              top: 0,\r\n            }}\r\n          >\r\n            <Icon\r\n              path={mdiBroom}\r\n              size={2}\r\n              color={theme.palette.secondary.contrastText}\r\n              style={{ position: \"absolute\", top: 0, left: 0 }}\r\n              rotate={5}\r\n            />\r\n            <Icon\r\n              path={mdiPencilRuler}\r\n              size={0.7}\r\n              color={\"#fff\"}\r\n              style={{ position: \"absolute\", bottom: 1, right: 1 }}\r\n            />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Clear All Tools\" primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }} />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          onClick={() => {\r\n            // onNavigate?.(\"settings\");\r\n          }}\r\n        >\r\n          <ListItemIcon\r\n            style={{\r\n              border: \"1px solid #666\",\r\n              borderRadius: 5,\r\n              marginRight: 10,\r\n              background: theme.palette.secondary.main,\r\n              width: 48,\r\n              height: 48,\r\n            }}\r\n          >\r\n            <Icon path={mdiTune} size={2} color={theme.palette.secondary.contrastText} />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary=\"Autoscale Y axis (mode to disable upcoming)\"\r\n            primaryTypographyProps={{ variant: \"h6\", color: \"textSecondary\" }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n      {/* </Grid>\r\n      </Grid> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  createStyles,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  TextField,\r\n  Theme,\r\n  Typography,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { mdiClose, mdiFullscreen, mdiHome, mdiMagnify, mdiPencilRuler, mdiTune } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport { CalculatedChartStateType, ChartStateHookType } from \"../Types/CChartStateTypes\";\r\n\r\nimport { ChartMenuHome } from \"./ChartMenuHome\";\r\nimport { ChartMenuIndicators } from \"./ChartMenuIndicators\";\r\nimport { ChartMenuTools } from \"./ChartMenuTools\";\r\nimport { ChartMenuSettings } from \"./ChartMenuSettings\";\r\nimport { ChartMenuQuickys } from \"./ChartMenuQuickys\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    paper: {\r\n      minHeight: \"33%\",\r\n      border: \"1px solid #666\",\r\n      borderTopLeftRadius: 10,\r\n      borderTopRightRadius: 10,\r\n    },\r\n    paperDesktop: {\r\n      minHeight: \"33%\",\r\n      border: \"1px solid #666\",\r\n      borderBottomRightRadius: 10,\r\n      borderTopRightRadius: 10,\r\n    },\r\n  })\r\n);\r\n\r\nexport type CChartMenuOpenType =\r\n  | \"menu\"\r\n  | \"chart\"\r\n  | \"indicators\"\r\n  | \"tools\"\r\n  | \"settings\"\r\n  | \"quickys\"\r\n  | \"editIndicator\"\r\n  | \"editTool\"\r\n  | null;\r\n\r\nexport const CChartMenu2 = (props: {\r\n  open: CChartMenuOpenType;\r\n  onClose: () => void;\r\n  ChartState: CalculatedChartStateType;\r\n  onNavigate: (target: CChartMenuOpenType) => void;\r\n  ChartStateDispatch: ChartStateHookType[1];\r\n}) => {\r\n  const { onClose, open, ChartState, onNavigate, ChartStateDispatch } = props;\r\n  const theme = useTheme();\r\n  const isMinSm = useMediaQuery(\"(min-width:600px)\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Drawer\r\n      anchor={!!isMinSm ? \"left\" : \"bottom\"}\r\n      open={!!open}\r\n      classes={{ paper: !!isMinSm ? classes.paperDesktop : classes.paper }}\r\n      ModalProps={{ hideBackdrop: true }}\r\n    >\r\n      <div style={{ background: theme.palette.primary.main, color: theme.palette.primary.contrastText, padding: 10 }}>\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n          <Grid item>\r\n            <Typography component=\"div\" variant=\"h4\">\r\n              {open === \"quickys\"\r\n                ? \"Quick Tasks\"\r\n                : open === \"editIndicator\"\r\n                ? \"Edit Indicator\"\r\n                : open === \"indicators\"\r\n                ? \"Add Indicator\"\r\n                : open === \"editTool\"\r\n                ? \"Edit Tool\"\r\n                : open === \"tools\"\r\n                ? \"Add Tool\"\r\n                : open === \"settings\"\r\n                ? \"Settings\"\r\n                : \"Chart Menu\"}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs></Grid>\r\n          <Grid item>\r\n            <div style={{ height: \"2.6rem\" }}>\r\n              {!!open && open !== \"menu\" ? (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    onNavigate(\"menu\");\r\n                  }}\r\n                >\r\n                  <Icon path={mdiHome} size={1.75} color={theme.palette.primary.contrastText}></Icon>\r\n                </IconButton>\r\n              ) : null}\r\n\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  //   onClose?.();\r\n                }}\r\n              >\r\n                <Icon path={mdiFullscreen} size={1.75} color={theme.palette.primary.contrastText}></Icon>\r\n              </IconButton>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  onClose?.();\r\n                }}\r\n              >\r\n                <Icon path={mdiClose} size={1.75} color={theme.palette.primary.contrastText}></Icon>\r\n              </IconButton>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div style={{ padding: 10 }}>\r\n        {open === \"menu\" ? (\r\n          <ChartMenuHome ChartState={ChartState} onNavigate={onNavigate} />\r\n        ) : open === \"indicators\" || open === \"editIndicator\" ? (\r\n          <ChartMenuIndicators\r\n            ChartState={ChartState}\r\n            onNavigate={onNavigate}\r\n            open={open}\r\n            ChartStateDispatch={ChartStateDispatch}\r\n          />\r\n        ) : open === \"tools\" || open === \"editTool\" ? (\r\n          <ChartMenuTools\r\n            ChartState={ChartState}\r\n            ChartStateDispatch={ChartStateDispatch}\r\n            onNavigate={onNavigate}\r\n            open={open}\r\n          />\r\n        ) : open === \"settings\" ? (\r\n          <ChartMenuSettings ChartState={ChartState} ChartStateDispatch={ChartStateDispatch} onNavigate={onNavigate} />\r\n        ) : open === \"quickys\" ? (\r\n          <ChartMenuQuickys ChartState={ChartState} onNavigate={onNavigate} />\r\n        ) : null}\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n","import React, { RefObject } from \"react\";\r\nimport { Stage, Layer, Rect, Line, Shape } from \"react-konva\";\r\nimport { CChartProps, Dataset } from \"./Types/CChartTypes\";\r\nimport { isIndicatorGraph } from \"./Types/CChartStateTypes\";\r\nimport Ajv from \"ajv\";\r\nimport { chartDataSchema } from \"./CChartDataSchema\";\r\nimport { CChartLabel } from \"./CChartLabel\";\r\nimport { CChartCrosshair } from \"./CChartCrosshair\";\r\n\r\nimport { CCandleChart } from \"./Charts/CCandleChart\";\r\nimport { CLineChart } from \"./Charts/CLineChart\";\r\nimport { CBarChart } from \"./Charts/CBarChart\";\r\nimport { ReducerActionType } from \"./ChartState/CChartStateReducer\";\r\nimport { useChartState } from \"./ChartState/CChartState\";\r\nimport { CTrendline } from \"./Tools/CTrendline\";\r\nimport { CVline } from \"./Tools/CVLine\";\r\nimport { CHline } from \"./Tools/CHLine\";\r\nimport { Button, ThemeProvider, Typography, useTheme } from \"@material-ui/core\";\r\n\r\nimport { muiTheme } from \"./MuiTheme\";\r\nimport { CChartMenu2, CChartMenuOpenType } from \"./Menu2/ChartMenu\";\r\n// import { Layer as LayerType } from \"konva\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiMenu } from \"@mdi/js\";\r\nconst ajv = new Ajv();\r\n\r\nexport const CChart = (props: CChartProps) => {\r\n  // get props + -> deviceRatio (does konva need that anymore?!)\r\n  const { width, height, chartData, style, viewMode } = props;\r\n  // responsive container and pointer events\r\n  let widthPerTick = 20;\r\n  const ContainerRef: RefObject<HTMLDivElement> = React.useRef(null);\r\n  const [ChartMenuActive, setChartMenuActive] = React.useState<\r\n    \"menu\" | \"charts\" | \"indicators\" | \"settings\" | \"tools\" | null\r\n  >(null);\r\n  const [ChartMenu2Open, setChartMenu2Open] = React.useState<CChartMenuOpenType>(null);\r\n  const [ChartState, ChartStateDispatch] = useChartState(ContainerRef, { width, height, viewMode });\r\n  widthPerTick = ChartState.xaxis.scaledWidthPerTick;\r\n  const { widthYAxis, widthTickmarkLines } = ChartState.yaxis;\r\n  const { heightXAxis, heightTickMarkLines } = ChartState.xaxis;\r\n  const containerWidth = ChartState.containerSize.width - 1;\r\n  const containerHeight = ChartState.containerSize.height - 1;\r\n  const isContainerInit = ChartState.containerSize.init;\r\n  // const theme = useTheme();\r\n\r\n  // const CanvasLayerCharts: React.RefObject<LayerType> = React.useRef(null);\r\n\r\n  // check chartData schema every time chartData is modified\r\n  React.useEffect(() => {\r\n    if (!isContainerInit) return;\r\n    const validate = ajv.compile(chartDataSchema);\r\n    const valid = validate(chartData);\r\n    if (!valid) {\r\n      alert(\"ERROR - chartData prop is not valid, check console\");\r\n      console.log(\"ERROR - chartData prop is not valid -> \", \"data:\", chartData, \"errors:\", validate.errors);\r\n    } else if (ChartState.subCharts.length === 0) {\r\n      const action: ReducerActionType<\"addSubchart\"> = {\r\n        task: \"addSubchart\",\r\n        params: { chartSeries: chartData[0].data, chartName: chartData[0].name, containerHeight },\r\n      };\r\n      (ChartStateDispatch as React.Dispatch<ReducerActionType<\"addSubchart\">>)(action);\r\n      // addSubchart(chartData[0].data, chartData[0].name, { indicatorFn: ATR, params: [14] });\r\n      // addSubchart(chartData[0].data, chartData[0].name, { indicatorFn: RSI, params: [14] });\r\n      // addGraph(chartData[0].data, chartData[0].name, 0, { indicatorFn: SMA, params: [10] });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [chartData, ChartState.subCharts.length, containerHeight, isContainerInit, heightXAxis]);\r\n  const fullState = ChartState;\r\n\r\n  console.log(fullState);\r\n  const xAxis = fullState.xaxis.xAxisTicks;\r\n  return (\r\n    // <div style={{ width: \"100%\", height: \"100%\", position: \"fixed\", top: 0 }}>\r\n    <React.Fragment>\r\n      <ThemeProvider theme={muiTheme}>\r\n        <div //responsive container (above is not necessary)\r\n          ref={ContainerRef}\r\n          style={{\r\n            boxSizing: \"border-box\",\r\n            // width: !!width ? width : \"100%\",\r\n            // height: !!height ? height : \"100%\",\r\n            // width: \"100%\",\r\n            // height: \"100%\",\r\n            // position: \"fixed\",\r\n            border: \"1px solid red\",\r\n            background: fullState.backgroundColor,\r\n            // ...addContainerStyles,\r\n          }}\r\n        >\r\n          <Stage //konva container\r\n            width={ChartState.containerSize.width}\r\n            height={ChartState.containerSize.height}\r\n            listening={false}\r\n\r\n            // style={{ boxSizing: \"border-box\" }}\r\n          >\r\n            {/*  Canvas Layer 3 - chart and example */}\r\n            <Layer>\r\n              {/* <Rect\r\n              x={20 + ChartState.pointer.totalTranslatedX}\r\n              y={50 + ChartState.pointer.totalTranslatedY}\r\n              width={100}\r\n              height={100}\r\n              fill=\"red\"\r\n              shadowBlur={10}\r\n            /> */}\r\n              {0 in fullState.subCharts ? <CCandleChart fullState={fullState} /> : null}\r\n              {fullState.subCharts.map((subchart, subchartIdx) =>\r\n                subchart.yaxis.map((singleYaxis, singleYaxisIdx) =>\r\n                  singleYaxis.graphs.map((graph, graphIdx) => {\r\n                    const stateGraph = fullState.subCharts[subchartIdx].yaxis[0].graphs[graphIdx];\r\n                    // const type = stateGraph.type;\r\n                    const indicatorType = isIndicatorGraph(stateGraph) ? stateGraph.indicator.type : null;\r\n                    if (isIndicatorGraph(stateGraph) && stateGraph.data.length > 0) {\r\n                      const indicatorLines = stateGraph.data[stateGraph.data.length - 1].prices;\r\n\r\n                      if (indicatorType === \"line\") {\r\n                        return indicatorLines.map((indicatorDataSeries, indDataSeriesIdx) => (\r\n                          <CLineChart\r\n                            fullState={fullState}\r\n                            subchartIdx={subchartIdx}\r\n                            yaxisIdx={0}\r\n                            graphIdx={graphIdx}\r\n                            key={`${subchartIdx}-${graphIdx}-${indDataSeriesIdx}`}\r\n                            indSeriesIdx={indDataSeriesIdx}\r\n                          />\r\n                        ));\r\n                      } else if (indicatorType === \"bars\") {\r\n                        return (\r\n                          <CBarChart\r\n                            fullState={fullState}\r\n                            subchartIdx={subchartIdx}\r\n                            yaxisIdx={0}\r\n                            graphIdx={graphIdx}\r\n                            key={`${subchartIdx}-${graphIdx}`}\r\n                          />\r\n                        );\r\n                      }\r\n                    }\r\n                    return null;\r\n                  })\r\n                )\r\n              )}\r\n              {/* NEW TLINE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */}\r\n              {!!fullState.pointer.move.isMoving && fullState.draw.pixXy.length >= 1 ? (\r\n                <Line\r\n                  x={0}\r\n                  y={0}\r\n                  points={[\r\n                    fullState.draw.pixXy[0][0],\r\n                    fullState.draw.pixXy[0][1],\r\n                    !!fullState.pointer?.chartPointer.move.x\r\n                      ? fullState.methods.xToPix(fullState.pointer.chartPointer.move.x)\r\n                      : fullState.pointer.move.xy[0],\r\n                    !!fullState.pointer?.chartPointer?.move.snapDatasets?.[0]?.pixYSnap\r\n                      ? fullState.pointer?.chartPointer?.move.snapDatasets[0].pixYSnap\r\n                      : fullState.pointer.move.xy[1],\r\n                  ]}\r\n                  stroke={\"red\"}\r\n                  strokeWidth={1}\r\n                />\r\n              ) : null}\r\n              {/* EXISTING TLINES!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! */}\r\n              {0 in fullState.subCharts\r\n                ? fullState.subCharts[0].yaxis[0].tools.map((tool, toolIdx) => {\r\n                    if (tool.type === \"trendline\" && tool.xy.length === 2)\r\n                      return (\r\n                        <CTrendline\r\n                          mode=\"trendline\"\r\n                          subchartTop={fullState.subCharts[0].top}\r\n                          subchartBottom={fullState.subCharts[0].bottom}\r\n                          pixXy={[\r\n                            [fullState.methods.xToPix(tool.xy[0][0]), fullState.methods.yToPix(tool.xy[0][1], 0, 0)],\r\n                            [fullState.methods.xToPix(tool.xy[1][0]), fullState.methods.yToPix(tool.xy[1][1], 0, 0)],\r\n                          ]}\r\n                          style={{ anchorColor: tool.style.anchorColor, strokeColor: tool.style.strokeColor }}\r\n                        />\r\n                      );\r\n                    else if (tool.type === \"vline\" && tool.xy.length === 1)\r\n                      return (\r\n                        <CVline\r\n                          mode=\"extendUpDown\"\r\n                          subchartTop={fullState.subCharts[0].top}\r\n                          subchartBottom={fullState.subCharts[0].bottom}\r\n                          pixXy={[\r\n                            [fullState.methods.xToPix(tool.xy[0][0]), fullState.methods.yToPix(tool.xy[0][1], 0, 0)],\r\n                          ]}\r\n                          style={{ anchorColor: tool.style.anchorColor, strokeColor: tool.style.strokeColor }}\r\n                        />\r\n                      );\r\n                    else if (tool.type === \"hline\" && tool.xy.length === 1)\r\n                      return (\r\n                        <CHline\r\n                          mode=\"extendLeftRight\"\r\n                          pixXstart={0}\r\n                          pixXend={fullState.containerSize.width - fullState.yaxis.widthYAxis}\r\n                          pixXy={[\r\n                            [fullState.methods.xToPix(tool.xy[0][0]), fullState.methods.yToPix(tool.xy[0][1], 0, 0)],\r\n                          ]}\r\n                          style={{ anchorColor: tool.style.anchorColor, strokeColor: tool.style.strokeColor }}\r\n                        />\r\n                      );\r\n                    else return null;\r\n                  })\r\n                : null}\r\n            </Layer>\r\n\r\n            {/*  Canvas Layer 5 (before 0) - axis bg rects + future chartbgcolor? */}\r\n            <Layer>\r\n              <Rect\r\n                x={0 + 0.5}\r\n                y={containerHeight - heightXAxis + 0.5}\r\n                width={containerWidth}\r\n                height={heightXAxis}\r\n                fill={ChartState.xaxis.style.fillColor}\r\n                stroke={ChartState.xaxis.style.strokeColor}\r\n                strokeWidth={1}\r\n              />\r\n              {fullState.subCharts.map((subchart, subchartIdx) => (\r\n                <React.Fragment key={subchartIdx}>\r\n                  <Rect\r\n                    // key={`subchartPrimaryYaxis-${subchartIdx}`}\r\n                    x={containerWidth - widthYAxis + 0.5}\r\n                    y={subchart.top + 0.5}\r\n                    width={widthYAxis}\r\n                    height={subchart.bottom - subchart.top}\r\n                    // fill={ChartState.xaxis.style.fillColor}\r\n                    stroke={ChartState.xaxis.style.strokeColor}\r\n                    strokeWidth={1}\r\n                  />\r\n                  <Rect\r\n                    // key={`subchartBorder-${subchartIdx}`}\r\n                    x={0 + 0.5}\r\n                    y={subchart.top + 0.5}\r\n                    width={containerWidth - widthYAxis}\r\n                    height={subchart.bottom - subchart.top}\r\n                    stroke={ChartState.xaxis.style.strokeColor}\r\n                    strokeWidth={1}\r\n                  />\r\n                </React.Fragment>\r\n              ))}\r\n            </Layer>\r\n            {/*  Canvas Layer 6 before 1 - x axis */}\r\n            <Layer>\r\n              {xAxis.map((xaxisTick, xaxisTickIdx) => {\r\n                return (\r\n                  <React.Fragment key={xaxisTickIdx}>\r\n                    <Line\r\n                      x={xaxisTick.x}\r\n                      y={ChartState.containerSize.height - 1 - heightXAxis + 0.5}\r\n                      points={[0, 0, 0, heightTickMarkLines]}\r\n                      stroke={ChartState.xaxis.style.strokeColor}\r\n                      strokeWidth={1}\r\n                    />\r\n                    {!!ChartState.grid.useGridX ? (\r\n                      <Line\r\n                        x={xaxisTick.x}\r\n                        y={0 + 0.5}\r\n                        points={[0, 0, 0, ChartState.containerSize.height - 1 - heightXAxis + 0.5]}\r\n                        stroke={ChartState.grid.style.strokeColor}\r\n                        strokeWidth={1}\r\n                      />\r\n                    ) : null}\r\n                    <Shape\r\n                      sceneFunc={(context, shape) => {\r\n                        // context.fillS\r\n                        const ctx = context._context;\r\n                        ctx.font = ChartState.xaxis.style.fontSize + \"px \" + ChartState.xaxis.style.fontName;\r\n                        ctx.fillStyle = ChartState.xaxis.style.fontColor;\r\n                        ctx.textAlign = \"center\";\r\n                        ctx.textBaseline = \"top\";\r\n                        ctx.fillText(\r\n                          xaxisTick.dateString,\r\n                          xaxisTick.x,\r\n                          ChartState.containerSize.height - 1 - heightXAxis + 0.5 + 20 + 5 // additional 5px distance to end of tickmark\r\n                        );\r\n                        // (!) Konva specific method, it is very important\r\n                        context.fillStrokeShape(shape);\r\n                      }}\r\n                      // fill=\"#333\"\r\n                      // stroke={ChartState.options.xAxis.style.fontColor}\r\n                      // strokeWidth={1}\r\n                    />\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n            </Layer>\r\n            {/*  Canvas Layer 7 before 2 - y axis */}\r\n            <Layer>\r\n              {fullState.subCharts.map((subchart, subchartIdx) => {\r\n                return subchart.yaxis.map((singleYaxis, singleYaxisIdx) => {\r\n                  const yAxisTicks = singleYaxis.drawTicks;\r\n\r\n                  // const yAxisTicks =\r\n                  //   subchartIdx === 0 ? subchart.yaxis[0] : subchart.yaxis[0].slice(0, subchart.yaxis[0].length - 1);\r\n                  return yAxisTicks.map((yaxisTick, yaxisTickIdx) => {\r\n                    return (\r\n                      <React.Fragment key={yaxisTick.label}>\r\n                        <Line\r\n                          x={ChartState.containerSize.width - 1 - widthYAxis + 0.5}\r\n                          y={yaxisTick.pixY + 0.5}\r\n                          points={[0, 0, widthTickmarkLines, 0]}\r\n                          stroke={ChartState.xaxis.style.strokeColor}\r\n                          strokeWidth={1}\r\n                        />\r\n                        {!!ChartState.grid.useGridY ? (\r\n                          <Line\r\n                            x={0 + 0.5}\r\n                            y={yaxisTick.pixY + 0.5}\r\n                            points={[0, 0, ChartState.containerSize.width - 1 + 0.5, 0]}\r\n                            stroke={ChartState.grid.style.strokeColor}\r\n                            strokeWidth={1}\r\n                          />\r\n                        ) : null}\r\n                        <Shape\r\n                          sceneFunc={(context, shape) => {\r\n                            // context.fillS\r\n                            const ctx = context._context;\r\n                            ctx.font = ChartState.yaxis.style.fontSize + \"px \" + ChartState.yaxis.style.fontName;\r\n                            ctx.fillStyle = ChartState.yaxis.style.fontColor;\r\n                            ctx.textAlign = \"left\";\r\n                            ctx.textBaseline = \"middle\";\r\n                            ctx.fillText(\r\n                              yaxisTick.label,\r\n                              ChartState.containerSize.width - 1 - widthYAxis + widthTickmarkLines + 5 + 0.5,\r\n                              yaxisTick.pixY // additional 5px distance to end of tickmark\r\n                            );\r\n                            // (!) Konva specific method, it is very important\r\n                            context.fillStrokeShape(shape);\r\n                          }}\r\n                        />\r\n                      </React.Fragment>\r\n                    );\r\n                  });\r\n                });\r\n              })}\r\n            </Layer>\r\n            {/*  Canvas Layer 4 - crosshair */}\r\n            <Layer>\r\n              {!!ChartState.pointer.move?.xy && !!ChartState.pointer.isHovering ? (\r\n                <CChartCrosshair fullState={fullState} />\r\n              ) : null}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n        {/* <CChartMenu\r\n          ChartState={fullState}\r\n          ChartStateDispatch={ChartStateDispatch}\r\n          active={ChartMenuActive}\r\n          onNavigate={(newLoc) => setChartMenuActive(newLoc)}\r\n        /> */}\r\n\r\n        {!!fullState.xaxis.xEnd && xAxis.length > 0\r\n          ? fullState.subCharts.map((subchart, subchartIdx) =>\r\n              subchart.yaxis[0].graphs.map((graph, graphIdx) => {\r\n                const name =\r\n                  isIndicatorGraph(graph) && graph.indicator.params.length > 0\r\n                    ? `${graph.indicator.name}(${graph.indicator.params[0].val})`\r\n                    : isIndicatorGraph(graph) && graph.indicator.params.length === 0\r\n                    ? `${graph.indicator.name}`\r\n                    : graph.name;\r\n                if (!graph.datasets.last) return null;\r\n\r\n                const tmpDataset: Dataset =\r\n                  (fullState.pointer.isHovering &&\r\n                  subchartIdx === fullState.pointer?.chartPointer?.move.subchartIdx &&\r\n                  fullState.pointer?.chartPointer?.move.snapDatasets?.[0]?.graphIdx === graphIdx\r\n                    ? fullState.pointer?.chartPointer?.move?.snapDatasets?.[0]?.data\r\n                    : fullState.pointer.isHovering &&\r\n                      // subchartIdx === fullState.pointer?.chartPointer?.move.subchartIdx &&\r\n                      fullState.pointer.chartPointer.move.x !== null\r\n                    ? graph.data[fullState.pointer.chartPointer.move.x]\r\n                    : graph.datasets.last.data) || graph.datasets.last.data;\r\n\r\n                return (\r\n                  <CChartLabel\r\n                    key={`${subchartIdx}-${graphIdx}`}\r\n                    onClick={() => setChartMenuActive(\"settings\")}\r\n                    name={name}\r\n                    dataset={tmpDataset}\r\n                    decimals={\r\n                      isIndicatorGraph(graph) && graph.indicator.default.decimals !== undefined\r\n                        ? graph.indicator.default.decimals\r\n                        : graph.decimals\r\n                    }\r\n                    top={subchart.top + graphIdx * 30} // get height automatically!\r\n                  />\r\n                );\r\n              })\r\n            )\r\n          : null}\r\n        <div style={{ position: \"absolute\", top: (fullState.subCharts?.[0]?.bottom ?? 0) - 64 - 10, left: 10 }}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            style={{ width: 64, height: 64, textTransform: \"none\", borderRadius: 5, opacity: 0.8 }}\r\n            onClick={() => setChartMenu2Open(\"menu\")}\r\n          >\r\n            <div style={{ position: \"relative\", top: 0, height: 64 }}>\r\n              <Icon path={mdiMenu} size=\"64px\" color=\"#fff\" />\r\n            </div>\r\n          </Button>\r\n        </div>\r\n\r\n        <CChartMenu2\r\n          open={ChartMenu2Open}\r\n          onClose={() => {\r\n            setChartMenu2Open(null);\r\n          }}\r\n          onNavigate={(target) => setChartMenu2Open(target)}\r\n          ChartState={fullState}\r\n          ChartStateDispatch={ChartStateDispatch}\r\n        />\r\n      </ThemeProvider>\r\n    </React.Fragment>\r\n    // </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { CChart } from \"../Components/Chart/CChart\";\r\nimport { csvParse } from \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\nimport { ChartDataset } from \"../Components/Chart/Types/CChartTypes\";\r\n\r\nfunction parseData(parse: any) {\r\n  return function (d: any) {\r\n    d.date = parse(d.date);\r\n    d.open = +d.open;\r\n    d.high = +d.high;\r\n    d.low = +d.low;\r\n    d.close = +d.close;\r\n    d.volume = +d.volume;\r\n\r\n    return d;\r\n  };\r\n}\r\nconst parseDate = timeParse(\"%Y-%m-%d\");\r\n\r\nexport function getData() {\r\n  const promiseMSFT = fetch(\"https://raw.githubusercontent.com/carmnk/resources/main/data/csv/BAYN.DE.csv\")\r\n    .then((response) => {\r\n      return response.text();\r\n    })\r\n    .then((data) => {\r\n      //   console.log(data);\r\n      return csvParse(data, parseData(parseDate));\r\n    })\r\n    .then((res) => {\r\n      //   console.log(res);s\r\n      return res;\r\n    });\r\n  return promiseMSFT;\r\n}\r\n\r\nexport const ChartTest = () => {\r\n  const [Data, setData] = React.useState<any>(null);\r\n  const [W, setW] = React.useState(400);\r\n  React.useEffect(() => {\r\n    getData().then((res) => setData(res));\r\n  }, []);\r\n\r\n  if (!Data) return null;\r\n  console.log(\"DATA:\", [{ data: Data, name: \"coolChart\" }]);\r\n\r\n  return (\r\n    <CChart\r\n      chartData={[{ data: Data as unknown as ChartDataset[], name: \"coolChart\" }]}\r\n      viewMode=\"fullscreen\"\r\n      style=\"TODO\"\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route, Link, useLocation, BrowserRouter } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Layout from \"./Layout\";\nimport { ChartTest } from \"./Pages/Chart\";\n\nconst routes = [\n  {\n    content: (props: any) => {\n      return <Home {...props} />;\n    },\n    path: \"/\",\n    exact: true,\n  },\n  {\n    content: (props: any) => {\n      return <ChartTest {...props} />;\n    },\n    path: \"/chart\",\n    exact: false,\n  },\n];\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#009688\",\n    },\n    secondary: {\n      main: \"#f50057\",\n    },\n    type: \"light\",\n  },\n  spacing: (factor) => `${0.5 * factor}rem`,\n  overrides: { MuiCssBaseline: { \"@global\": { body: {boxSizing: \"border-box\"}}} },\n});\n\ntheme.typography.h1 = { fontFamily: \"'Open Sans', sans-serif, Arial\", fontWeight: 600, fontSize: \"4rem\", lineHeight: 1.167, };\ntheme.typography.h2 = {\n  fontFamily: \"'Open Sans', sans-serif, Arial\",\n  fontWeight: 600,\n  fontSize: \"2.5rem\",\n  lineHeight: 1.167,\n};\ntheme.typography.h3 = {\n  fontFamily: \"'Open Sans', sans-serif, Arial\",\n  fontWeight: 600,\n  fontSize: \"2rem\",\n  lineHeight: 1.167,\n};\ntheme.typography.h4 = {\n  fontFamily: \"'Open Sans', sans-serif, Arial\",\n  fontWeight: 600,\n  fontSize: \"1.88rem\",\n  lineHeight: 1.167,\n};\ntheme.typography.h5 = {\n  fontFamily: \"'Open Sans', sans-serif, Arial\",\n  fontWeight: 600,\n  fontSize: \"1.44rem\",\n  lineHeight: 1.167,\n};\ntheme.typography.h6 = {\n  fontFamily: \"'Open Sans', sans-serif, Arial\",\n  fontWeight: 600,\n  fontSize: \"1.25rem\",\n  lineHeight: 1.167,\n};\ntheme.typography.fontFamily = \"'Quattrocento Sans', sans-serif\" ;\ntheme = responsiveFontSizes(theme);\n//test dev build flag\n//if (\"NODE_ENV\" in process.env) console.log(process.env.NODE_ENV);\n\nfunction App() {\n  const [MenuOpen, setMenuOpen] = React.useState(false);\n  const setMenuState = (newState?: boolean) => {\n    if (newState === true || newState === false) setMenuOpen(newState);\n    else setMenuOpen(!MenuOpen);\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Router basename=\"/\">\n        <Switch>\n          {routes.map((route, index) => (\n            <Route\n              exact={!!route.exact ? route.exact : true}\n              key={index}\n              path={route.path}\n              children={<route.content menuOpen={MenuOpen} setMenuOpen={setMenuState} />}\n            />\n          ))}\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}